%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.0
%%For: Irina
%%CreationDate: 6/28/2021
%%BoundingBox: 0 0 1901 1000
%%HiResBoundingBox: 0 0 1900.0002 999.9998
%%CropBox: 0 0 1900.0002 999.9998
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.0.0 x60 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164519, 2020/08/25-17:54:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">online education 3</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator 25.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2021-06-28T18:55:53+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-06-28T18:55:54+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-06-28T18:55:54+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>136</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVskioKsfkMBNJAtDPdSH7Pwj8cqMy2iAUjI56sfvyN&#xA;llQcJJB0Y/fjZWgqpdSD7XxDJCZYmAREcqSDbr3GWCQLUY0vySHYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXMQoJPQYlQld5diNGmcEgEAKKV+IgAbkDqe+Y5Nt4F&#xA;NQyrLEkqV4uoZaihoRXpgZL8VdirzjzjeecbHV5pIbh4LCZv9EpJGAQqryoK8hue+KEiHmTzkDUa&#xA;hID4+pH/AFxtaVF80ed2YKNSkqTQfvI/65LiLHhDR80+dwaHUpdv+LI/648RXhDv8U+dv+rlL/yM&#xA;jx4yvCGSeRdR8532vWjXl1JPptJjODJGR8EdNwDXZ5EyUSSWMgA9Py1rdirsVdirsVdirsVdiqnN&#xA;K8ZXihevUiu3TwBwEpCkLuYrX6uwNaUNd96V2B7b42tKsEkriskfp9KCtev0DEKVTCh2KuxV2Kux&#xA;V2KuxV2KuxV2KqN01I6eJyGQ7M4DdBkAggioOxByludirsVdirFvPen3d1DZtbgkRs4ejhN2Ap16&#xA;/ZOBWIfoTVP5G/5Gj+mC1pUttB1Z7mJFRuTOoX98BuT40wjmpGy2XQtVWRwUaoJB/ejx+WJKgKb6&#xA;PqMaF3BVV3JMo/pja0zH8vI5FMTPWjLd8SW5dGth4DLsbVNneWNbsVdirsVdirsVdirsVY75q82T&#xA;6PeaZplhpz6rrGrGb6paLIkCCO2VWmkkleoUKHXsSScBKQHRefNBUrb6hKbDUkntbG8sXVpDBeXs&#xA;InigaWNWib4D9tW4+JGNrSVH84fJ0l7o9vZvc3UWsXElvFdLaXSxr6cPq86vEOaN8I5LUUPKvFSQ&#xA;OIJ4Srp+bn5ePZ3N4urVt7Qxeq/1e5qVnkMMTxr6fKWN5BxDxgr748QXhLdl+bf5eXouWh1YAWkE&#xA;t1cGWC4h4xQMFl/vY0qyMwDIPiFemPEF4SqRfml5Hlexjjv5Gn1KeW1tLf6pd+sZrf0/VR4vS5xl&#xA;BOjHmB8J5dN8PEF4SyvCxdirsVdirsVdirz780tc1SCW00ixn+qLcRvNPPz9LkFrROZpTodu+wwh&#xA;57tvU5ImOOB4bBJPL4WwTSdf1zQr20ljvFmtZbiGK5tfVEwaOQpzoobZgsnwt/MKHuMjMWHW9lan&#xA;JizRHFcZGiLv8f2h7VmO94wq+n1nX9e1TTrXU5dK0/SjFC31UKJppZIxIzGRw3FVDAALle5LZsAs&#xA;/wAB6gI6nzXrXL/mIH/NOHw/Mo8TyCmPI2oV+LzVrRXuBcgH7+ODg8ynjHcGpPy89UUk8y684rWj&#xA;XtRX/gMfD8yvieQYRrV5rHkvz5pGljUrjU9I1h44WivG9SRHmcxqyvSvwsvyIPTvkeRpltKNvTNO&#xA;/wCOha/8Zo/+JDLI8w1S5Kdz/vRL/rt+vAeajkkmvTkenADsfjb9QwhSyXyH/d2n+pef8TtsvxtM&#xA;2aZY1uxV2KuxV2KuxV2KuxVjvmvyf+nLrTdRtdRn0nWNIaU2N/AsclEuFCTRvFKro6uqjqNiAcBC&#xA;QUin/KZZtaj1STX7129exvbqNo7Y+veafEII52IjFC0exUfDXemDhTxITTfyTs9PeCeDWJ1uoL1r&#xA;xSsFvHBxlt2tpohboqxr6sbnkyAb748KeNdZ/kpp0CRJNq93dfVFsrfTjKkI9CzsLsXccH7tU58n&#xA;ADO29MeFeNU1H8ldC1KySyvLydoF/SpPEKrV1adJyQd94XjHHbfvjwo40b5X/KzTtAvNKu4bkNLp&#xA;f108Yra3to5WvkgjZmSBUWqrbLv1P3DERpTK2b5Ji7FXYqtmMoicxAGUKfTDdC1Nq/Tiqy1a4aBT&#xA;cKEmNeSjwqad27dqn54qlXmjW5dMtUENBNNy4uRUKq05GnjvmHrNQcYFcy5ejwDITfIPLPMMt35i&#xA;WJGumS5hYtDLKvqKVI+JCoKkA9djsR9BwMernA2TbLtLsXBq4CJHDIciEHpXkvUI763vL26hC2zr&#xA;NDbwOu8qHkjPIzKaK3xBQo3A3I2y7NrZSFR2+Idd2X7NYtNPjmTOQ5bUHouga1dS3X1O5b1CwPpv&#xA;tWqipFR1FBkNNnkZcMnd6nBEDiCA8tIf8V+awRT/AEuA7+BtkIzMhzLiT5BNPMHmHTNGt/Xv5fTQ&#xA;1EaD7TsBXitaCvzNMmS1xDzrU/z/ANCsJOEujajH6gP1aWZYY4pCP8tZJBT3FciC2cC/yP8Anrpf&#xA;mPX10O9019JvJiUtmaUTI7rvwY8I+LHtsa43vRUwoWlH5wMF/MjyYxUMBeWRKnoaXTbGmQl9TOH0&#xA;F6zY3lu17bqLOJSZEAYF6irDcVbLYyF8miQ25qV3qNnFJK0lpCFVm5MS/j/rYmQvkoHmx271+wmn&#xA;Z/0VbuOiszS1oPk4xvyWvNl3k2KO6tYdQiQWqwmeL6tHUofU9IkkuWbYx+OWwapsoyxg7FXYq7FX&#xA;Yq7FXYq7FXl/55am1ha6TN+mfqEUTXE0+nfXLjTWvVjjXiIruBW4yxNRkRtmPyyE2cEtg/N7VFv7&#xA;TSAEgvZr+ySGxu0Y3Y0240v6yZZTUAyC4IRm8dqY8SeFI7D86vOMujS3v1/TLhHtdMuJr5Ld1t9O&#xA;mvLsW8ttcfvjzZY/3v2lPXamDiK8AVrr85POMOlxy/W7CJYo9SlstUktnMOstY3KQwQW0YlrG06M&#xA;W2Le21ceIrwhHeYfO3nme0vtVOpwaJpOleYrLTLiIWzM8UJa3llluZhKoKL63F1CgMKiu+EkqAHs&#xA;8EiyQRyK4lV1DLIv2WBFeQ67HJta/FXYq7FXYqoy3IU8V3b8MhKdM4wtIfMenTalboUPKaInih2B&#xA;DdR+GYOqxHINuYc3S5RjO/IsPj8tX0MvMW0pI6ClQPuzXHFPudiM0O9Xuo9QjiC3Fv6SbAN6KIdv&#xA;8oKD+OCYkBuK+CYGJOxv4pv5b0iZZVvphxXifRWu55ClfuzK0mA3xFxdXnFcIUtEcL5q81/zfWLT&#xA;8bKLM6PMuFPkHkf5raPqXmz8wLW1nLQ6DpsfpgllrI9eU7RpXkK/AhYjtlGfJwudotP4nuY1J5K1&#xA;G88wSabplr/uA1aDnHCGDJHMAFSSMKX+PnxIp1U0wYJGQrqy1uMQPEBQLzvlqOh+YEacFL/TLhGI&#xA;J3DwMCtD/sRTLSS4/MPd/wA4t/zE8mkbj61ZGo8PrTYJfU1w+kvQptYsdJmtbu9Ypb+vGrSAcuO9&#xA;akDem3bLYCy4Wr1MMMOKfImmP+YNXWXWDbo4eJ2LRlTVaEVDbda9slw8y0ZNfCOWGIbmYv4Vt80L&#xA;kXOeieQ5mj0SnVfVeo+7JRlTGUbZWkiuKqfoy8G2kil2FDsVdirsVdirsVdiqyVoKqsvHc8lDU6q&#xA;RQivcHFVkn1WZXjZlPrIUYAipWh8N+5wWlJB5S8qny/ZaAIh+i7BreS2i9Rqg2bI8JZ68m4+mvU7&#xA;jBsmynnK1JWOqfu6FV2+Gmwp4daYbRTZe2lXgWSRX241DA+1MbRTfrQ9PUX7x2w2tONxAvWRRtXq&#xA;OmC002ssTEBXUk7gAg4bQuxVSuZeC0H2m/VkJypnCNoLKW52KvPrvz5rQlntvQWGRXPpmhDqqt0Y&#xA;PUdNuma+Wpk73H2bj2N2yHy35ii1iB7a7VBdKPijp8Lp4gGv0jL8OYTFHm4Os0hwnij9KfRRRxRr&#xA;HGOKIKKvgBmQAAKDgkkmyw7RSf8AHHm4dvUsP+oRchH6iyl9IW6x5cE+sQXKQGS2lb/SFR+BDmo5&#xA;EkPtvvQZRmxGUgejsNHqhDGY3UubF9ZuovL2k32qafc28+sWcEklsWEn1eJYx6j/ABUUvIwTigG1&#xA;TuchgkIHnZLfrYSywvhoR+fyfM2pahd6nqNxf3Tc7q6kaSVh3ZjXbMh14FPoH83oYrfzr5LoaKl1&#xA;aIWY/sx3IoT9+MvqDXD6SybzzbNN5elZdzC6SEDwB4n8Grl+I7uk7cxmWmNfwkFgMF3JDFHPXk0a&#xA;0Sv3D7syCNnicOplDKJ8zHkyTTZZJbCCSQ8nZasfHMeQ3fQNBklPBGUtyQ9K8kf8cT/nq/8ADIuW&#xA;yFHZG5LkgaQRaPRw6hh3y8G2gim8KHYq7FXYq7FXYqhr1CeBEHrMvIrvShp3+eApCjGjKaizAr8J&#xA;3psB79sHwS0ikkq1iAwFQa7HcL1p4b9cfgvxbRZDG7SWg9YndQaAg/FWu/7QxVopKhDx2YDc+zAH&#xA;iAO/vg+CqsECPyMlsIuw3qSOnbCApKqbK1IA9JaDoO2+2GgiyujtoI25RoFNKVHh1xpbVMKGKavq&#xA;V3d6m1pZluER4twryZh1G3YZTLctg2DDvy2k82R655ht9TvJ797eYM1tJyARCz/3SMBx2psOvv1z&#xA;GxTMpSHc7LVYYwxwkP4v2PQrrUrC0tPrd1cRwWu376Rgq79NzlkpACy4kISkaiLLVxY6feoGngjn&#xA;Uiqsyhtj4HBKEZcwyhlnDkSHnOrWVzoesEQsU4H1LaX/ACT0+7oc1mSJxy2ejwZI58e/xZ15e12H&#xA;VrTlslzHQTxeB/mHsc2GHKJjzdFq9KcUv6PRJ/LtpNP5683FVIT1bEGQj4drRa7+O+WQiTIuPOVR&#xA;CdecUuLTy88dlGzyTusUroCWCMCWO3Y04/TjqrGPbq3dnCMswMjy3YFP+XGt695e1SAp9Uee0mS0&#xA;Ew4l5mQ+mCDuq8qVamYWn0sibOztNb2hCMeGJ4iU70D8h/IVh5Vg0e90+G8vgFkudVKgXBnFGLRy&#xA;U5IgI2TpTqDvm0GIVTz5zSu2DfnfCY/PPlCJ96XluPYg3K5jTFScnEbiXsl7ZWclnOkkEbo0bBlK&#xA;ihBU1G2WNEoiQIPIvMZ/ImipbtWa4CpuPiT6B9jJeMXR/wChzT3dz+Y/4l6TbaBotvBHDFYwcIlC&#xA;ITGhNFFBUkVJyJd3jgIRERyCtLacbf0rQLAK1KoOAPiKr0+eLNXjDrGqu3NwAGelKmm5p2xVGWZ2&#xA;YfI5bjasiIyxrdirsVdirsVdiq2WWOKNpJWCRqKs7GgA9ycEpCIs7BMYkmhzQP8AiDRf+WuP7zmN&#xA;+dw/zg5P5LN/NLv8QaL/AMtcf3nH87h/nBfyWb+aXf4g0X/lrj+84/ncP84L+SzfzSirW9tLtC9t&#xA;Ksqg0JU1offLseWMxcTbTkxSgakKVssa3Yq7FUPqN2LSxnuO8akrX+Y7L+OAlIYfouq6bpTve6nc&#xA;JbwshHqyHYszCg+Z3ynjEdyab4YZZDURZZlayx3FnDNG/qRTRq6SdOSsoIP01y4Gw0yiQSD0ebSJ&#xA;c33na4Gq2pTR9IkYWlsfijkmfcTcSAD8JrTtXbNeYmeQ2PTF23iRxYBwG5z5+Q7mdxyxyoHjYMp6&#xA;EZkOvSXzbo36Q00vGtbm2q8fiR+0v05j6jHxR8w52g1Hhzo/SWAadqFxp92l1btR0O47MO6n2Oa6&#xA;EzE2Hf5sUckeEvV9O1Syv9DkvrZQoaNjNGKVEipRlY+NAN/Cmb3FkE42HktRgljnwlNB+7iHqN9h&#xA;ficnbYbkk5a45KXWfmfy9e3f1S11CCa5NQsauCWp14/zfRi4uPW4Zy4YyBKLtwDcXTdW9RVr7CNS&#xA;B97HAHLeJ/8AOQirH5u8l3Cj4/rcQPh8FwhH/Esxs/1BytP9JZpL54Q842gJG6tQfR/NihJbjVbK&#xA;fiH9URqQxRQo5UNdzXBS2nQ8+KSB6B39v+bsKGTWFy9zbLKwAYk7DpsaYhSiMKoqzX4WbxNPuy3G&#xA;GrIURljW7FXYq7FXYq7FWO+dhcHT4SlfREn72njT4a+2antcS8MVyvd2vZJjxm+dbMXthpRA+smU&#xA;H4a+mAfHl18dqZpsfhfxX8HcT8X+Gvi6uk+onwy+nX95uKke22N4rHOk1lo8rXf7hqj+/oa1Pw7d&#xA;eP8ADD+5/pI/ff0Uw8mLcHViY6+kI29bwp+z+OZXZQl4u3Kt3F7VMfC353szjOkecdirsVSLzhMU&#xA;0xIwaepKAR4gAn9dMhPkyiwnXNFTWNK+ptKYSSrpIByoV8RUVzFzYuONObpNScM+KrQCef8AzT5M&#xA;igsdTii1ax9PhZzAmF14CgRmCtXiKdR9OUjNkxbH1BzJYtPqCZAnHLr1CSH84bq71F5tQsY1hcgK&#xA;sBZXUDb9skOfuw/miTuHGOkA5FnPlnzRZXsf1mxl9SGvGaI7Mp91PfL4zEhs40oGJosxVgyhlNVI&#xA;qD7HJIYH5q8sT29y15ZRF7aU8njQVKMeuw/ZOa7UYCDY5O/0OtEo8Mj6h9qt+XpuW1TUtNZni9CO&#xA;3kuYHWn96xZeu4+BCPpy/QxkCbcTtXLCQFbkdWXedbW+u/K2oW9iGa4dBRE+0yB1MijxLICKZs3l&#xA;e0oSngkI86/t+x5dDdaRqd4un6Jo72t+k0R025QsZF4OObXHxGlF39sXl45MeWXBix8M7HCevPfi&#xA;ezQIwkuGI+F5AyGtagRqv6wcAe3Lxj/nIODn5k8kmtPUvVQe1LiHf/hsxs/1BytP9JZ2fJ1kSSWU&#xA;k7n4P+bsaRbX+DbH+Zf+A/5uxpbSXUrGz0/VYbKS3UxylCtx02Y0J4/5J98FLbNbO2+rW6w8ufGv&#xA;xUp1NffCEIhEZ2CjqcIFoJpHooRQo6DMgCmgm28KHYq7FXYq7FXYq06I6lXUMrChUioIwEA7FIJG&#xA;4Qf6E0j/AJY4f+AGUflMX80fJv8AzeX+cfm79B6P/wAscX/ADB+TxfzR8l/N5f5xd+g9H/5Y4v8A&#xA;gBj+TxfzR8l/N5f5xRNva21unCCJYk6lUAUV+jLoY4wFRFNU8kpG5G1TJsHYq7FUg85RsdPhcdEl&#xA;ofpU5CbKLGbeQMnHuv6sqZoPW9CtNZsfql0zhQ4kSROIZWFRtUEd8hOAkKLZDIYmwwDzN+X82mWj&#xA;XlnK11bJvNGygOi/zbfaHjttmLkwcIsOZi1HEaKQ+XtcudG1KO5iJZPszR9pIz1Hz8MqhPhNtuSA&#xA;kKL6S8vOl/otpeW8ivDMnKNt/s1NM2cY8QsOrMuE0Ux+qSeI/H+mHwyjxAxTywnD8yfNqsRyEGnU&#xA;H/PJ8jjFTLPIbgGZXNzb20Lz3EixQoKu7GgGXykALLTCBkaAsvPfMPnmW6d7bR1MMTni9yBSWT/V&#xA;7qPx+WavPrDLaHJ3+j7KjD1ZOf2ftR3kaHzTbOEmt2GmSHk3rniyk/tID8W/yplmjGUcx6WntOWC&#xA;QsH1+X6WDf8AOR0wXWPJyo9Jo7svQH4lBmg4t4jdTTL8/wBQdfp/pL1/CxdirHvOun/WNMFyg/e2&#xA;h5e/Btm/gcCp5pLve2FvcjpLGrMT4kb/AI5OMSWJkAmkcSxig69zlsY00mVr8kh2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxVAao8csElrLA7xuKFhsPEEHfpkJFnGLC5tKvInPBeYHRgaH7sqZ0sNt&#xA;qP8AI+FabFlqL7cGoetSB+vAtF515y/L/UdPMmp2No9zYgGWa2tgHmjoQCET9qtdqdMw8mA3tyc7&#xA;FmFVLmzz8n4/Othp7Wuq2CWWjhnezhcO985kIIeWkrRQinVFFa9aGpbLwAxFOLqDGRsPSHvLdDRm&#xA;IP8Aqt/TL+IONwl4l+bGieao/NZ8w+Wmuyt3CkU7WJkWZGQceJEdHKsFB2+nMPODxXFzcBHDUmD3&#xA;K/mpdIEuhrs6KahZReOAfGjVyiQlLnZcmE4x3ia9ylBafmXbMXgg1qFu7Rpdqf8AhRkYwI5BlPLx&#xA;CpG0R6v5t/z6/wDfe5O5+bVUPJvSvJPnfzH5m06TVre8W3guIZr6/v8A1AywwuH4p63xOzUooH05&#xA;PHEk2WM5xAoPpY32nn9lh8h/bmZcXCqTQvNP8H+nB6V9Tb3WmSRPE61SRSrgitQwoclcUVJBeV2N&#xA;jppsrgmkEsiwNQnnEW5K21fE4xkKWUTaeo6uvJenyI/XljW3irsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVcQD13xVaY4z1UH6BjS24Rxjoo+4Y0trgAOgpirsVdirsVa4L4D7sVcY0PVQfoxpba&#xA;9KL+RfuGCk270ov5F+4Y0tu9KP8AkH3DDS23wXwH3YobAA6CmKuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:7abeeb68-d472-314f-8ee9-14811b2db8f1</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7abeeb68-d472-314f-8ee9-14811b2db8f1</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:87375b96-f304-e54e-88b2-8bedbee3de79</stRef:instanceID>
            <stRef:documentID>xmp.did:87375b96-f304-e54e-88b2-8bedbee3de79</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:37c23d84-5a26-8748-bfab-c617f790e436</stEvt:instanceID>
                  <stEvt:when>2018-12-10T10:16:46+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7abeeb68-d472-314f-8ee9-14811b2db8f1</stEvt:instanceID>
                  <stEvt:when>2021-06-28T18:55:54+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 25.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1900.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1900 1000 li
1900 0 li
cp
clp
1900 1000 mo
0 1000 li
0 0 li
1900 0 li
1900 1000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
477.259 720.671 mo
309.758 720.671 li
288.106 720.671 270.554 703.119 270.554 681.467 cv
270.554 659.814 288.106 642.263 309.758 642.263 cv
477.259 642.263 li
498.911 642.263 516.464 659.814 516.464 681.467 cv
516.464 703.119 498.911 720.671 477.259 720.671 cv
cp
1 .678431 .411765 rgb
f
310.345 668.35 mo
313.256 668.35 li
313.256 688.867 li
323.32 688.867 li
323.32 691.357 li
310.345 691.357 li
310.345 668.35 li
cp
1 1 1 rgb
f
337.347 681.467 mo
337.347 678.03 335.804 676.171 333.139 676.171 cv
330.754 676.171 328.581 678.099 328.23 681.467 cv
337.347 681.467 li
cp
325.423 682.87 mo
325.423 677.294 329.177 673.891 333.069 673.891 cv
337.418 673.891 339.873 677.013 339.873 681.888 cv
339.873 682.484 339.837 683.116 339.768 683.536 cv
328.264 683.536 li
328.475 687.148 330.684 689.463 333.945 689.463 cv
335.56 689.463 336.927 688.937 338.189 688.131 cv
339.207 690.024 li
337.733 690.971 335.91 691.778 333.595 691.778 cv
329.036 691.778 325.423 688.446 325.423 682.87 cv
cp
f
352.986 687.183 mo
352.986 682.449 li
347.304 683.15 345.341 684.553 345.341 686.727 cv
345.341 688.657 346.674 689.463 348.357 689.463 cv
350.004 689.463 351.338 688.657 352.986 687.183 cv
cp
342.536 686.938 mo
342.536 683.221 345.727 681.361 352.986 680.555 cv
352.986 678.381 352.285 676.276 349.48 676.276 cv
347.515 676.276 345.727 677.188 344.394 678.099 cv
343.271 676.1 li
344.85 675.084 347.235 673.891 349.971 673.891 cv
354.143 673.891 355.897 676.662 355.897 680.906 cv
355.897 691.357 li
353.513 691.357 li
353.267 689.322 li
353.162 689.322 li
351.548 690.655 349.654 691.778 347.515 691.778 cv
344.674 691.778 342.536 689.989 342.536 686.938 cv
cp
f
361.261 674.313 mo
363.645 674.313 li
363.89 677.398 li
363.997 677.398 li
365.154 675.26 366.907 673.891 368.837 673.891 cv
369.572 673.891 370.099 673.997 370.66 674.243 cv
370.099 676.767 li
369.538 676.592 369.152 676.487 368.451 676.487 cv
367.012 676.487 365.295 677.539 364.136 680.415 cv
364.136 691.357 li
361.261 691.357 li
361.261 674.313 li
cp
f
373.429 674.313 mo
375.813 674.313 li
376.059 676.767 li
376.164 676.767 li
377.778 675.154 379.531 673.891 381.88 673.891 cv
385.459 673.891 387.071 676.207 387.071 680.555 cv
387.071 691.357 li
384.196 691.357 li
384.196 680.94 li
384.196 677.749 383.214 676.382 380.969 676.382 cv
379.216 676.382 378.024 677.294 376.304 679.012 cv
376.304 691.357 li
373.429 691.357 li
373.429 674.313 li
cp
f
399.624 674.313 mo
402.007 674.313 li
402.253 676.767 li
402.359 676.767 li
403.832 675.154 405.621 673.891 407.655 673.891 cv
410.25 673.891 411.653 675.119 412.354 677.153 cv
414.143 675.224 415.896 673.891 417.964 673.891 cv
421.473 673.891 423.155 676.207 423.155 680.555 cv
423.155 691.357 li
420.28 691.357 li
420.28 680.94 li
420.28 677.749 419.262 676.382 417.124 676.382 cv
415.791 676.382 414.422 677.259 412.845 679.012 cv
412.845 691.357 li
409.969 691.357 li
409.969 680.94 li
409.969 677.749 408.953 676.382 406.777 676.382 cv
405.515 676.382 404.077 677.259 402.499 679.012 cv
402.499 691.357 li
399.624 691.357 li
399.624 674.313 li
cp
f
440.231 682.87 mo
440.231 678.941 438.267 676.276 435.321 676.276 cv
432.41 676.276 430.411 678.941 430.411 682.87 cv
430.411 686.763 432.41 689.392 435.321 689.392 cv
438.267 689.392 440.231 686.763 440.231 682.87 cv
cp
427.429 682.87 mo
427.429 677.153 431.148 673.891 435.321 673.891 cv
439.494 673.891 443.212 677.153 443.212 682.87 cv
443.212 688.516 439.494 691.778 435.321 691.778 cv
431.148 691.778 427.429 688.516 427.429 682.87 cv
cp
f
447.698 674.313 mo
450.082 674.313 li
450.327 677.398 li
450.432 677.398 li
451.591 675.26 453.344 673.891 455.274 673.891 cv
456.009 673.891 456.536 673.997 457.096 674.243 cv
456.536 676.767 li
455.975 676.592 455.589 676.487 454.887 676.487 cv
453.449 676.487 451.732 677.539 450.573 680.415 cv
450.573 691.357 li
447.698 691.357 li
447.698 674.313 li
cp
f
470.176 681.467 mo
470.176 678.03 468.632 676.171 465.968 676.171 cv
463.583 676.171 461.409 678.099 461.059 681.467 cv
470.176 681.467 li
cp
458.252 682.87 mo
458.252 677.294 462.005 673.891 465.899 673.891 cv
470.247 673.891 472.702 677.013 472.702 681.888 cv
472.702 682.484 472.666 683.116 472.596 683.536 cv
461.093 683.536 li
461.304 687.148 463.513 689.463 466.775 689.463 cv
468.389 689.463 469.755 688.937 471.018 688.131 cv
472.036 690.024 li
470.562 690.971 468.739 691.778 466.423 691.778 cv
461.865 691.778 458.252 688.446 458.252 682.87 cv
cp
f
276.491 288.982 mo
275.254 288.982 274.118 288.738 273.084 288.251 cv
272.049 287.765 271.162 287.07 270.422 286.168 cv
269.681 285.265 269.108 284.17 268.703 282.882 cv
268.297 281.595 268.095 280.15 268.095 278.547 cv
268.095 276.965 268.302 275.535 268.718 274.258 cv
269.134 272.98 269.717 271.89 270.467 270.988 cv
271.217 270.085 272.115 269.396 273.16 268.919 cv
274.204 268.443 275.365 268.204 276.643 268.204 cv
277.819 268.204 278.853 268.448 279.746 268.934 cv
280.638 269.421 281.348 269.979 281.875 270.607 cv
281.054 271.55 li
280.506 270.922 279.867 270.42 279.137 270.044 cv
278.407 269.669 277.586 269.482 276.673 269.482 cv
275.578 269.482 274.589 269.695 273.707 270.12 cv
272.825 270.546 272.074 271.15 271.456 271.93 cv
270.837 272.712 270.366 273.66 270.042 274.775 cv
269.717 275.89 269.555 277.148 269.555 278.547 cv
269.555 279.947 269.717 281.209 270.042 282.335 cv
270.366 283.46 270.833 284.418 271.441 285.209 cv
272.049 286 272.784 286.614 273.647 287.05 cv
274.508 287.486 275.476 287.704 276.551 287.704 cv
277.586 287.704 278.508 287.496 279.32 287.08 cv
280.131 286.665 280.902 286.051 281.632 285.24 cv
282.453 286.122 li
281.682 287.014 280.82 287.714 279.867 288.221 cv
278.914 288.728 277.788 288.982 276.491 288.982 cv
cp
.870588 .823529 .780392 rgb
f
292.766 287.704 mo
293.78 287.704 294.702 287.486 295.534 287.05 cv
296.365 286.614 297.08 285.995 297.679 285.194 cv
298.277 284.393 298.738 283.429 299.063 282.304 cv
299.387 281.178 299.55 279.916 299.55 278.517 cv
299.55 277.138 299.387 275.89 299.063 274.775 cv
298.738 273.66 298.277 272.712 297.679 271.93 cv
297.08 271.15 296.365 270.546 295.534 270.12 cv
294.702 269.695 293.78 269.482 292.766 269.482 cv
291.752 269.482 290.824 269.695 289.983 270.12 cv
289.141 270.546 288.426 271.15 287.837 271.93 cv
287.249 272.712 286.793 273.66 286.469 274.775 cv
286.144 275.89 285.982 277.138 285.982 278.517 cv
285.982 279.916 286.144 281.178 286.469 282.304 cv
286.793 283.429 287.249 284.393 287.837 285.194 cv
288.426 285.995 289.141 286.614 289.983 287.05 cv
290.824 287.486 291.752 287.704 292.766 287.704 cv
cp
292.766 288.982 mo
291.569 288.982 290.464 288.733 289.45 288.236 cv
288.436 287.74 287.564 287.034 286.834 286.122 cv
286.104 285.209 285.536 284.11 285.13 282.821 cv
284.724 281.533 284.522 280.098 284.522 278.517 cv
284.522 276.935 284.724 275.51 285.13 274.242 cv
285.536 272.975 286.104 271.89 286.834 270.988 cv
287.564 270.085 288.436 269.396 289.45 268.919 cv
290.464 268.443 291.569 268.204 292.766 268.204 cv
293.983 268.204 295.098 268.443 296.112 268.919 cv
297.126 269.396 297.998 270.085 298.728 270.988 cv
299.459 271.89 300.026 272.975 300.432 274.242 cv
300.837 275.51 301.04 276.935 301.04 278.517 cv
301.04 280.098 300.837 281.533 300.432 282.821 cv
300.026 284.11 299.459 285.209 298.728 286.122 cv
297.998 287.034 297.126 287.74 296.112 288.236 cv
295.098 288.733 293.983 288.982 292.766 288.982 cv
cp
f
305.634 268.569 mo
307.094 268.569 li
315.551 282.715 li
317.802 286.7 li
317.924 286.7 li
317.883 285.726 317.843 284.753 317.802 283.78 cv
317.761 282.806 317.741 281.833 317.741 280.859 cv
317.741 268.569 li
319.08 268.569 li
319.08 288.616 li
317.62 288.616 li
309.163 274.47 li
306.912 270.486 li
306.79 270.486 li
306.83 271.459 306.871 272.408 306.912 273.33 cv
306.952 274.253 306.973 275.201 306.973 276.174 cv
306.973 288.616 li
305.634 288.616 li
305.634 268.569 li
cp
f
332.1 288.982 mo
330.862 288.982 329.727 288.738 328.692 288.251 cv
327.658 287.765 326.771 287.07 326.031 286.168 cv
325.29 285.265 324.717 284.17 324.312 282.882 cv
323.906 281.595 323.704 280.15 323.704 278.547 cv
323.704 276.965 323.911 275.535 324.327 274.258 cv
324.743 272.98 325.326 271.89 326.076 270.988 cv
326.826 270.085 327.724 269.396 328.769 268.919 cv
329.813 268.443 330.974 268.204 332.252 268.204 cv
333.428 268.204 334.462 268.448 335.355 268.934 cv
336.247 269.421 336.957 269.979 337.484 270.607 cv
336.663 271.55 li
336.115 270.922 335.476 270.42 334.746 270.044 cv
334.016 269.669 333.195 269.482 332.282 269.482 cv
331.187 269.482 330.198 269.695 329.316 270.12 cv
328.434 270.546 327.683 271.15 327.065 271.93 cv
326.446 272.712 325.975 273.66 325.65 274.775 cv
325.326 275.89 325.164 277.148 325.164 278.547 cv
325.164 279.947 325.326 281.209 325.65 282.335 cv
325.975 283.46 326.441 284.418 327.05 285.209 cv
327.658 286 328.393 286.614 329.255 287.05 cv
330.117 287.486 331.085 287.704 332.16 287.704 cv
333.195 287.704 334.117 287.496 334.929 287.08 cv
335.74 286.665 336.511 286.051 337.241 285.24 cv
338.062 286.122 li
337.291 287.014 336.429 287.714 335.476 288.221 cv
334.523 288.728 333.397 288.982 332.1 288.982 cv
cp
f
342.138 268.569 mo
353.12 268.569 li
353.12 269.786 li
343.538 269.786 li
343.538 277.361 li
351.569 277.361 li
351.569 278.577 li
343.538 278.577 li
343.538 287.4 li
353.424 287.4 li
353.424 288.616 li
342.138 288.616 li
342.138 268.569 li
cp
f
362.642 278.821 mo
364.69 278.821 366.211 278.456 367.205 277.726 cv
368.198 276.996 368.695 275.809 368.695 274.166 cv
368.695 272.483 368.183 271.327 367.159 270.699 cv
366.135 270.07 364.589 269.756 362.52 269.756 cv
359.204 269.756 li
359.204 278.821 li
362.642 278.821 li
cp
357.805 268.569 mo
362.855 268.569 li
363.99 268.569 365.009 268.665 365.912 268.858 cv
366.814 269.051 367.575 269.37 368.193 269.816 cv
368.812 270.262 369.289 270.841 369.623 271.55 cv
369.958 272.261 370.125 273.132 370.125 274.166 cv
370.125 276.134 369.497 277.599 368.239 278.562 cv
366.982 279.526 365.228 280.007 362.977 280.007 cv
359.204 280.007 li
359.204 288.616 li
357.805 288.616 li
357.805 268.569 li
cp
f
377.913 269.786 mo
371.525 269.786 li
371.525 268.569 li
385.7 268.569 li
385.7 269.786 li
379.312 269.786 li
379.312 288.616 li
377.913 288.616 li
377.913 269.786 li
cp
f
290.586 381.8 mo
287.353 381.8 284.331 381.226 281.516 380.08 cv
278.701 378.934 276.264 377.24 274.206 374.998 cv
272.146 372.757 270.517 369.994 269.319 366.71 cv
268.119 363.426 267.521 359.673 267.521 355.451 cv
267.521 351.282 268.133 347.542 269.358 344.231 cv
270.582 340.922 272.251 338.12 274.362 335.826 cv
276.473 333.533 278.948 331.787 281.79 330.588 cv
284.63 329.389 287.666 328.789 290.898 328.789 cv
294.129 328.789 296.997 329.442 299.499 330.744 cv
302.001 332.048 304.059 333.559 305.675 335.279 cv
300.828 341.143 li
299.472 339.788 298.013 338.707 296.449 337.898 cv
294.885 337.091 293.113 336.686 291.133 336.686 cv
289.047 336.686 287.132 337.116 285.386 337.976 cv
283.639 338.837 282.128 340.062 280.851 341.651 cv
279.573 343.242 278.584 345.183 277.88 347.476 cv
277.176 349.77 276.825 352.35 276.825 355.217 cv
276.825 361.055 278.088 365.629 280.617 368.938 cv
283.144 372.249 286.571 373.903 290.898 373.903 cv
293.191 373.903 295.224 373.422 296.997 372.457 cv
298.768 371.492 300.384 370.228 301.844 368.664 cv
306.691 374.372 li
304.606 376.77 302.222 378.608 299.538 379.884 cv
296.853 381.161 293.869 381.8 290.586 381.8 cv
cp
.211765 .14902 .105882 rgb
f
325.065 381.8 mo
320.947 381.8 317.95 380.484 316.074 377.851 cv
314.197 375.22 313.259 371.453 313.259 366.553 cv
313.259 342.472 li
322.251 342.472 li
322.251 365.381 li
322.251 368.561 322.719 370.803 323.658 372.105 cv
324.596 373.408 326.107 374.059 328.192 374.059 cv
329.86 374.059 331.332 373.643 332.61 372.808 cv
333.887 371.975 335.255 370.619 336.715 368.743 cv
336.715 342.472 li
345.706 342.472 li
345.706 380.862 li
338.357 380.862 li
337.653 375.232 li
337.419 375.232 li
335.75 377.214 333.939 378.803 331.984 380.002 cv
330.03 381.2 327.723 381.8 325.065 381.8 cv
cp
f
367.833 381.8 mo
365.174 381.8 362.555 381.292 359.975 380.275 cv
357.395 379.259 355.167 377.995 353.29 376.483 cv
357.512 370.698 li
359.232 372.053 360.939 373.109 362.633 373.864 cv
364.326 374.62 366.164 374.998 368.146 374.998 cv
370.23 374.998 371.768 374.568 372.758 373.708 cv
373.748 372.847 374.244 371.741 374.244 370.385 cv
374.244 369.603 374.009 368.912 373.54 368.313 cv
373.071 367.714 372.445 367.179 371.664 366.71 cv
370.882 366.241 369.995 365.811 369.005 365.42 cv
368.015 365.029 367.024 364.626 366.034 364.208 cv
364.783 363.739 363.505 363.192 362.203 362.566 cv
360.9 361.941 359.74 361.185 358.724 360.299 cv
357.708 359.413 356.873 358.383 356.222 357.21 cv
355.57 356.037 355.245 354.643 355.245 353.027 cv
355.245 349.639 356.496 346.877 358.998 344.74 cv
361.5 342.603 364.913 341.534 369.24 341.534 cv
371.898 341.534 374.295 342.003 376.433 342.941 cv
378.57 343.88 380.421 344.949 381.984 346.147 cv
377.84 351.62 li
376.484 350.63 375.116 349.835 373.735 349.235 cv
372.354 348.637 370.907 348.336 369.397 348.336 cv
367.467 348.336 366.046 348.741 365.135 349.548 cv
364.223 350.357 363.767 351.36 363.767 352.558 cv
363.767 353.34 363.988 354.005 364.432 354.552 cv
364.874 355.099 365.46 355.582 366.191 355.998 cv
366.92 356.416 367.767 356.807 368.732 357.171 cv
369.695 357.536 370.699 357.902 371.742 358.266 cv
373.044 358.735 374.348 359.27 375.651 359.868 cv
376.953 360.469 378.14 361.211 379.209 362.097 cv
380.276 362.984 381.136 364.065 381.789 365.342 cv
382.44 366.619 382.766 368.144 382.766 369.915 cv
382.766 371.584 382.44 373.135 381.789 374.568 cv
381.136 376.002 380.186 377.253 378.935 378.321 cv
377.684 379.389 376.12 380.236 374.244 380.862 cv
372.367 381.487 370.23 381.8 367.833 381.8 cv
cp
f
402.782 381.8 mo
400.54 381.8 398.65 381.46 397.114 380.784 cv
395.576 380.107 394.325 379.155 393.361 377.929 cv
392.396 376.705 391.692 375.245 391.25 373.551 cv
390.806 371.858 390.585 369.968 390.585 367.883 cv
390.585 349.587 li
385.112 349.587 li
385.112 342.863 li
391.054 342.472 li
392.149 331.995 li
399.655 331.995 li
399.655 342.472 li
409.428 342.472 li
409.428 349.587 li
399.655 349.587 li
399.655 367.883 li
399.655 372.366 401.453 374.607 405.049 374.607 cv
405.726 374.607 406.418 374.529 407.121 374.372 cv
407.825 374.216 408.462 374.008 409.037 373.747 cv
410.601 380.392 li
409.557 380.758 408.372 381.083 407.043 381.37 cv
405.714 381.656 404.293 381.8 402.782 381.8 cv
cp
f
431.945 374.45 mo
434.76 374.45 436.975 373.291 438.591 370.971 cv
440.206 368.652 441.015 365.564 441.015 361.706 cv
441.015 357.797 440.206 354.682 438.591 352.363 cv
436.975 350.044 434.76 348.884 431.945 348.884 cv
429.131 348.884 426.928 350.044 425.338 352.363 cv
423.748 354.682 422.954 357.797 422.954 361.706 cv
422.954 365.564 423.748 368.652 425.338 370.971 cv
426.928 373.291 429.131 374.45 431.945 374.45 cv
cp
431.945 381.8 mo
429.547 381.8 427.254 381.356 425.065 380.471 cv
422.876 379.585 420.934 378.282 419.24 376.561 cv
417.546 374.841 416.203 372.73 415.213 370.228 cv
414.223 367.726 413.728 364.886 413.728 361.706 cv
413.728 358.527 414.223 355.686 415.213 353.184 cv
416.203 350.682 417.546 348.571 419.24 346.85 cv
420.934 345.131 422.876 343.815 425.065 342.902 cv
427.254 341.991 429.547 341.534 431.945 341.534 cv
434.342 341.534 436.649 341.991 438.865 342.902 cv
441.08 343.815 443.021 345.131 444.69 346.85 cv
446.357 348.571 447.7 350.682 448.716 353.184 cv
449.733 355.686 450.241 358.527 450.241 361.706 cv
450.241 364.886 449.733 367.726 448.716 370.228 cv
447.7 372.73 446.357 374.841 444.69 376.561 cv
443.021 378.282 441.08 379.585 438.865 380.471 cv
436.649 381.356 434.342 381.8 431.945 381.8 cv
cp
f
459.153 342.472 mo
466.581 342.472 li
467.207 347.711 li
467.519 347.711 li
469.134 345.991 470.894 344.532 472.797 343.332 cv
474.699 342.134 476.849 341.534 479.247 341.534 cv
482.062 341.534 484.316 342.134 486.01 343.332 cv
487.703 344.532 488.993 346.225 489.88 348.414 cv
491.704 346.434 493.607 344.792 495.588 343.489 cv
497.568 342.186 499.783 341.534 502.233 341.534 cv
506.299 341.534 509.296 342.851 511.225 345.482 cv
513.153 348.115 514.118 351.881 514.118 356.78 cv
514.118 380.862 li
505.048 380.862 li
505.048 357.953 li
505.048 354.774 504.566 352.533 503.602 351.229 cv
502.637 349.927 501.165 349.274 499.185 349.274 cv
496.786 349.274 494.102 350.865 491.131 354.044 cv
491.131 380.862 li
482.14 380.862 li
482.14 357.953 li
482.14 354.774 481.657 352.533 480.693 351.229 cv
479.729 349.927 478.231 349.274 476.198 349.274 cv
473.8 349.274 471.116 350.865 468.145 354.044 cv
468.145 380.862 li
459.153 380.862 li
459.153 342.472 li
cp
f
548.284 358.031 mo
548.284 355.06 547.645 352.728 546.368 351.033 cv
545.09 349.34 543.124 348.492 540.465 348.492 cv
538.171 348.492 536.165 349.301 534.445 350.916 cv
532.725 352.533 531.656 354.904 531.239 358.031 cv
548.284 358.031 li
cp
541.482 381.8 mo
538.823 381.8 536.347 381.343 534.054 380.431 cv
531.76 379.52 529.754 378.203 528.034 376.483 cv
526.314 374.763 524.971 372.665 524.007 370.189 cv
523.042 367.714 522.561 364.886 522.561 361.706 cv
522.561 358.578 523.055 355.764 524.046 353.262 cv
525.036 350.76 526.353 348.649 527.995 346.929 cv
529.636 345.209 531.525 343.88 533.663 342.941 cv
535.8 342.003 537.989 341.534 540.231 341.534 cv
542.837 341.534 545.13 341.977 547.111 342.863 cv
549.091 343.75 550.747 345.001 552.076 346.616 cv
553.405 348.232 554.408 350.161 555.086 352.402 cv
555.763 354.643 556.102 357.093 556.102 359.751 cv
556.102 360.638 556.063 361.471 555.985 362.253 cv
555.907 363.035 555.815 363.66 555.712 364.13 cv
531.318 364.13 li
531.734 367.57 532.946 370.216 534.953 372.066 cv
536.959 373.916 539.527 374.841 542.654 374.841 cv
544.322 374.841 545.872 374.595 547.306 374.098 cv
548.739 373.604 550.16 372.913 551.568 372.027 cv
554.617 377.656 li
552.792 378.856 550.759 379.845 548.518 380.627 cv
546.276 381.409 543.931 381.8 541.482 381.8 cv
cp
f
564.702 342.472 mo
572.13 342.472 li
572.755 349.274 li
573.068 349.274 li
574.422 346.772 576.065 344.857 577.993 343.528 cv
579.921 342.199 581.902 341.534 583.936 341.534 cv
585.759 341.534 587.219 341.795 588.314 342.316 cv
586.75 350.135 li
586.072 349.927 585.446 349.77 584.874 349.665 cv
584.299 349.561 583.596 349.509 582.763 349.509 cv
581.25 349.509 579.661 350.095 577.993 351.268 cv
576.324 352.441 574.892 354.487 573.693 357.406 cv
573.693 380.862 li
564.702 380.862 li
564.702 342.472 li
cp
f
285.112 475.624 mo
281.672 475.624 278.349 474.971 275.144 473.669 cv
271.938 472.367 269.11 470.516 266.661 468.117 cv
271.977 461.941 li
273.801 463.661 275.886 465.056 278.232 466.124 cv
280.578 467.193 282.923 467.727 285.269 467.727 cv
288.187 467.727 290.402 467.128 291.915 465.929 cv
293.426 464.73 294.182 463.14 294.182 461.159 cv
294.182 460.117 293.986 459.231 293.595 458.501 cv
293.205 457.771 292.657 457.133 291.954 456.585 cv
291.25 456.038 290.416 455.53 289.452 455.06 cv
288.486 454.592 287.431 454.122 286.285 453.653 cv
279.249 450.604 li
277.998 450.083 276.759 449.431 275.535 448.649 cv
274.309 447.867 273.201 446.929 272.212 445.835 cv
271.221 444.74 270.426 443.463 269.827 442.004 cv
269.227 440.545 268.928 438.876 268.928 436.999 cv
268.928 434.967 269.358 433.078 270.218 431.331 cv
271.078 429.585 272.263 428.061 273.775 426.757 cv
275.287 425.455 277.098 424.438 279.21 423.708 cv
281.32 422.978 283.627 422.613 286.129 422.613 cv
289.1 422.613 291.966 423.2 294.729 424.372 cv
297.491 425.545 299.862 427.122 301.844 429.103 cv
297.231 434.888 li
295.563 433.534 293.842 432.465 292.071 431.683 cv
290.298 430.901 288.318 430.51 286.129 430.51 cv
283.678 430.51 281.724 431.045 280.265 432.113 cv
278.805 433.182 278.076 434.654 278.076 436.531 cv
278.076 437.521 278.297 438.368 278.74 439.072 cv
279.183 439.775 279.782 440.401 280.539 440.948 cv
281.294 441.495 282.167 441.991 283.158 442.433 cv
284.147 442.877 285.164 443.307 286.207 443.723 cv
293.166 446.617 li
294.677 447.242 296.058 447.972 297.309 448.805 cv
298.56 449.64 299.641 450.604 300.554 451.699 cv
301.465 452.793 302.183 454.057 302.704 455.491 cv
303.225 456.925 303.486 458.579 303.486 460.455 cv
303.486 462.541 303.068 464.495 302.235 466.32 cv
301.4 468.144 300.189 469.747 298.599 471.128 cv
297.009 472.51 295.081 473.604 292.814 474.412 cv
290.546 475.219 287.979 475.624 285.112 475.624 cv
cp
f
323.423 475.624 mo
319.305 475.624 316.308 474.308 314.432 471.675 cv
312.555 469.044 311.617 465.277 311.617 460.377 cv
311.617 436.296 li
320.608 436.296 li
320.608 459.204 li
320.608 462.385 321.077 464.626 322.016 465.929 cv
322.954 467.232 324.465 467.883 326.55 467.883 cv
328.218 467.883 329.69 467.467 330.968 466.632 cv
332.245 465.799 333.613 464.443 335.073 462.567 cv
335.073 436.296 li
344.064 436.296 li
344.064 474.685 li
336.714 474.685 li
336.011 469.056 li
335.776 469.056 li
334.108 471.037 332.297 472.627 330.342 473.826 cv
328.388 475.024 326.081 475.624 323.423 475.624 cv
cp
f
372.211 468.196 mo
374.764 468.196 376.902 467.089 378.622 464.873 cv
380.342 462.658 381.202 459.361 381.202 454.982 cv
381.202 451.126 380.55 448.129 379.248 445.991 cv
377.944 443.854 375.833 442.785 372.915 442.785 cv
370.204 442.785 367.389 444.22 364.47 447.086 cv
364.47 464.99 li
365.878 466.19 367.233 467.023 368.536 467.492 cv
369.838 467.961 371.064 468.196 372.211 468.196 cv
cp
355.479 436.296 mo
362.907 436.296 li
363.532 440.362 li
363.845 440.362 li
365.46 439.007 367.258 437.834 369.24 436.843 cv
371.22 435.854 373.278 435.358 375.417 435.358 cv
377.813 435.358 379.938 435.815 381.789 436.726 cv
383.638 437.638 385.215 438.954 386.519 440.674 cv
387.821 442.394 388.812 444.454 389.49 446.851 cv
390.167 449.249 390.506 451.933 390.506 454.904 cv
390.506 458.188 390.049 461.12 389.138 463.7 cv
388.225 466.281 387.014 468.444 385.503 470.19 cv
383.99 471.937 382.244 473.278 380.264 474.216 cv
378.282 475.155 376.224 475.624 374.087 475.624 cv
372.419 475.624 370.751 475.258 369.084 474.529 cv
367.415 473.8 365.799 472.758 364.236 471.402 cv
364.47 477.813 li
364.47 489.853 li
355.479 489.853 li
355.479 436.296 li
cp
f
416.307 468.196 mo
418.86 468.196 420.998 467.089 422.718 464.873 cv
424.438 462.658 425.298 459.361 425.298 454.982 cv
425.298 451.126 424.646 448.129 423.344 445.991 cv
422.04 443.854 419.929 442.785 417.011 442.785 cv
414.3 442.785 411.485 444.22 408.566 447.086 cv
408.566 464.99 li
409.974 466.19 411.329 467.023 412.632 467.492 cv
413.935 467.961 415.16 468.196 416.307 468.196 cv
cp
399.575 436.296 mo
407.003 436.296 li
407.629 440.362 li
407.941 440.362 li
409.556 439.007 411.355 437.834 413.336 436.843 cv
415.316 435.854 417.375 435.358 419.513 435.358 cv
421.909 435.358 424.034 435.815 425.885 436.726 cv
427.734 437.638 429.312 438.954 430.615 440.674 cv
431.917 442.394 432.908 444.454 433.586 446.851 cv
434.263 449.249 434.603 451.933 434.603 454.904 cv
434.603 458.188 434.146 461.12 433.234 463.7 cv
432.321 466.281 431.11 468.444 429.599 470.19 cv
428.086 471.937 426.34 473.278 424.36 474.216 cv
422.379 475.155 420.32 475.624 418.184 475.624 cv
416.515 475.624 414.847 475.258 413.18 474.529 cv
411.511 473.8 409.896 472.758 408.332 471.402 cv
408.566 477.813 li
408.566 489.853 li
399.575 489.853 li
399.575 436.296 li
cp
f
459.387 468.274 mo
462.201 468.274 464.416 467.115 466.032 464.795 cv
467.648 462.476 468.456 459.388 468.456 455.53 cv
468.456 451.62 467.648 448.506 466.032 446.186 cv
464.416 443.868 462.201 442.707 459.387 442.707 cv
456.572 442.707 454.37 443.868 452.78 446.186 cv
451.19 448.506 450.396 451.62 450.396 455.53 cv
450.396 459.388 451.19 462.476 452.78 464.795 cv
454.37 467.115 456.572 468.274 459.387 468.274 cv
cp
459.387 475.624 mo
456.989 475.624 454.696 475.18 452.506 474.294 cv
450.317 473.409 448.375 472.105 446.682 470.385 cv
444.987 468.665 443.645 466.554 442.655 464.052 cv
441.664 461.55 441.17 458.71 441.17 455.53 cv
441.17 452.351 441.664 449.51 442.655 447.008 cv
443.645 444.506 444.987 442.394 446.682 440.674 cv
448.375 438.954 450.317 437.638 452.506 436.726 cv
454.696 435.815 456.989 435.358 459.387 435.358 cv
461.784 435.358 464.09 435.815 466.306 436.726 cv
468.521 437.638 470.462 438.954 472.131 440.674 cv
473.798 442.394 475.141 444.506 476.158 447.008 cv
477.174 449.51 477.682 452.351 477.682 455.53 cv
477.682 458.71 477.174 461.55 476.158 464.052 cv
475.141 466.554 473.798 468.665 472.131 470.385 cv
470.462 472.105 468.521 473.409 466.306 474.294 cv
464.09 475.18 461.784 475.624 459.387 475.624 cv
cp
f
486.595 436.296 mo
494.023 436.296 li
494.648 443.098 li
494.961 443.098 li
496.316 440.596 497.958 438.68 499.886 437.351 cv
501.814 436.022 503.796 435.358 505.829 435.358 cv
507.652 435.358 509.112 435.619 510.207 436.139 cv
508.643 443.958 li
507.965 443.75 507.339 443.594 506.767 443.489 cv
506.192 443.385 505.489 443.333 504.656 443.333 cv
503.143 443.333 501.554 443.919 499.886 445.092 cv
498.217 446.264 496.785 448.311 495.586 451.229 cv
495.586 474.685 li
486.595 474.685 li
486.595 436.296 li
cp
f
529.283 475.624 mo
527.041 475.624 525.151 475.284 523.615 474.607 cv
522.077 473.93 520.826 472.979 519.862 471.753 cv
518.897 470.529 518.193 469.069 517.751 467.375 cv
517.307 465.682 517.086 463.792 517.086 461.706 cv
517.086 443.411 li
511.613 443.411 li
511.613 436.687 li
517.555 436.296 li
518.65 425.819 li
526.156 425.819 li
526.156 436.296 li
535.929 436.296 li
535.929 443.411 li
526.156 443.411 li
526.156 461.706 li
526.156 466.19 527.954 468.43 531.55 468.43 cv
532.227 468.43 532.919 468.352 533.622 468.196 cv
534.326 468.039 534.964 467.832 535.538 467.571 cv
537.102 474.216 li
536.058 474.581 534.873 474.907 533.544 475.194 cv
532.215 475.479 530.794 475.624 529.283 475.624 cv
cp
f
270.383 524.881 mo
272.835 524.881 li
272.835 544.264 li
270.383 544.264 li
270.383 524.881 li
cp
.870588 .823529 .780392 rgb
f
287.959 536.877 mo
287.959 533.716 286.896 531.588 284.177 531.588 cv
282.965 531.588 281.754 532.267 280.335 533.538 cv
280.335 541.073 li
281.635 542.166 282.906 542.58 283.851 542.58 cv
286.216 542.58 287.959 540.424 287.959 536.877 cv
cp
277.912 529.904 mo
279.921 529.904 li
280.129 531.558 li
280.217 531.558 li
281.517 530.466 283.114 529.55 284.797 529.55 cv
288.49 529.55 290.47 532.415 290.47 536.877 cv
290.47 541.753 287.545 544.619 284.265 544.619 cv
282.935 544.619 281.606 543.999 280.275 542.965 cv
280.335 545.475 li
280.335 550.322 li
277.912 550.322 li
277.912 529.904 li
cp
f
292.707 542.638 mo
293.919 541.013 li
295.159 542.019 296.43 542.727 298.144 542.727 cv
300.035 542.727 300.98 541.723 300.98 540.482 cv
300.98 539.005 299.266 538.355 297.701 537.763 cv
295.661 537.025 293.416 536.05 293.416 533.628 cv
293.416 531.322 295.247 529.55 298.35 529.55 cv
300.152 529.55 301.718 530.288 302.812 531.174 cv
301.66 532.711 li
300.684 531.972 299.65 531.441 298.38 531.441 cv
296.578 531.441 295.75 532.415 295.75 533.509 cv
295.75 534.868 297.316 535.37 298.941 535.99 cv
301.009 536.759 303.314 537.616 303.314 540.335 cv
303.314 542.669 301.452 544.619 298.055 544.619 cv
296.016 544.619 294.065 543.762 292.707 542.638 cv
cp
f
306.47 539.005 mo
306.47 529.904 li
308.921 529.904 li
308.921 538.68 li
308.921 541.369 309.721 542.52 311.612 542.52 cv
313.089 542.52 314.123 541.782 315.483 540.097 cv
315.483 529.904 li
317.905 529.904 li
317.905 544.264 li
315.895 544.264 li
315.689 542.019 li
315.6 542.019 li
314.272 543.585 312.852 544.619 310.873 544.619 cv
307.83 544.619 306.47 542.669 306.47 539.005 cv
cp
f
322.742 529.904 mo
324.753 529.904 li
324.959 531.972 li
325.047 531.972 li
326.287 530.613 327.796 529.55 329.509 529.55 cv
331.695 529.55 332.878 530.584 333.469 532.298 cv
334.977 530.673 336.454 529.55 338.196 529.55 cv
341.15 529.55 342.57 531.5 342.57 535.163 cv
342.57 544.264 li
340.147 544.264 li
340.147 535.489 li
340.147 532.8 339.29 531.646 337.488 531.646 cv
336.365 531.646 335.212 532.387 333.883 533.863 cv
333.883 544.264 li
331.46 544.264 li
331.46 535.489 li
331.46 532.8 330.603 531.646 328.77 531.646 cv
327.707 531.646 326.496 532.387 325.165 533.863 cv
325.165 544.264 li
322.742 544.264 li
322.742 529.904 li
cp
f
362.231 540.6 mo
362.231 533.095 li
361.019 532.002 359.925 531.588 358.745 531.588 cv
356.44 531.588 354.607 533.805 354.607 537.084 cv
354.607 540.513 356.055 542.58 358.566 542.58 cv
359.897 542.58 361.048 541.93 362.231 540.6 cv
cp
352.095 537.114 mo
352.095 532.445 355.051 529.55 358.331 529.55 cv
359.985 529.55 361.079 530.17 362.348 531.204 cv
362.231 528.752 li
362.231 523.226 li
364.684 523.226 li
364.684 544.264 li
362.673 544.264 li
362.467 542.58 li
362.379 542.58 li
361.256 543.673 359.719 544.619 358.034 544.619 cv
354.429 544.619 352.095 541.9 352.095 537.114 cv
cp
f
379.24 537.114 mo
379.24 533.805 377.586 531.558 375.104 531.558 cv
372.652 531.558 370.967 533.805 370.967 537.114 cv
370.967 540.393 372.652 542.609 375.104 542.609 cv
377.586 542.609 379.24 540.393 379.24 537.114 cv
cp
368.456 537.114 mo
368.456 532.298 371.587 529.55 375.104 529.55 cv
378.62 529.55 381.751 532.298 381.751 537.114 cv
381.751 541.871 378.62 544.619 375.104 544.619 cv
371.587 544.619 368.456 541.871 368.456 537.114 cv
cp
f
385.525 541.369 mo
385.525 523.226 li
387.947 523.226 li
387.947 541.546 li
387.947 542.314 388.273 542.609 388.628 542.609 cv
388.775 542.609 388.893 542.609 389.159 542.551 cv
389.484 544.383 li
389.159 544.53 388.747 544.619 388.096 544.619 cv
386.265 544.619 385.525 543.466 385.525 541.369 cv
cp
f
402.777 537.114 mo
402.777 533.805 401.123 531.558 398.641 531.558 cv
396.19 531.558 394.504 533.805 394.504 537.114 cv
394.504 540.393 396.19 542.609 398.641 542.609 cv
401.123 542.609 402.777 540.393 402.777 537.114 cv
cp
391.993 537.114 mo
391.993 532.298 395.125 529.55 398.641 529.55 cv
402.157 529.55 405.289 532.298 405.289 537.114 cv
405.289 541.871 402.157 544.619 398.641 544.619 cv
395.125 544.619 391.993 541.871 391.993 537.114 cv
cp
f
409.063 529.904 mo
411.073 529.904 li
411.279 532.504 li
411.368 532.504 li
412.342 530.701 413.821 529.55 415.444 529.55 cv
416.066 529.55 416.509 529.638 416.982 529.846 cv
416.509 531.972 li
416.036 531.825 415.712 531.736 415.121 531.736 cv
413.91 531.736 412.462 532.622 411.485 535.045 cv
411.485 544.264 li
409.063 544.264 li
409.063 529.904 li
cp
f
423.621 542.639 mo
424.832 541.013 li
426.072 542.019 427.343 542.727 429.057 542.727 cv
430.948 542.727 431.894 541.723 431.894 540.482 cv
431.894 539.005 430.18 538.355 428.614 537.764 cv
426.575 537.025 424.329 536.05 424.329 533.628 cv
424.329 531.322 426.161 529.55 429.263 529.55 cv
431.066 529.55 432.631 530.288 433.725 531.174 cv
432.573 532.711 li
431.597 531.972 430.563 531.441 429.294 531.441 cv
427.491 531.441 426.663 532.415 426.663 533.509 cv
426.663 534.868 428.229 535.37 429.854 535.99 cv
431.922 536.759 434.228 537.616 434.228 540.335 cv
434.228 542.669 432.365 544.619 428.968 544.619 cv
426.929 544.619 424.978 543.762 423.621 542.639 cv
cp
f
437.589 529.904 mo
440.012 529.904 li
440.012 544.264 li
437.589 544.264 li
437.589 529.904 li
cp
437.147 525.384 mo
437.147 524.438 437.886 523.817 438.832 523.817 cv
439.777 523.817 440.515 524.438 440.515 525.384 cv
440.515 526.299 439.777 526.949 438.832 526.949 cv
437.886 526.949 437.147 526.299 437.147 525.384 cv
cp
f
445.267 539.832 mo
445.267 531.884 li
443.139 531.884 li
443.139 530.052 li
445.385 529.904 li
445.681 525.885 li
447.721 525.885 li
447.721 529.904 li
451.591 529.904 li
451.591 531.884 li
447.721 531.884 li
447.721 539.862 li
447.721 541.635 448.281 542.639 449.935 542.639 cv
450.438 542.639 451.089 542.432 451.561 542.255 cv
452.034 544.088 li
451.235 544.353 450.261 544.619 449.375 544.619 cv
446.301 544.619 445.267 542.669 445.267 539.832 cv
cp
f
468.661 540.748 mo
468.661 536.759 li
463.875 537.35 462.219 538.532 462.219 540.364 cv
462.219 541.989 463.342 542.669 464.761 542.669 cv
466.15 542.669 467.272 541.989 468.661 540.748 cv
cp
459.856 540.541 mo
459.856 537.41 462.545 535.843 468.661 535.163 cv
468.661 533.332 468.069 531.558 465.707 531.558 cv
464.052 531.558 462.545 532.327 461.422 533.095 cv
460.476 531.411 li
461.807 530.554 463.816 529.55 466.121 529.55 cv
469.637 529.55 471.114 531.884 471.114 535.459 cv
471.114 544.264 li
469.104 544.264 li
468.898 542.551 li
468.809 542.551 li
467.449 543.674 465.855 544.619 464.052 544.619 cv
461.659 544.619 459.856 543.112 459.856 540.541 cv
cp
f
475.626 529.904 mo
477.636 529.904 li
477.842 531.972 li
477.931 531.972 li
479.171 530.613 480.679 529.55 482.393 529.55 cv
484.578 529.55 485.761 530.584 486.352 532.298 cv
487.858 530.673 489.337 529.55 491.08 529.55 cv
494.034 529.55 495.453 531.5 495.453 535.163 cv
495.453 544.264 li
493.03 544.264 li
493.03 535.489 li
493.03 532.8 492.173 531.647 490.371 531.647 cv
489.249 531.647 488.095 532.387 486.766 533.863 cv
486.766 544.264 li
484.343 544.264 li
484.343 535.489 li
484.343 532.8 483.486 531.647 481.653 531.647 cv
480.59 531.647 479.379 532.387 478.048 533.863 cv
478.048 544.264 li
475.626 544.264 li
475.626 529.904 li
cp
f
509.09 535.931 mo
509.09 533.036 507.791 531.47 505.543 531.47 cv
503.535 531.47 501.703 533.096 501.406 535.931 cv
509.09 535.931 li
cp
499.044 537.114 mo
499.044 532.415 502.206 529.55 505.485 529.55 cv
509.148 529.55 511.216 532.18 511.216 536.286 cv
511.216 536.789 511.188 537.32 511.128 537.676 cv
501.438 537.676 li
501.615 540.719 503.475 542.669 506.223 542.669 cv
507.583 542.669 508.736 542.226 509.799 541.547 cv
510.656 543.141 li
509.414 543.939 507.879 544.619 505.928 544.619 cv
502.087 544.619 499.044 541.812 499.044 537.114 cv
cp
f
514.873 539.832 mo
514.873 531.884 li
512.745 531.884 li
512.745 530.052 li
514.99 529.904 li
515.287 525.885 li
517.326 525.885 li
517.326 529.904 li
521.197 529.904 li
521.197 531.884 li
517.326 531.884 li
517.326 539.862 li
517.326 541.635 517.887 542.639 519.541 542.639 cv
520.044 542.639 520.694 542.432 521.166 542.255 cv
521.64 544.088 li
520.841 544.353 519.866 544.619 518.981 544.619 cv
515.907 544.619 514.873 542.669 514.873 539.832 cv
cp
f
523.613 547.869 mo
525.298 547.131 526.302 545.83 526.273 544.264 cv
525.978 544.295 li
525.033 544.295 524.234 543.703 524.234 542.609 cv
524.234 541.547 525.062 540.896 526.036 540.896 cv
527.307 540.896 528.075 541.989 528.075 543.762 cv
528.075 546.303 526.598 548.282 524.205 549.288 cv
523.613 547.869 li
cp
f
536.845 537.114 mo
536.845 532.298 540.065 529.55 543.758 529.55 cv
545.65 529.55 546.949 530.317 547.955 531.234 cv
546.714 532.829 li
545.886 532.091 545.001 531.558 543.847 531.558 cv
541.247 531.558 539.356 533.805 539.356 537.114 cv
539.356 540.393 541.158 542.609 543.789 542.609 cv
545.118 542.609 546.27 541.959 547.157 541.162 cv
548.22 542.787 li
546.921 543.939 545.295 544.619 543.581 544.619 cv
539.77 544.619 536.845 541.871 536.845 537.114 cv
cp
f
560.475 537.114 mo
560.475 533.805 558.821 531.558 556.339 531.558 cv
553.887 531.558 552.202 533.805 552.202 537.114 cv
552.202 540.393 553.887 542.609 556.339 542.609 cv
558.821 542.609 560.475 540.393 560.475 537.114 cv
cp
549.691 537.114 mo
549.691 532.298 552.822 529.55 556.339 529.55 cv
559.855 529.55 562.986 532.298 562.986 537.114 cv
562.986 541.871 559.855 544.619 556.339 544.619 cv
552.822 544.619 549.691 541.871 549.691 537.114 cv
cp
f
566.76 529.904 mo
568.771 529.904 li
568.977 531.972 li
569.066 531.972 li
570.425 530.613 571.902 529.55 573.882 529.55 cv
576.896 529.55 578.255 531.5 578.255 535.163 cv
578.255 544.264 li
575.833 544.264 li
575.833 535.489 li
575.833 532.8 575.005 531.647 573.113 531.647 cv
571.636 531.647 570.631 532.415 569.183 533.863 cv
569.183 544.264 li
566.76 544.264 li
566.76 529.904 li
cp
f
581.32 542.639 mo
582.532 541.013 li
583.772 542.019 585.043 542.727 586.757 542.727 cv
588.648 542.727 589.593 541.723 589.593 540.482 cv
589.593 539.006 587.88 538.355 586.314 537.764 cv
584.275 537.025 582.029 536.051 582.029 533.628 cv
582.029 531.322 583.86 529.55 586.963 529.55 cv
588.765 529.55 590.331 530.288 591.425 531.175 cv
590.273 532.711 li
589.297 531.972 588.263 531.441 586.994 531.441 cv
585.191 531.441 584.363 532.415 584.363 533.51 cv
584.363 534.868 585.929 535.37 587.554 535.99 cv
589.622 536.759 591.927 537.616 591.927 540.335 cv
591.927 542.669 590.065 544.619 586.668 544.619 cv
584.629 544.619 582.678 543.762 581.32 542.639 cv
cp
f
604.273 535.931 mo
604.273 533.036 602.973 531.47 600.726 531.47 cv
598.717 531.47 596.886 533.096 596.589 535.931 cv
604.273 535.931 li
cp
594.226 537.114 mo
594.226 532.415 597.388 529.55 600.668 529.55 cv
604.331 529.55 606.399 532.18 606.399 536.286 cv
606.399 536.789 606.37 537.32 606.31 537.676 cv
596.62 537.676 li
596.797 540.719 598.657 542.669 601.405 542.669 cv
602.765 542.669 603.919 542.226 604.982 541.547 cv
605.839 543.141 li
604.596 543.939 603.062 544.619 601.111 544.619 cv
597.269 544.619 594.226 541.812 594.226 537.114 cv
cp
f
608.873 537.114 mo
608.873 532.298 612.093 529.55 615.786 529.55 cv
617.677 529.55 618.977 530.317 619.983 531.234 cv
618.742 532.829 li
617.914 532.091 617.028 531.558 615.875 531.558 cv
613.275 531.558 611.384 533.805 611.384 537.114 cv
611.384 540.393 613.187 542.609 615.818 542.609 cv
617.146 542.609 618.297 541.96 619.186 541.162 cv
620.248 542.788 li
618.948 543.939 617.323 544.619 615.609 544.619 cv
611.798 544.619 608.873 541.871 608.873 537.114 cv
cp
f
623.522 539.833 mo
623.522 531.884 li
621.394 531.884 li
621.394 530.052 li
623.639 529.904 li
623.936 525.886 li
625.975 525.886 li
625.975 529.904 li
629.846 529.904 li
629.846 531.884 li
625.975 531.884 li
625.975 539.862 li
625.975 541.635 626.536 542.639 628.19 542.639 cv
628.693 542.639 629.343 542.432 629.815 542.255 cv
630.289 544.088 li
629.489 544.353 628.515 544.619 627.63 544.619 cv
624.556 544.619 623.522 542.669 623.522 539.833 cv
cp
f
641.66 535.931 mo
641.66 533.036 640.36 531.47 638.113 531.47 cv
636.104 531.47 634.273 533.096 633.976 535.931 cv
641.66 535.931 li
cp
631.613 537.114 mo
631.613 532.415 634.776 529.55 638.055 529.55 cv
641.718 529.55 643.786 532.18 643.786 536.286 cv
643.786 536.789 643.757 537.32 643.697 537.676 cv
634.007 537.676 li
634.184 540.719 636.045 542.669 638.793 542.669 cv
640.152 542.669 641.306 542.226 642.369 541.547 cv
643.226 543.141 li
641.984 543.939 640.449 544.619 638.498 544.619 cv
634.656 544.619 631.613 541.812 631.613 537.114 cv
cp
f
647.443 539.833 mo
647.443 531.884 li
645.315 531.884 li
645.315 530.052 li
647.56 529.904 li
647.857 525.886 li
649.896 525.886 li
649.896 529.904 li
653.767 529.904 li
653.767 531.884 li
649.896 531.884 li
649.896 539.862 li
649.896 541.635 650.456 542.639 652.11 542.639 cv
652.613 542.639 653.264 542.432 653.736 542.255 cv
654.21 544.088 li
653.41 544.353 652.436 544.619 651.55 544.619 cv
648.477 544.619 647.443 542.669 647.443 539.833 cv
cp
f
656.805 539.006 mo
656.805 529.904 li
659.256 529.904 li
659.256 538.68 li
659.256 541.369 660.056 542.52 661.947 542.52 cv
663.424 542.52 664.458 541.782 665.818 540.098 cv
665.818 529.904 li
668.24 529.904 li
668.24 544.264 li
666.23 544.264 li
666.024 542.019 li
665.935 542.019 li
664.607 543.585 663.187 544.619 661.208 544.619 cv
658.165 544.619 656.805 542.669 656.805 539.006 cv
cp
f
682.061 535.931 mo
682.061 533.036 680.761 531.47 678.514 531.47 cv
676.505 531.47 674.674 533.096 674.377 535.931 cv
682.061 535.931 li
cp
672.014 537.114 mo
672.014 532.415 675.176 529.55 678.456 529.55 cv
682.119 529.55 684.187 532.18 684.187 536.286 cv
684.187 536.789 684.158 537.32 684.098 537.676 cv
674.408 537.676 li
674.585 540.719 676.445 542.669 679.193 542.669 cv
680.553 542.669 681.707 542.226 682.77 541.547 cv
683.627 543.141 li
682.384 543.939 680.85 544.619 678.899 544.619 cv
675.057 544.619 672.014 541.812 672.014 537.114 cv
cp
f
687.724 529.904 mo
689.734 529.904 li
689.941 532.504 li
690.029 532.504 li
691.004 530.701 692.483 529.55 694.106 529.55 cv
694.728 529.55 695.171 529.638 695.643 529.846 cv
695.171 531.972 li
694.697 531.825 694.374 531.736 693.782 531.736 cv
692.571 531.736 691.123 532.623 690.147 535.045 cv
690.147 544.264 li
687.724 544.264 li
687.724 529.904 li
cp
f
278.065 576.187 mo
278.065 572.198 li
273.277 572.789 271.623 573.971 271.623 575.803 cv
271.623 577.429 272.746 578.108 274.165 578.108 cv
275.554 578.108 276.676 577.429 278.065 576.187 cv
cp
269.26 575.98 mo
269.26 572.847 271.949 571.282 278.065 570.602 cv
278.065 568.771 277.474 566.998 275.111 566.998 cv
273.455 566.998 271.949 567.765 270.826 568.534 cv
269.88 566.85 li
271.209 565.993 273.22 564.989 275.525 564.989 cv
279.039 564.989 280.518 567.323 280.518 570.898 cv
280.518 579.704 li
278.508 579.704 li
278.302 577.99 li
278.213 577.99 li
276.854 579.112 275.257 580.058 273.455 580.058 cv
271.063 580.058 269.26 578.551 269.26 575.98 cv
cp
f
294.133 576.04 mo
294.133 568.534 li
292.92 567.441 291.828 567.027 290.645 567.027 cv
288.34 567.027 286.509 569.244 286.509 572.523 cv
286.509 575.951 287.957 578.019 290.468 578.019 cv
291.797 578.019 292.95 577.37 294.133 576.04 cv
cp
283.998 572.554 mo
283.998 567.885 286.952 564.989 290.231 564.989 cv
291.885 564.989 292.979 565.609 294.25 566.643 cv
294.133 564.191 li
294.133 558.665 li
296.584 558.665 li
296.584 579.704 li
294.576 579.704 li
294.368 578.019 li
294.279 578.019 li
293.156 579.112 291.62 580.058 289.937 580.058 cv
286.332 580.058 283.998 577.34 283.998 572.554 cv
cp
f
301.421 565.344 mo
303.844 565.344 li
303.844 579.704 li
301.421 579.704 li
301.421 565.344 li
cp
300.978 560.823 mo
300.978 559.877 301.718 559.256 302.663 559.256 cv
303.609 559.256 304.346 559.877 304.346 560.823 cv
304.346 561.738 303.609 562.388 302.663 562.388 cv
301.718 562.388 300.978 561.738 300.978 560.823 cv
cp
f
318.732 572.316 mo
318.732 569.155 317.669 567.027 314.949 567.027 cv
313.738 567.027 312.526 567.707 311.107 568.977 cv
311.107 576.513 li
312.407 577.605 313.678 578.019 314.624 578.019 cv
316.988 578.019 318.732 575.863 318.732 572.316 cv
cp
308.685 565.344 mo
310.695 565.344 li
310.901 566.998 li
310.99 566.998 li
312.29 565.905 313.886 564.989 315.569 564.989 cv
319.263 564.989 321.242 567.854 321.242 572.316 cv
321.242 577.192 318.317 580.058 315.038 580.058 cv
313.709 580.058 312.379 579.438 311.049 578.404 cv
311.108 580.915 li
311.108 585.762 li
308.685 585.762 li
308.685 565.344 li
cp
f
325.074 565.344 mo
327.497 565.344 li
327.497 579.704 li
325.074 579.704 li
325.074 565.344 li
cp
324.631 560.823 mo
324.631 559.877 325.371 559.256 326.316 559.256 cv
327.262 559.256 327.999 559.877 327.999 560.823 cv
327.999 561.738 327.262 562.388 326.316 562.388 cv
325.371 562.388 324.631 561.738 324.631 560.823 cv
cp
f
330.743 578.078 mo
331.955 576.453 li
333.194 577.458 334.466 578.167 336.18 578.167 cv
338.071 578.167 339.016 577.163 339.016 575.922 cv
339.016 574.444 337.302 573.794 335.737 573.203 cv
333.697 572.465 331.452 571.489 331.452 569.066 cv
331.452 566.762 333.283 564.989 336.386 564.989 cv
338.188 564.989 339.754 565.727 340.848 566.613 cv
339.696 568.15 li
338.72 567.412 337.686 566.88 336.417 566.88 cv
334.614 566.88 333.786 567.854 333.786 568.948 cv
333.786 570.306 335.352 570.809 336.977 571.43 cv
339.045 572.198 341.35 573.055 341.35 575.774 cv
341.35 578.108 339.488 580.058 336.091 580.058 cv
334.052 580.058 332.101 579.201 330.743 578.078 cv
cp
f
343.649 572.554 mo
343.649 567.737 346.869 564.989 350.563 564.989 cv
352.454 564.989 353.754 565.758 354.759 566.673 cv
353.519 568.268 li
352.691 567.53 351.805 566.998 350.651 566.998 cv
348.051 566.998 346.16 569.244 346.16 572.554 cv
346.16 575.833 347.963 578.05 350.593 578.05 cv
351.922 578.05 353.074 577.398 353.962 576.601 cv
355.025 578.226 li
353.725 579.378 352.099 580.058 350.385 580.058 cv
346.574 580.058 343.649 577.31 343.649 572.554 cv
cp
f
358.178 565.344 mo
360.601 565.344 li
360.601 579.704 li
358.178 579.704 li
358.178 565.344 li
cp
357.735 560.823 mo
357.735 559.877 358.475 559.256 359.421 559.256 cv
360.366 559.256 361.104 559.877 361.104 560.823 cv
361.104 561.738 360.366 562.388 359.421 562.388 cv
358.475 562.388 357.735 561.738 357.735 560.823 cv
cp
f
365.442 565.344 mo
367.453 565.344 li
367.659 567.412 li
367.747 567.412 li
369.107 566.052 370.584 564.989 372.564 564.989 cv
375.577 564.989 376.937 566.939 376.937 570.602 cv
376.937 579.704 li
374.514 579.704 li
374.514 570.929 li
374.514 568.239 373.686 567.086 371.795 567.086 cv
370.318 567.086 369.313 567.854 367.864 569.303 cv
367.864 579.704 li
365.442 579.704 li
365.442 565.344 li
cp
f
389.486 570.101 mo
389.486 568.003 388.127 566.762 386.444 566.762 cv
384.759 566.762 383.399 568.003 383.399 570.101 cv
383.399 572.198 384.788 573.528 386.444 573.528 cv
388.098 573.528 389.486 572.198 389.486 570.101 cv
cp
391.349 581.714 mo
391.349 580.384 390.315 579.94 388.452 579.94 cv
385.97 579.94 li
385.41 579.94 384.73 579.881 384.108 579.704 cv
383.074 580.442 382.63 581.3 382.63 582.126 cv
382.631 583.663 384.196 584.638 386.798 584.638 cv
389.546 584.638 391.349 583.221 391.349 581.714 cv
cp
380.503 582.452 mo
380.503 581.24 381.302 580.088 382.602 579.201 cv
382.602 579.084 li
381.893 578.639 381.331 577.871 381.331 576.749 cv
381.331 575.537 382.159 574.592 382.897 574.089 cv
382.897 573.971 li
381.951 573.203 381.036 571.814 381.036 570.101 cv
381.036 566.969 383.519 564.989 386.444 564.989 cv
387.241 564.989 387.95 565.137 388.481 565.344 cv
393.475 565.344 li
393.475 567.205 li
390.521 567.205 li
391.2 567.854 391.703 568.948 391.703 570.16 cv
391.703 573.232 389.369 575.153 386.444 575.153 cv
385.733 575.153 384.936 574.976 384.285 574.65 cv
383.784 575.095 383.37 575.567 383.37 576.364 cv
383.37 577.281 383.962 577.931 385.91 577.931 cv
388.689 577.931 li
392.028 577.931 393.712 578.966 393.712 581.358 cv
393.712 584.017 390.904 586.322 386.444 586.322 cv
382.927 586.322 380.503 584.934 380.503 582.452 cv
cp
f
411.37 571.371 mo
411.37 568.475 410.07 566.909 407.822 566.909 cv
405.814 566.909 403.983 568.534 403.686 571.371 cv
411.37 571.371 li
cp
401.323 572.554 mo
401.323 567.854 404.485 564.989 407.765 564.989 cv
411.427 564.989 413.496 567.619 413.496 571.725 cv
413.496 572.228 413.467 572.76 413.407 573.115 cv
403.717 573.115 li
403.894 576.158 405.754 578.108 408.503 578.108 cv
409.862 578.108 411.016 577.665 412.079 576.985 cv
412.936 578.581 li
411.693 579.378 410.159 580.058 408.208 580.058 cv
404.366 580.058 401.323 577.251 401.323 572.554 cv
cp
f
417.033 576.808 mo
417.033 558.665 li
419.455 558.665 li
419.455 576.985 li
419.455 577.754 419.781 578.05 420.135 578.05 cv
420.283 578.05 420.401 578.05 420.667 577.99 cv
420.992 579.822 li
420.667 579.97 420.254 580.058 419.604 580.058 cv
417.773 580.058 417.033 578.905 417.033 576.808 cv
cp
f
424.564 565.344 mo
426.987 565.344 li
426.987 579.704 li
424.564 579.704 li
424.564 565.344 li
cp
424.121 560.823 mo
424.121 559.877 424.861 559.256 425.806 559.256 cv
426.752 559.256 427.489 559.877 427.489 560.823 cv
427.489 561.738 426.752 562.388 425.806 562.388 cv
424.861 562.388 424.121 561.738 424.121 560.823 cv
cp
f
432.242 575.271 mo
432.242 567.323 li
430.114 567.323 li
430.114 565.491 li
432.359 565.344 li
432.656 561.324 li
434.695 561.324 li
434.695 565.344 li
438.566 565.344 li
438.566 567.323 li
434.695 567.323 li
434.695 575.302 li
434.695 577.074 435.255 578.078 436.91 578.078 cv
437.413 578.078 438.064 577.871 438.535 577.694 cv
439.009 579.526 li
438.21 579.793 437.235 580.058 436.35 580.058 cv
433.276 580.058 432.242 578.108 432.242 575.271 cv
cp
f
440.983 583.308 mo
442.668 582.57 443.671 581.269 443.642 579.704 cv
443.347 579.733 li
442.402 579.733 441.603 579.142 441.603 578.05 cv
441.603 576.985 442.431 576.336 443.405 576.336 cv
444.676 576.336 445.444 577.429 445.444 579.201 cv
445.444 581.742 443.967 583.722 441.574 584.727 cv
440.983 583.308 li
cp
f
453.682 578.078 mo
454.894 576.453 li
456.134 577.459 457.405 578.167 459.119 578.167 cv
461.01 578.167 461.955 577.163 461.955 575.922 cv
461.955 574.444 460.241 573.794 458.676 573.203 cv
456.636 572.465 454.391 571.489 454.391 569.066 cv
454.391 566.762 456.222 564.989 459.325 564.989 cv
461.127 564.989 462.693 565.727 463.787 566.613 cv
462.635 568.15 li
461.659 567.412 460.625 566.88 459.356 566.88 cv
457.553 566.88 456.725 567.854 456.725 568.948 cv
456.725 570.307 458.291 570.809 459.916 571.43 cv
461.984 572.198 464.289 573.055 464.289 575.774 cv
464.289 578.108 462.427 580.058 459.03 580.058 cv
456.991 580.058 455.04 579.201 453.682 578.078 cv
cp
f
476.635 571.371 mo
476.635 568.475 475.335 566.909 473.087 566.909 cv
471.079 566.909 469.248 568.534 468.951 571.371 cv
476.635 571.371 li
cp
466.588 572.554 mo
466.588 567.854 469.751 564.989 473.03 564.989 cv
476.692 564.989 478.761 567.619 478.761 571.725 cv
478.761 572.228 478.732 572.76 478.672 573.115 cv
468.982 573.115 li
469.159 576.158 471.02 578.108 473.768 578.108 cv
475.127 578.108 476.281 577.666 477.344 576.985 cv
478.201 578.581 li
476.959 579.379 475.424 580.058 473.473 580.058 cv
469.631 580.058 466.588 577.252 466.588 572.554 cv
cp
f
491.399 576.04 mo
491.399 568.534 li
490.188 567.441 489.094 567.027 487.912 567.027 cv
485.608 567.027 483.775 569.244 483.775 572.523 cv
483.775 575.951 485.223 578.019 487.734 578.019 cv
489.065 578.019 490.216 577.37 491.399 576.04 cv
cp
481.264 572.554 mo
481.264 567.885 484.22 564.989 487.5 564.989 cv
489.153 564.989 490.248 565.609 491.517 566.643 cv
491.399 564.191 li
491.399 558.665 li
493.853 558.665 li
493.853 579.704 li
491.842 579.704 li
491.636 578.019 li
491.547 578.019 li
490.425 579.112 488.888 580.058 487.203 580.058 cv
483.598 580.058 481.264 577.34 481.264 572.554 cv
cp
f
513.694 576.04 mo
513.694 568.534 li
512.483 567.441 511.389 567.027 510.209 567.027 cv
507.904 567.027 506.07 569.244 506.07 572.523 cv
506.07 575.951 507.519 578.019 510.03 578.019 cv
511.36 578.019 512.512 577.37 513.694 576.04 cv
cp
503.559 572.554 mo
503.559 567.885 506.515 564.989 509.795 564.989 cv
511.449 564.989 512.543 565.609 513.812 566.643 cv
513.694 564.191 li
513.694 558.665 li
516.148 558.665 li
516.148 579.704 li
514.137 579.704 li
513.931 578.019 li
513.843 578.019 li
512.72 579.112 511.183 580.058 509.498 580.058 cv
505.893 580.058 503.559 577.34 503.559 572.554 cv
cp
f
520.983 565.344 mo
523.405 565.344 li
523.405 579.704 li
520.983 579.704 li
520.983 565.344 li
cp
520.54 560.823 mo
520.54 559.877 521.279 559.256 522.225 559.256 cv
523.171 559.256 523.908 559.877 523.908 560.823 cv
523.908 561.738 523.171 562.388 522.225 562.388 cv
521.279 562.388 520.54 561.738 520.54 560.823 cv
cp
f
536.165 576.187 mo
536.165 572.198 li
531.38 572.789 529.723 573.971 529.723 575.804 cv
529.723 577.429 530.846 578.108 532.266 578.108 cv
533.654 578.108 534.776 577.429 536.165 576.187 cv
cp
527.36 575.98 mo
527.36 572.848 530.049 571.282 536.165 570.602 cv
536.165 568.771 535.574 566.998 533.211 566.998 cv
531.557 566.998 530.049 567.766 528.926 568.534 cv
527.981 566.85 li
529.312 565.993 531.32 564.989 533.625 564.989 cv
537.142 564.989 538.619 567.323 538.619 570.898 cv
538.619 579.704 li
536.608 579.704 li
536.402 577.99 li
536.314 577.99 li
534.954 579.112 533.359 580.058 531.557 580.058 cv
529.163 580.058 527.36 578.552 527.36 575.98 cv
cp
f
543.13 565.344 mo
545.141 565.344 li
545.346 567.412 li
545.435 567.412 li
546.675 566.053 548.183 564.989 549.897 564.989 cv
552.083 564.989 553.265 566.023 553.857 567.737 cv
555.364 566.112 556.841 564.989 558.584 564.989 cv
561.538 564.989 562.958 566.939 562.958 570.602 cv
562.958 579.704 li
560.535 579.704 li
560.535 570.929 li
560.535 568.239 559.678 567.086 557.876 567.086 cv
556.753 567.086 555.599 567.826 554.271 569.303 cv
554.271 579.704 li
551.848 579.704 li
551.848 570.929 li
551.848 568.239 550.991 567.086 549.157 567.086 cv
548.094 567.086 546.883 567.826 545.552 569.303 cv
545.552 579.704 li
543.13 579.704 li
543.13 565.344 li
cp
f
925.042 742.078 mo
820.993 730.005 755.454 624.271 797.344 533.195 cv
798.406 530.885 799.517 528.552 800.677 526.196 cv
874.934 375.428 1020.88 460.59 1044.96 287.436 cv
1076.23 62.6915 1400.89 88.9047 1453.8 249.56 cv
1506.72 410.215 1745.53 440.055 1751.68 579.253 cv
1757.83 718.451 1584.39 829.29 1408.44 775.874 cv
1277.66 736.172 1050.02 756.58 925.042 742.078 cv
.988235 .937255 .890196 rgb
ef
1621.45 539.868 mo
1344.7 539.868 li
1344.7 195.781 li
1621.45 195.781 li
1621.45 539.868 li
cp
.858824 .792157 .729412 rgb
f
1637.51 374.649 mo
1637.51 374.649 li
1636.18 374.649 1635.09 373.56 1635.09 372.228 cv
1635.09 216.788 li
1635.09 215.457 1636.18 214.367 1637.51 214.367 cv
1638.84 214.367 1639.93 215.457 1639.93 216.788 cv
1639.93 372.228 li
1639.93 373.56 1638.84 374.649 1637.51 374.649 cv
cp
.588235 .545098 .501961 rgb
f
1642.7 375.541 mo
1642.7 379.803 1640.38 383.258 1637.51 383.258 cv
1634.65 383.258 1632.33 379.803 1632.33 375.541 cv
1632.33 371.28 1634.65 367.824 1637.51 367.824 cv
1640.38 367.824 1642.7 371.28 1642.7 375.541 cv
cp
f
1353.24 486.252 mo
1353.24 532.315 li
1355.42 532.315 li
1355.42 486.252 li
.227451 .254902 .341176 rgb
f
1621.45 277.751 mo
1621.45 277.751 1578.84 273.07 1564.07 367.824 cv
1557.13 412.382 1497.02 420.862 1497.45 455.995 cv
1497.88 491.128 1487.62 540.165 1487.62 540.165 cv
1621.45 539.868 li
1621.45 277.751 li
cp
.709804 .654902 .603922 rgb
f
1487.62 540.165 mo
1478.53 540.165 li
1478.53 195.781 li
1487.62 195.781 li
1487.62 540.165 li
cp
1 1 1 rgb
f
1344.7 379.194 mo
1344.7 370.104 li
1621.45 370.104 li
1621.45 379.194 li
1344.7 379.194 li
cp
f
1646.55 221.244 mo
1319.59 221.244 li
1319.59 190.282 li
1646.55 190.282 li
1646.55 221.244 li
cp
.588235 .545098 .501961 rgb
f
1626.69 235.278 mo
1337.42 235.278 li
1337.42 227.183 li
1626.69 227.183 li
1626.69 235.278 li
cp
f
1626.69 249.312 mo
1337.42 249.312 li
1337.42 241.217 li
1626.69 241.217 li
1626.69 249.312 li
cp
f
1626.69 263.345 mo
1337.42 263.345 li
1337.42 255.251 li
1626.69 255.251 li
1626.69 263.345 li
cp
f
1626.69 277.379 mo
1337.42 277.379 li
1337.42 269.285 li
1626.69 269.284 li
1626.69 277.379 li
cp
f
1509.57 566.77 mo
1509.57 566.77 1517.89 516.817 1551.15 485.462 cv
1551.15 485.462 1568.77 551.606 1523.86 568.246 cv
1520.61 569.449 1509.57 566.77 1509.57 566.77 cv
cp
.145098 .65098 .490196 rgb
f
1501.17 509.579 mo
1501.17 509.579 1499.87 465.076 1465 454.126 cv
1465 454.126 1456.5 523.155 1497.45 566.77 cv
1505.93 571.002 li
1501.17 509.579 li
cp
f
1500.3 568.246 mo
1500.3 568.246 1485.14 481.701 1524.78 444.245 cv
1524.78 444.245 1545.72 507.499 1511.11 571.002 cv
1500.3 568.246 li
cp
.160784 .729412 .54902 rgb
f
1513 626.321 mo
1507.83 626.321 li
1492.11 626.321 1479.38 613.583 1479.38 597.87 cv
1479.38 557.939 li
1541.46 557.939 li
1541.46 597.87 li
1541.46 613.583 1528.72 626.321 1513 626.321 cv
cp
.858824 .792157 .729412 rgb
f
1541.46 600.242 mo
1541.46 557.939 li
1533.31 600.829 1523.85 613.44 1494.02 622.354 cv
1498.78 624.853 1504.39 626.321 1510.42 626.321 cv
1510.42 626.321 li
1527.56 626.321 1541.46 614.645 1541.46 600.242 cv
cp
.709804 .654902 .603922 rgb
f
1682.23 822.556 mo
1682.23 828.694 1545.62 833.671 1377.11 833.671 cv
1208.61 833.671 1072 828.695 1072 822.556 cv
1072 816.418 1208.61 811.441 1377.11 811.441 cv
1545.62 811.441 1682.23 816.418 1682.23 822.556 cv
cp
.929412 .878431 .835294 rgb
f
1620.51 817.839 mo
1620.51 817.839 li
1623.37 816.981 1625.07 814.03 1624.36 811.123 cv
1587.22 661.129 li
1549.77 659.606 li
1613.58 814.305 li
1614.58 817.143 1617.63 818.7 1620.51 817.839 cv
cp
.709804 .654902 .603922 rgb
ef
1619.53 681.016 mo
1399.29 681.016 li
1399.29 618.281 li
1619.53 618.281 li
1619.53 681.016 li
cp
.858824 .792157 .729412 rgb
f
1601 663.478 mo
1429.83 663.478 li
1429.83 632.611 li
1601 632.611 li
1601 663.478 li
cp
.709804 .654902 .603922 rgb
f
1667.19 556.85 mo
1666.19 556.85 li
1666.19 559.573 1665.09 562.03 1663.3 563.816 cv
1661.52 565.6 1659.06 566.7 1656.34 566.701 cv
1653.61 566.7 1651.16 565.6 1649.37 563.816 cv
1647.59 562.03 1646.49 559.573 1646.49 556.85 cv
1646.49 554.127 1647.59 551.671 1649.37 549.886 cv
1651.16 548.102 1653.61 547.001 1656.34 547.001 cv
1659.06 547.001 1661.52 548.102 1663.3 549.886 cv
1665.09 551.671 1666.19 554.127 1666.19 556.85 cv
1667.19 556.85 li
1668.19 556.85 li
1668.19 550.306 1662.88 545.001 1656.34 545.001 cv
1649.79 545.001 1644.49 550.305 1644.49 556.85 cv
1644.49 563.395 1649.79 568.7 1656.34 568.701 cv
1662.88 568.7 1668.19 563.395 1668.19 556.85 cv
1667.19 556.85 li
cp
.121569 .0784314 .0235294 rgb
f
845.597 389.475 mo
844.597 389.475 li
844.597 392.198 843.496 394.654 841.712 396.44 cv
839.926 398.224 837.47 399.324 834.747 399.325 cv
832.024 399.324 829.567 398.224 827.782 396.44 cv
825.998 394.654 824.897 392.198 824.896 389.475 cv
824.897 386.752 825.998 384.296 827.782 382.51 cv
829.567 380.726 832.024 379.625 834.747 379.625 cv
837.47 379.625 839.926 380.726 841.712 382.51 cv
843.496 384.296 844.597 386.752 844.597 389.475 cv
845.597 389.475 li
846.597 389.475 li
846.597 382.93 841.292 377.625 834.747 377.625 cv
828.202 377.625 822.897 382.93 822.897 389.475 cv
822.897 396.02 828.202 401.324 834.747 401.325 cv
841.292 401.324 846.597 396.02 846.597 389.475 cv
845.597 389.475 li
cp
f
1135.75 227.183 mo
1134.75 227.183 li
1134.75 229.907 1133.65 232.363 1131.86 234.149 cv
1130.08 235.933 1127.62 237.033 1124.9 237.033 cv
1122.18 237.033 1119.72 235.933 1117.93 234.149 cv
1116.15 232.363 1115.05 229.907 1115.05 227.183 cv
1115.05 224.46 1116.15 222.004 1117.93 220.218 cv
1119.72 218.434 1122.18 217.334 1124.9 217.333 cv
1127.62 217.334 1130.08 218.434 1131.86 220.218 cv
1133.65 222.004 1134.75 224.46 1134.75 227.183 cv
1135.75 227.183 li
1136.75 227.183 li
1136.75 220.638 1131.44 215.334 1124.9 215.333 cv
1118.35 215.334 1113.05 220.638 1113.05 227.183 cv
1113.05 233.729 1118.35 239.033 1124.9 239.033 cv
1131.44 239.033 1136.75 233.729 1136.75 227.183 cv
1135.75 227.183 li
cp
f
1197.36 823.051 mo
1384.25 821.251 li
1404.22 821.058 1420.25 804.719 1420.05 784.756 cv
1415.8 343.159 li
1415.61 323.196 1399.27 307.168 1379.3 307.36 cv
1192.41 309.161 li
1172.45 309.353 1156.42 325.693 1156.61 345.656 cv
1160.87 787.253 li
1161.06 807.216 1177.4 823.243 1197.36 823.051 cv
.290196 .164706 .101961 rgb
f
1183.11 823.051 mo
1370 821.251 li
1389.96 821.058 1405.99 804.719 1405.8 784.756 cv
1401.54 343.159 li
1401.35 323.196 1385.01 307.168 1365.05 307.36 cv
1178.16 309.161 li
1158.19 309.353 1142.17 325.693 1142.36 345.656 cv
1146.61 787.253 li
1146.8 807.216 1163.14 823.243 1183.11 823.051 cv
.490196 .337255 .219608 rgb
f
1179.01 778.458 mo
1372.38 776.594 li
1383.46 776.488 1392.37 767.411 1392.26 756.321 cv
1388.25 340.208 li
1388.15 329.117 1379.07 320.214 1367.98 320.32 cv
1174.61 322.183 li
1163.52 322.29 1154.62 331.367 1154.72 342.457 cv
1158.73 758.57 li
1158.84 769.66 1167.92 778.564 1179.01 778.458 cv
.941176 .890196 .843137 rgb
f
1206.5 321.876 mo
1206.61 321.655 li
1239.7 321.336 li
1239.58 321.557 li
1206.5 321.876 li
.627451 .517647 .431373 rgb
f
1156.4 487.476 mo
1155.81 426.595 li
1206.5 321.876 li
1239.58 321.557 li
1156.4 487.476 li
.956863 .921569 .886274 rgb
f
1269.04 411.863 mo
1269.04 411.863 1288.95 386.021 1321.55 387.289 cv
1387.77 389.865 1360.12 556.6 1360.12 556.6 cv
1360.12 556.6 1312.35 559.04 1300.77 549.122 cv
1289.19 539.204 1320.44 432.523 1296.03 428.111 cv
1271.62 423.699 1269.04 411.863 1269.04 411.863 cv
cp
.290196 .164706 .101961 rgb
f
1209.41 443.366 mo
1209.41 443.366 1218.58 403.183 1259.72 394.383 cv
1300.86 385.583 1312.74 411.325 1317.03 419.754 cv
1321.31 428.183 1339.25 491.577 1291.77 510.386 cv
1255.45 524.772 1209.41 443.366 1209.41 443.366 cv
cp
f
1228.48 471.655 mo
1227.69 483.316 1219.85 492.284 1210.96 491.685 cv
1202.08 491.086 1195.51 481.147 1196.3 469.486 cv
1197.08 457.824 1204.92 448.856 1213.81 449.454 cv
1222.7 450.054 1229.26 459.992 1228.48 471.655 cv
cp
.709804 .654902 .603922 rgb
f
1124.9 618.802 mo
1027.12 507.157 li
998.236 526.16 li
1073.35 657.747 li
1124.9 618.802 li
cp
.929412 .552941 .427451 rgb
f
993.437 518.904 mo
995.895 531.116 987.849 543.29 1006.94 542.965 cv
1023.37 542.684 1034.12 527.192 1031.66 514.98 cv
1029.2 502.769 1017.95 499.961 1001.84 503.205 cv
985.729 506.448 990.979 506.692 993.437 518.904 cv
cp
f
1025.85 508.083 mo
1025.85 508.083 1030.42 503.742 1016.63 497.285 cv
1013.31 495.732 1001.52 491.127 995.965 489.664 cv
989.652 488.004 988.964 494.17 992.384 497.184 cv
1004.43 507.8 1007.32 507.296 1005.91 509.007 cv
1004.49 510.718 1025.85 508.083 1025.85 508.083 cv
cp
f
1002.31 542.744 mo
1002.31 542.744 960.523 536.56 952.084 523.61 cv
952.084 523.61 948.931 518.011 953.658 518.052 cv
953.658 518.052 950.977 516.322 951.891 514.077 cv
953.299 510.619 955.412 510.205 955.412 510.205 cv
955.412 510.205 949.599 507.423 952.24 503.646 cv
953.946 501.208 958.148 503.116 958.148 503.116 cv
958.148 503.116 955.919 502.525 957.949 498.369 cv
959.981 494.213 965.99 496.03 974.662 498.823 cv
983.334 501.617 997.761 503.791 997.761 503.791 cv
1002.31 542.744 li
cp
f
1015.32 519.195 mo
1014.84 518.893 1014.32 518.673 1013.73 518.442 cv
1012.7 518.045 1011.47 517.642 1010.18 517.107 cv
1008.25 516.307 1006.24 515.216 1004.75 513.559 cv
1003.26 511.895 1002.22 509.691 1002.2 506.302 cv
1002.2 505.963 1002.21 505.612 1002.24 505.25 cv
1002.28 504.544 1001.75 503.936 1001.04 503.892 cv
1000.34 503.847 999.729 504.383 999.684 505.088 cv
999.658 505.503 999.645 505.908 999.645 506.302 cv
999.641 509.302 1000.4 511.733 1001.61 513.638 cv
1003.42 516.503 1006.16 518.13 1008.59 519.21 cv
1009.81 519.75 1010.97 520.158 1011.93 520.504 cv
1012.88 520.842 1013.64 521.15 1013.94 521.35 cv
1014.53 521.731 1015.32 521.557 1015.71 520.962 cv
1016.09 520.367 1015.91 519.575 1015.32 519.195 cv
cp
.729412 .329412 .345098 rgb
f
995.686 511.959 mo
995.657 511.962 li
995.487 511.98 994.594 512.063 993.103 512.063 cv
988.017 512.062 975.988 511.099 961.77 503.306 cv
961.151 502.966 960.373 503.193 960.033 503.813 cv
959.694 504.432 959.921 505.21 960.54 505.55 cv
975.22 513.596 987.7 514.622 993.103 514.622 cv
994.916 514.622 995.935 514.506 995.979 514.501 cv
996.681 514.42 997.184 513.786 997.103 513.084 cv
997.022 512.382 996.388 511.878 995.686 511.959 cv
cp
f
991.331 520.823 mo
992.21 521.584 li
991.755 520.511 li
991.68 520.55 991.546 520.589 991.331 520.823 cv
992.21 521.584 li
991.755 520.511 li
992.069 521.253 li
991.871 520.471 li
991.755 520.511 li
992.069 521.253 li
991.871 520.471 li
991.947 520.773 li
991.883 520.468 li
991.871 520.471 li
991.947 520.773 li
991.883 520.468 li
991.812 520.478 li
991.666 520.495 991.363 520.51 990.967 520.51 cv
988.623 520.513 983.004 520.028 976.718 518.385 cv
970.42 516.747 963.431 513.94 958.202 509.417 cv
957.667 508.955 956.859 509.015 956.397 509.549 cv
955.935 510.084 955.994 510.892 956.529 511.354 cv
962.219 516.26 969.542 519.155 976.072 520.861 cv
982.612 522.563 988.334 523.066 990.967 523.069 cv
991.392 523.068 991.738 523.056 992.031 523.028 cv
992.179 523.012 992.312 522.995 992.469 522.959 cv
992.549 522.939 992.635 522.916 992.753 522.867 cv
992.87 522.81 993.033 522.753 993.265 522.499 cv
993.728 521.965 993.67 521.157 993.136 520.694 cv
992.602 520.231 991.794 520.289 991.331 520.823 cv
cp
f
988.025 529.133 mo
988.165 530.326 li
988.11 529.126 li
988.025 529.133 li
988.165 530.326 li
988.11 529.126 li
988.141 529.809 li
988.12 529.126 li
988.11 529.126 li
988.141 529.809 li
988.12 529.126 li
987.984 529.127 li
987.055 529.128 982.244 529.026 976.05 527.614 cv
969.852 526.205 962.276 523.483 955.749 518.309 cv
955.195 517.871 954.39 517.964 953.951 518.518 cv
953.512 519.072 953.606 519.876 954.16 520.315 cv
961.105 525.814 969.037 528.64 975.482 530.109 cv
981.931 531.576 986.899 531.685 987.984 531.686 cv
988.139 531.685 li
988.194 531.684 li
988.227 531.683 li
988.323 531.675 li
989.025 531.593 989.527 530.957 989.445 530.255 cv
989.362 529.553 988.727 529.051 988.025 529.133 cv
cp
f
1179.01 778.457 mo
1372.38 776.595 li
1383.46 776.488 1392.37 767.411 1392.26 756.321 cv
1391.14 639.574 li
1390.93 636.05 li
1390.93 587.426 1359.36 534.798 1310.73 534.798 cv
1247.78 534.798 li
1199.16 534.798 1184.11 574.216 1184.11 622.84 cv
1172.21 675.102 1165.06 724.651 1163.31 771.125 cv
1167.03 775.65 1172.69 778.518 1179.01 778.457 cv
cp
1 1 1 rgb
f
1288.93 547.23 mo
1256.84 553.252 li
1235.34 492.452 li
1287.5 477.86 li
1287.97 496.915 1284.82 525.814 1300.27 535.888 cv
1302.67 542.685 1296.01 545.9 1288.93 547.23 cv
cp
.929412 .552941 .427451 rgb
f
1221.34 778.016 mo
1222.41 778.267 1315.36 711.106 1315.36 711.106 cv
1356.24 748.557 li
1275.57 777.644 li
1254.84 778.016 li
1221.34 778.016 li
cp
f
1124.9 615.46 mo
1173.77 687.949 li
1226.68 566.671 li
1216.21 542.971 li
1124.9 615.46 li
cp
1 1 1 rgb
f
1243.09 534.798 mo
1243.09 534.798 1203.63 591.42 1242.16 588.667 cv
1280.69 585.915 1310.73 534.798 1310.73 534.798 cv
1243.09 534.798 li
cp
.929412 .552941 .427451 rgb
f
1294.52 473.161 mo
1293.36 501.347 1265.43 523.572 1242.16 522.86 cv
1212.39 521.95 1204.99 503.386 1212.39 469.704 cv
1213.11 466.425 1213.13 454.912 1213.61 450.868 cv
1217.94 414.978 1233.59 419.546 1254.49 420.402 cv
1277.75 421.355 1295.67 444.976 1294.52 473.161 cv
cp
f
1228.07 489.422 mo
1227.75 489.351 1227.54 489.281 1227.41 489.216 cv
1227.28 489.149 1227.22 489.104 1227.12 488.984 cv
1226.81 488.585 1226.65 488.089 1226.65 487.543 cv
1226.64 487.054 1226.78 486.537 1227.04 486.087 cv
1229.33 482.067 li
1232.92 475.772 li
1232.93 475.755 li
1232.95 475.716 1233.37 474.95 1233.8 473.777 cv
1234.22 472.603 1234.65 471.024 1234.66 469.316 cv
1234.66 468.472 1234.55 467.594 1234.26 466.73 cv
1233.97 465.867 1233.49 465.021 1232.79 464.282 cv
1232.33 463.798 1231.56 463.779 1231.08 464.239 cv
1230.59 464.7 1230.57 465.466 1231.03 465.951 cv
1231.48 466.423 1231.77 466.937 1231.96 467.502 cv
1232.15 468.065 1232.24 468.681 1232.24 469.316 cv
1232.24 470.6 1231.89 471.949 1231.52 472.955 cv
1231.34 473.458 1231.16 473.877 1231.02 474.164 cv
1230.95 474.308 1230.9 474.419 1230.86 474.492 cv
1230.82 474.571 li
1230.81 474.588 li
1230.81 474.589 li
1231.87 475.172 li
1230.82 474.572 li
1227.23 480.867 li
1224.93 484.888 li
1224.47 485.702 1224.23 486.618 1224.22 487.543 cv
1224.22 488.569 1224.54 489.623 1225.23 490.491 cv
1225.53 490.879 1225.93 491.185 1226.33 491.383 cv
1226.74 491.584 1227.14 491.693 1227.54 491.784 cv
1228.19 491.93 1228.84 491.519 1228.99 490.867 cv
1229.13 490.215 1228.72 489.568 1228.07 489.422 cv
cp
.729412 .329412 .345098 rgb
f
1233.23 492.672 mo
1235.85 492.287 li
1236.51 492.19 1236.96 491.575 1236.87 490.914 cv
1236.77 490.252 1236.16 489.795 1235.49 489.892 cv
1232.88 490.277 li
1232.21 490.374 1231.76 490.989 1231.85 491.65 cv
1231.95 492.312 1232.57 492.769 1233.23 492.672 cv
f
1253.91 473.039 mo
1253.93 474.852 1252.59 476.334 1250.94 476.349 cv
1249.29 476.365 1247.93 474.908 1247.92 473.095 cv
1247.91 471.282 1249.24 469.8 1250.9 469.785 cv
1252.55 469.77 1253.9 471.227 1253.91 473.039 cv
cp
.278431 .180392 .203922 rgb
f
1224.3 469.64 mo
1224.31 471.427 1223.3 472.881 1222.03 472.889 cv
1220.77 472.897 1219.74 471.454 1219.73 469.668 cv
1219.72 467.882 1220.73 466.427 1222 466.42 cv
1223.26 466.412 1224.29 467.854 1224.3 469.64 cv
cp
f
1246.77 494.812 mo
1247.39 494.316 1248.37 495.185 1248.41 496.269 cv
1248.53 499.513 1246.9 505.241 1242.88 506.765 cv
1237.29 508.886 1233.87 504.5 1231.44 501.606 cv
1230.67 500.695 1230.9 499.28 1231.8 499.398 cv
1238.39 500.269 1242.98 497.895 1246.77 494.812 cv
cp
1 1 1 rgb
f
1203.08 460.895 mo
1205.11 458.905 1215.83 420.576 1220.89 414.625 cv
1228.56 405.622 1242.48 395.381 1252.35 397.508 cv
1262.22 399.635 1296.04 405.75 1307.58 417.518 cv
1314.09 424.166 1307.03 417.925 1305.56 439.257 cv
1304.09 460.588 1316.06 486.947 1294.57 490.865 cv
1273.08 494.783 1292.55 472.97 1281.7 465.455 cv
1270.85 457.94 1265.6 457.231 1264.6 434.683 cv
1264.39 429.93 1257.52 413.972 1253.46 419.754 cv
1223.89 461.826 1208.4 461.695 1203.08 460.895 cv
cp
.290196 .164706 .101961 rgb
f
1304.2 477.44 mo
1302.18 488.207 1294.97 495.891 1288.11 494.604 cv
1281.25 493.317 1277.32 483.544 1279.34 472.777 cv
1281.36 462.01 1288.56 454.325 1295.42 455.613 cv
1302.29 456.9 1306.21 466.673 1304.2 477.44 cv
cp
.529412 .490196 .447059 rgb
f
1316.36 477.578 mo
1315.57 489.24 1307.73 498.208 1298.84 497.609 cv
1289.96 497.01 1283.39 487.071 1284.18 475.409 cv
1284.96 463.747 1292.81 454.779 1301.69 455.378 cv
1310.58 455.977 1317.14 465.916 1316.36 477.578 cv
cp
.709804 .654902 .603922 rgb
f
1302.93 467.117 mo
1301.43 467.117 1300.1 466.053 1299.82 464.529 cv
1295.63 441.995 1285.95 426.247 1271.04 417.722 cv
1248.78 404.99 1222.86 412.718 1222.62 412.806 cv
1220.98 413.4 1219.16 412.562 1218.56 410.924 cv
1217.96 409.287 1218.78 407.475 1220.42 406.869 cv
1220.69 406.769 1249.22 398.061 1274.02 412.129 cv
1290.71 421.598 1301.49 438.84 1306.04 463.373 cv
1306.36 465.092 1305.23 466.744 1303.51 467.064 cv
1303.31 467.1 1303.12 467.117 1302.93 467.117 cv
cp
f
1309.82 476.673 mo
1309.82 482.868 1306.73 487.89 1302.93 487.89 cv
1299.13 487.89 1296.04 482.868 1296.04 476.673 cv
1296.04 470.477 1299.13 465.455 1302.93 465.455 cv
1306.73 465.455 1309.82 470.477 1309.82 476.673 cv
cp
1 1 1 rgb
f
1251.96 521.223 mo
1250.35 521.223 1248.97 519.997 1248.81 518.359 cv
1248.64 516.618 1249.92 515.072 1251.66 514.906 cv
1277.75 512.409 1286.67 494.477 1290.02 487.726 cv
1290.57 486.638 1290.92 485.919 1291.3 485.376 cv
1292.3 483.94 1294.27 483.583 1295.71 484.58 cv
1297.14 485.576 1297.5 487.546 1296.5 488.982 cv
1296.37 489.185 1296 489.939 1295.69 490.545 cv
1292.27 497.429 1281.86 518.378 1252.26 521.209 cv
1252.16 521.219 1252.06 521.223 1251.96 521.223 cv
cp
f
1252.63 519.556 mo
1252.4 522.878 1248.9 525.341 1244.81 525.057 cv
1240.72 524.775 1237.59 521.853 1237.82 518.532 cv
1238.05 515.212 1241.55 512.749 1245.64 513.031 cv
1249.73 513.314 1252.86 516.235 1252.63 519.556 cv
cp
f
1176.73 684.818 mo
1176.73 684.813 1187.4 630.593 1189.17 621.103 cv
1189.51 619.264 1189.65 617.33 1189.65 615.391 cv
1189.65 611.03 1188.96 606.633 1188.29 603.303 cv
1187.61 599.975 1186.93 597.72 1186.93 597.689 cv
1186.69 596.895 1185.85 596.445 1185.06 596.683 cv
1184.26 596.921 1183.81 597.757 1184.05 598.551 cv
1184.08 598.64 li
1184.35 599.573 1186.65 607.791 1186.65 615.391 cv
1186.65 617.189 1186.52 618.949 1186.22 620.553 cv
1185.34 625.269 1182.23 641.201 1179.34 655.94 cv
1177.9 663.31 1176.51 670.385 1175.48 675.617 cv
1174.97 678.233 1174.54 680.388 1174.25 681.89 cv
1173.95 683.391 1173.79 684.236 1173.79 684.239 cv
1173.63 685.051 1174.16 685.84 1174.97 686 cv
1175.78 686.16 1176.57 685.631 1176.73 684.818 cv
cp
.701961 .647059 .592157 rgb
f
1320.2 422.457 mo
1320.17 422.387 1317.98 417.216 1313.79 411.267 cv
1309.59 405.329 1303.4 398.55 1295.16 395.46 cv
1294.29 395.138 1293.33 395.579 1293 396.445 cv
1292.68 397.311 1293.12 398.274 1293.99 398.597 cv
1301.21 401.27 1307.07 407.532 1311.05 413.195 cv
1313.04 416.02 1314.57 418.68 1315.59 420.624 cv
1316.1 421.597 1316.49 422.39 1316.75 422.936 cv
1316.87 423.209 1316.97 423.42 1317.03 423.561 cv
1317.1 423.718 li
1317.12 423.763 li
1317.48 424.614 1318.46 425.012 1319.31 424.651 cv
1320.17 424.29 1320.56 423.308 1320.2 422.457 cv
cp
.509804 .470588 .678431 rgb
f
1301.51 613.319 mo
1277.92 613.319 li
1275.44 613.319 1273.41 611.293 1273.41 608.816 cv
1273.41 606.339 1275.44 604.312 1277.92 604.312 cv
1301.51 604.312 li
1303.98 604.312 1306.01 606.339 1306.01 608.816 cv
1306.01 611.293 1303.98 613.319 1301.51 613.319 cv
cp
1 1 1 rgb
f
1258.34 459.276 mo
1255.79 457.238 1251.54 458.044 1251.5 458.054 cv
1251.31 458.091 1251.12 458.087 1250.94 458.047 cv
1250.42 457.932 1250 457.528 1249.89 456.982 cv
1249.75 456.244 1250.22 455.527 1250.96 455.379 cv
1251.19 455.333 1256.49 454.308 1260.04 457.144 cv
1260.63 457.615 1260.72 458.474 1260.25 459.062 cv
1259.79 459.649 1258.93 459.748 1258.34 459.276 cv
cp
.411765 .266667 .301961 rgb
f
1231.02 456.233 mo
1230.55 456.822 1229.7 456.917 1229.1 456.447 cv
1226.56 454.41 1222.31 455.215 1222.27 455.225 cv
1222.07 455.263 1221.88 455.258 1221.71 455.218 cv
1221.19 455.103 1220.77 454.699 1220.66 454.153 cv
1220.52 453.415 1220.99 452.698 1221.73 452.55 cv
1221.96 452.505 1227.26 451.479 1230.81 454.315 cv
1231.4 454.786 1231.49 455.645 1231.02 456.233 cv
cp
f
1325.41 695.346 mo
1325.41 695.343 1325.4 694.526 1325.4 693.08 cv
1325.37 688.743 1325.32 678.776 1325.32 668.449 cv
1325.32 657.939 1325.37 647.041 1325.56 641.374 cv
1325.78 634.737 1325.78 625.825 1326.21 618.169 cv
1326.43 614.345 1326.75 610.833 1327.26 608.131 cv
1327.51 606.781 1327.8 605.634 1328.13 604.78 cv
1328.44 603.923 1328.81 603.381 1329.02 603.215 cv
1333.11 599.588 1334.54 597.261 1334.62 597.127 cv
1335.04 596.417 1334.81 595.496 1334.1 595.069 cv
1333.39 594.643 1332.47 594.873 1332.04 595.583 cv
1332.04 595.584 li
1331.96 595.716 1330.66 597.749 1327.03 600.97 cv
1326.23 601.687 1325.74 602.62 1325.32 603.721 cv
1324.6 605.649 1324.13 608.177 1323.78 611.136 cv
1323.26 615.566 1323.03 620.934 1322.89 626.288 cv
1322.75 631.64 1322.71 636.973 1322.56 641.274 cv
1322.37 647.032 1322.32 657.922 1322.32 668.449 cv
1322.32 682.231 1322.41 695.365 1322.41 695.367 cv
1322.42 696.195 1323.09 696.862 1323.92 696.856 cv
1324.75 696.85 1325.42 696.174 1325.41 695.346 cv
cp
.701961 .647059 .592157 rgb
f
1298.6 526.322 mo
1298.6 526.322 1293.9 556.866 1302.93 575.62 cv
1302.93 575.62 1323.73 538.08 1337.45 540.531 cv
1351.17 542.983 1365.53 538.964 1364.68 515.555 cv
1363.83 492.148 1336.73 490.603 1336.73 490.603 cv
1298.6 526.322 li
cp
.290196 .164706 .101961 rgb
f
1232.72 678.247 mo
1232.92 698.056 1249.14 713.953 1268.95 713.752 cv
1288.76 713.551 1304.66 697.328 1304.45 677.518 cv
1304.25 657.708 1288.03 641.812 1268.22 642.013 cv
1248.41 642.215 1232.51 658.437 1232.72 678.247 cv
cp
.160784 .729412 .54902 rgb
f
1291.15 681.788 mo
1291.09 678.429 1289.79 675.208 1287.47 672.78 cv
1283.83 668.975 1277.34 664.252 1267.62 664.35 cv
1257.91 664.449 1252.09 669.297 1248.99 673.17 cv
1247.06 675.576 1246.05 678.583 1246.08 681.667 cv
1246.11 684.369 li
1246.14 687.64 1248.82 690.265 1252.09 690.232 cv
1255.36 690.199 1257.99 687.52 1257.95 684.249 cv
1257.91 679.558 li
1257.9 678.945 1258.17 678.347 1258.65 677.967 cv
1265.15 672.81 1271.58 672.517 1277.9 677.768 cv
1278.35 678.142 1278.61 678.715 1278.62 679.301 cv
1278.65 684.043 li
1278.67 687.311 1281.34 689.943 1284.61 689.923 cv
1285.3 689.919 li
1288.6 689.899 1291.25 687.185 1291.19 683.886 cv
1291.15 681.788 li
cp
.964706 .980392 .952941 rgb
f
1063.77 463.917 mo
969.01 463.917 li
942.153 463.917 920.382 442.146 920.382 415.289 cv
920.382 388.433 942.153 366.662 969.01 366.662 cv
1063.77 366.662 li
1090.63 366.662 1112.4 388.433 1112.4 415.289 cv
1112.4 442.146 1090.63 463.917 1063.77 463.917 cv
cp
.929412 .690196 .494118 rgb
f
995.609 414.303 mo
995.609 428.015 984.493 439.131 970.78 439.131 cv
957.068 439.131 945.953 428.015 945.953 414.303 cv
945.953 400.591 957.068 389.475 970.78 389.475 cv
984.493 389.475 995.609 400.591 995.609 414.303 cv
cp
.819608 .607843 .435294 rgb
f
1071.9 403.991 mo
1014.64 403.991 li
1013.97 403.991 1013.43 403.446 1013.43 402.774 cv
1013.43 402.102 1013.97 401.558 1014.64 401.558 cv
1071.9 401.558 li
1072.57 401.558 1073.12 402.102 1073.12 402.774 cv
1073.12 403.446 1072.57 403.991 1071.9 403.991 cv
cp
1 1 1 rgb
f
1048.32 428.991 mo
1014.64 428.991 li
1013.97 428.991 1013.43 428.447 1013.43 427.775 cv
1013.43 427.103 1013.97 426.558 1014.64 426.558 cv
1048.32 426.558 li
1049 426.558 1049.54 427.103 1049.54 427.775 cv
1049.54 428.447 1049 428.991 1048.32 428.991 cv
cp
f
1029.41 459.215 mo
1077.47 489.386 li
1077.47 440.777 li
1029.41 459.215 li
cp
.929412 .690196 .494118 rgb
f
975.77 343.249 mo
975.77 367.072 995.082 386.384 1018.9 386.384 cv
1042.73 386.384 1062.04 367.072 1062.04 343.249 cv
1062.04 319.426 1042.73 300.114 1018.9 300.114 cv
995.082 300.114 975.77 319.426 975.77 343.249 cv
cp
.160784 .729412 .54902 rgb
f
1031.92 343.087 mo
1031.92 345.736 1034.07 347.883 1036.72 347.883 cv
1039.37 347.883 1041.52 345.736 1041.52 343.087 cv
1041.52 340.438 1039.37 338.29 1036.72 338.29 cv
1034.07 338.29 1031.92 340.438 1031.92 343.087 cv
cp
1 1 1 rgb
f
1014.05 343.087 mo
1014.05 345.736 1016.2 347.883 1018.85 347.883 cv
1021.5 347.883 1023.65 345.736 1023.65 343.087 cv
1023.65 340.438 1021.5 338.29 1018.85 338.29 cv
1016.2 338.29 1014.05 340.438 1014.05 343.087 cv
cp
f
996.183 343.087 mo
996.183 345.736 998.33 347.883 1000.98 347.883 cv
1003.63 347.883 1005.78 345.736 1005.78 343.087 cv
1005.78 340.438 1003.63 338.29 1000.98 338.29 cv
998.33 338.29 996.183 340.438 996.183 343.087 cv
cp
f
1018.62 388.342 mo
1006.83 388.342 995.75 383.751 987.414 375.415 cv
987.024 375.024 987.024 374.391 987.414 374.001 cv
987.805 373.61 988.438 373.61 988.828 374.001 cv
996.786 381.959 1007.37 386.342 1018.62 386.342 cv
1041.86 386.342 1060.76 367.44 1060.76 344.206 cv
1060.76 334.579 1057.43 325.165 1051.38 317.7 cv
1051.03 317.271 1051.1 316.641 1051.52 316.294 cv
1051.96 315.944 1052.58 316.013 1052.93 316.441 cv
1059.27 324.262 1062.76 334.122 1062.76 344.206 cv
1062.76 368.543 1042.96 388.342 1018.62 388.342 cv
cp
.121569 .0784314 .0235294 rgb
f
1066.57 815.763 mo
1066.57 825.601 990.21 833.578 896.012 833.578 cv
801.815 833.578 725.452 825.601 725.452 815.762 cv
725.452 805.922 801.814 797.945 896.012 797.946 cv
990.21 797.946 1066.57 805.923 1066.57 815.763 cv
cp
.929412 .878431 .835294 rgb
ef
945.309 635.879 mo
945.309 635.879 1038.56 689.75 1020.06 764.305 cv
1012.8 793.57 975.723 811.032 933.419 815.946 cv
891.115 820.86 827.902 816.804 817.113 816.967 cv
797.796 817.26 706.123 790.026 770.331 616.917 cv
779.599 591.931 792.202 545.441 835.25 539.835 cv
878.297 534.229 895.845 604.381 945.309 635.879 cv
cp
.839216 .807843 .764706 rgb
f
770.331 617.505 mo
778.959 594.244 790.491 552.364 826.773 542.166 cv
730.201 693.049 792.915 797.946 857.25 782.05 cv
867.725 779.461 931.252 785.942 973.555 781.028 cv
989.76 779.146 1005.19 775.416 1018.48 769.893 cv
1008.44 796.149 973.253 811.907 933.419 816.533 cv
891.115 821.447 827.902 817.391 817.113 817.555 cv
797.796 817.847 706.124 790.613 770.331 617.505 cv
cp
.788235 .760784 .721569 rgb
f
920.141 719.949 mo
919.55 723.011 921.758 725.813 925.49 726.803 cv
932.099 728.553 949.789 723.63 959.653 743.119 cv
966.813 757.262 999.711 790.161 1017.75 803.395 cv
1020.37 805.322 1018.24 804.746 1021.57 803.278 cv
1025.66 801.473 1030.73 804.719 1029 801.597 cv
1029 801.597 974.401 705.958 967.588 709.43 cv
932.732 708.964 li
932.732 708.964 937.12 716 936.49 719.263 cv
920.141 719.949 li
cp
.788235 .345098 .211765 rgb
ef
1026.74 796.996 mo
1036.89 797.096 li
1039.13 797.324 1048.16 794.278 1048.16 794.278 cv
1050.01 795.253 1049.19 797.105 1048.14 798.2 cv
1026.35 813.726 li
1026.35 813.726 1020.63 816.388 1017.92 803.569 cv
1023.1 802.385 1027.93 800.722 1026.74 796.996 cv
cp
.290196 .164706 .101961 rgb
ef
938.718 755.118 mo
945.968 769.215 979.077 801.902 997.197 815.021 cv
999.835 816.93 997.699 816.369 1001.02 814.88 cv
1005.1 813.048 1010.19 816.262 1008.44 813.151 cv
956.161 719.086 li
954.569 716.283 951.826 714.036 948.314 712.488 cv
941.45 709.463 933 710.042 926.211 713.558 cv
911.578 721.137 li
911.578 721.137 916.011 728.144 915.402 731.412 cv
915.402 731.412 928.729 735.693 938.718 755.118 cv
cp
.788235 .345098 .211765 rgb
ef
1006.15 808.564 mo
1016.3 808.599 li
1018.54 808.812 1027.55 805.709 1027.55 805.709 cv
1029.41 806.672 1028.6 808.529 1027.55 809.631 cv
1005.87 825.297 li
1005.87 825.297 1000.17 827.994 997.369 815.194 cv
1002.55 813.976 1007.37 812.283 1006.15 808.564 cv
cp
.290196 .164706 .101961 rgb
ef
1030.57 783.676 mo
1030.92 784.113 1014.44 798.327 1009.05 800.057 cv
992.9 783.033 li
1004.5 803.305 li
1004.5 803.305 991.969 817.057 985.397 817.346 cv
985.397 817.346 958.653 783.707 956.103 781.714 cv
953.551 779.721 929.296 752.822 927.257 749.989 cv
920.649 740.805 908.674 738.775 899.6 736.778 cv
890.526 734.78 852.626 732.114 839.857 728.074 cv
827.089 724.033 818.452 683.514 818.452 683.514 cv
893.512 667.862 li
893.512 667.862 959.53 695.864 964.174 698.318 cv
969.068 700.905 976.331 709.393 980.164 713.433 cv
999.408 733.712 1018.96 769.01 1030.57 783.676 cv
cp
.580392 .4 .258824 rgb
ef
993.99 780.715 mo
993.988 780.713 993.415 779.958 992.401 778.622 cv
988.855 773.944 979.943 762.17 971.557 750.933 cv
967.364 745.314 963.302 739.83 960.11 735.437 cv
958.514 733.241 957.135 731.318 956.068 729.79 cv
955.004 728.266 954.242 727.12 953.917 726.55 cv
951.235 721.861 948.036 718.174 944.217 715.198 cv
938.484 710.732 931.398 707.871 922.563 705.413 cv
913.725 702.955 903.114 700.896 890.248 698.08 cv
889.708 697.961 889.175 698.303 889.057 698.843 cv
888.939 699.382 889.281 699.915 889.82 700.033 cv
907.008 703.792 920.12 706.207 930.134 709.925 cv
935.143 711.783 939.373 713.959 942.987 716.776 cv
946.601 719.595 949.612 723.056 952.181 727.543 cv
952.638 728.34 953.576 729.726 954.909 731.62 cv
964.208 744.82 992.392 781.919 992.397 781.925 cv
992.731 782.365 993.359 782.451 993.798 782.116 cv
994.238 781.782 994.324 781.155 993.99 780.715 cv
cp
.321569 .27451 .211765 rgb
f
892.449 644.952 mo
900.226 649.942 909.497 649.614 916.283 641.327 cv
940.512 594.93 li
929.663 593.846 li
906.078 625.345 li
892.449 644.952 li
cp
.788235 .345098 .211765 rgb
ef
929.663 593.846 mo
936.708 587.423 li
938.116 586.139 939.939 585.403 941.843 585.348 cv
949.557 585.128 li
952.245 585.051 954.182 587.684 953.308 590.227 cv
943.997 597.801 li
941.943 599.471 939.161 600.369 936.213 600.314 cv
931.298 600.222 li
929.663 593.846 li
cp
f
911.368 637.348 mo
889.722 589.889 li
884.429 579.133 872.737 575.819 865.149 582.925 cv
862.159 585.724 861.809 591.085 864.362 594.965 cv
896.151 643.268 li
911.368 637.348 li
cp
ef
877.451 579.457 mo
857.55 574.826 li
849.08 576.259 li
842.532 577.234 li
823.514 587.414 li
815.554 592.499 810.976 606.799 811.883 612.475 cv
821.125 640.408 li
816.985 662.691 814.011 668.457 817.567 690.536 cv
850.832 692.638 906.857 675.55 909.128 672.298 cv
906.545 655.349 902.544 648.691 899.205 635.231 cv
893.83 613.56 885.917 592.516 877.451 579.457 cv
cp
1 1 1 rgb
ef
858.285 575.701 mo
858.285 575.701 870.616 590.408 857.359 592.721 cv
844.102 595.035 836.29 580.224 836.29 580.224 cv
845.568 574.826 li
858.285 575.701 li
cp
.788235 .345098 .211765 rgb
f
875.61 579.234 mo
875.61 579.234 886.236 578.808 893.792 596.421 cv
901.348 614.034 906.663 617.207 906.663 617.207 cv
888.58 631.764 li
868.109 591.389 li
875.61 579.234 li
cp
1 1 1 rgb
ef
896.802 624.914 mo
896.798 624.903 895.904 621.83 894.563 617.953 cv
893.217 614.073 891.438 609.404 889.607 606.125 cv
886.556 600.68 886.436 598.569 886.443 598.363 cv
886.443 598.347 li
885.823 598.308 li
886.439 598.389 li
886.443 598.347 li
885.823 598.308 li
886.439 598.389 li
886.51 597.841 886.124 597.339 885.576 597.268 cv
885.029 597.197 884.527 597.583 884.456 598.13 cv
884.45 598.176 884.443 598.252 884.443 598.363 cv
884.45 599.12 884.726 601.486 887.861 607.101 cv
889.576 610.162 891.351 614.783 892.673 618.608 cv
893.335 620.522 893.888 622.241 894.275 623.48 cv
894.468 624.099 894.62 624.599 894.724 624.943 cv
894.827 625.287 894.881 625.472 894.881 625.472 cv
895.035 626.003 895.59 626.308 896.121 626.153 cv
896.651 625.999 896.956 625.444 896.802 624.914 cv
cp
.85098 .784314 .717647 rgb
f
873.688 738.734 mo
873.688 738.734 862.273 670.583 795.806 665.503 cv
795.806 714.18 li
873.688 738.734 li
cp
.839216 .807843 .764706 rgb
ef
836.052 667.862 mo
834.255 615.965 li
834.075 604.487 825.614 598.199 816.473 602.749 cv
812.872 604.542 810.466 609.445 811.069 613.762 cv
813.529 666.192 li
836.052 667.862 li
cp
.788235 .345098 .211765 rgb
ef
835.554 602.907 mo
838.024 639.041 li
809.527 642.461 li
811.928 634.82 805.774 607.264 815.977 593.409 cv
827.196 578.175 835.554 602.907 835.554 602.907 cv
cp
1 1 1 rgb
ef
839.023 635.771 mo
837.999 612.416 li
837.976 612.245 li
836.129 603.855 li
836.01 603.316 835.477 602.975 834.937 603.094 cv
834.398 603.212 834.057 603.746 834.176 604.285 cv
836.004 612.59 li
837.025 635.859 li
837.049 636.411 837.516 636.839 838.068 636.814 cv
838.62 636.79 839.047 636.323 839.023 635.771 cv
cp
.85098 .784314 .717647 rgb
f
813.05 658.583 mo
812.532 667.698 812.618 675.614 822.35 680.618 cv
878.946 696.013 li
876.732 685.184 li
836.168 664.413 li
813.05 658.583 li
cp
.788235 .345098 .211765 rgb
ef
873.006 684.764 mo
882.542 684.516 li
884.447 684.467 886.346 685.103 887.894 686.309 cv
894.158 691.197 li
896.342 692.9 896.267 696.164 894.013 697.517 cv
881.973 697.152 li
879.317 697.071 876.556 695.93 874.247 693.956 cv
870.398 690.666 li
873.006 684.764 li
cp
f
838.459 563.381 mo
838.852 564.879 838.529 571.452 846.564 570.579 cv
852.606 569.922 850.275 552.598 850.275 552.598 cv
838.459 563.381 li
cp
.341176 .164706 .133333 rgb
ef
856.661 565.123 mo
856.661 565.123 856.899 573.317 857.096 580.104 cv
857.149 581.912 856.046 583.656 854.214 584.666 cv
852.38 585.677 850.101 585.796 848.25 584.979 cv
847.644 584.712 847.053 584.451 846.494 584.205 cv
843.956 583.085 842.485 580.785 842.717 578.299 cv
843.314 571.928 844.399 560.322 844.399 560.322 cv
856.661 565.123 li
cp
.788235 .345098 .211765 rgb
ef
856.884 569.671 mo
856.761 574.588 li
851.925 570.592 li
856.884 569.671 li
cp
.529412 .231373 .141176 rgb
ef
860.048 559.488 mo
858.72 561.391 864.616 552.369 856.808 546.935 cv
848.729 541.313 849.714 557.006 849.973 557.174 cv
850.233 557.343 860.048 559.488 860.048 559.488 cv
cp
.341176 .164706 .133333 rgb
ef
840.977 558.143 mo
840.001 555.77 841.111 553.055 843.456 552.08 cv
845.96 551.04 849.116 549.726 851.619 548.686 cv
853.964 547.711 856.305 549.023 857.632 551.217 cv
859.198 553.806 861.136 559.725 862.026 564.189 cv
862.529 566.707 861.591 569.61 859.247 570.586 cv
856.743 571.627 848.25 572.333 845.663 568.105 cv
843.694 564.887 842.413 561.637 840.977 558.143 cv
cp
.788235 .345098 .211765 rgb
ef
836.615 567.041 mo
836.615 567.041 833.782 557.334 836.641 552.852 cv
840.483 546.831 846.57 542.583 855.364 547.027 cv
855.364 547.027 860.004 548.53 847.345 553.353 cv
845.738 553.966 850.623 561.96 848.681 563.15 cv
846.066 564.754 844.955 565.556 840.352 566.577 cv
836.615 567.041 li
cp
.341176 .164706 .133333 rgb
ef
842.247 568.655 mo
843.659 570.214 845.835 570.525 847.107 569.35 cv
848.379 568.177 848.266 565.96 846.854 564.401 cv
845.443 562.842 843.267 562.53 841.995 563.705 cv
840.723 564.88 840.836 567.096 842.247 568.655 cv
cp
.788235 .345098 .211765 rgb
ef
1073.35 657.747 mo
1073.35 657.747 1107.01 714.403 1128.37 706.887 cv
1149.74 699.37 1165.86 676.228 1165.86 676.228 cv
1133.72 628.548 li
1124.9 618.802 li
1073.35 657.747 li
cp
.929412 .552941 .427451 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.0.0
%%For: (Irina) ()
%%Title: (customer support.eps)
%%CreationDate: 6/28/2021 6:55 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H`nO5E@(CpJGp&Q*s9sXkdp=bRAjI#E$)_2%kLA8lkqI86%`du'$&hQ#+KJ5p=!rMF!@oi/h+>8O7=-%r]p&Ri`=V\1F(q"
%ioFJE`VnP0^AR?BQbU7aqu?TTk/Va?2a:'l[b[`s5Am+ki%P)h^V9O*l`Zp&[b]Y'G3kajf)ADa+#<hf[u/1dDdRqa`To27s5Mkh
%=0KC<qVgi)Dr6!APFI?b^ARQaB.naO^Nk+rJ%u!\o=+aGF8u'Z=9!)Rmf'57qXiqAf2$>BIIZn,c$m9%=?^<V^\c_gfa7.(jo*ZC
%qSGY8HN!iVh4L7-2uUplhOcH8;LX)i&&3MjlSi1cJ+rO4S$uc(cQD,m]>*'Bl<h7(lD8r<-i;"[ZHj'KQT'u/s68W(T>/u8DiUUZ
%a7hg0_(#AES"G06ak(@:gP$8)Rt(&^N?sD,O7BeWLOJq2Ia0n6VWp4Wpr+J\O`eIRh:-&OcJB[lDuiLYaIC*er7fh1I.d<YpTN8.
%]kt7Gk/V>VJ*/J)Yk8#-/>_BNIEYp-:td_>jg<hR5P"%!fDkF(otULek.eWZq:Y(XhNrHThZ)lcs(d%K-H;=1%KFC#^\Rg#]>+76
%c$OeS4(V>2n[#]s^&HfI5>L_?q+GnukpcG3+7Zfnhu3EEHQ/i#5Q:rdn<9?HY4=O/I.>fAJ,:.Z0)J(drmg<fs7Yi0kH4`nDsaE6
%l^HSAUfm"XY,0l_c5I^8O).&#<S=R)DO_!1M$rs9?M]?ba.L+noBS>BrhMC:j1(HTktg3Mq<Srs4l6\H_fO^qe))$mrKcgS]RTtX
%bBPHbJ,8Z@du`I)J+bBtqSeen4hU^pIIT2/hV2H<dcSC/Dh%/h4hgE0G)C4PnqWpse%^0D%GlJh'7]S*^X;MiVn`$))uJ_mhnB!N
%X2"N%TAG%fK-/rup@]S8hu*6#YMR$BB>+2qc-QF[J(^/1h>EA`n`FcI]mODSYj^nFgQuimqU*&t6@7"%YAa&;CWipOs0l]\F4Jd[
%E<8^=I/,G!5C`R\l,5XNgRRdMf!A`:,J<i=BR[jOf#`Ef!N0:QX%T.IhgKeAij1T;`dYtYId]#+qU_)&?iB,jhu)Ndhs,N[^\mZa
%]4VrTCHfd3)Zn(7_L\oJs8BDekJPKh5C`:jG;$`-c'qcnp[>ilqDU?_qtBF?lgu:prOU5KGPi1Zrr.i0lhJ^h^%p*`c-<H+H1V%.
%ELjRGI"aHDk#]<Cq%^igOh^`&IIZn^dI(KT&fpN/),+24c*r(NIugY4<Zer:rUN2$<IXUuDrtQ]\Gg5Ka2S'C]S^%HkHDYum-Ae?
%I6Gl6kpb;p]'nO*nW.TQJ+N=La6fHD^NfSBrL6l\^])c%^OH4ZU^Z"U[SiVsJfk$fpTG2#k5NQq&O1^<o!:9`#lWiHL\IEj@i,+,
%hqFKZT5D-^2trqmnq2Gej9K:9m&:fu!C*Kpn&'Y#A`gA[VdYMUJG=<M=d,uJp#[nk]mk5i!LHV@k>,i?'5_Z^WEm$]$Gd%QAq'T3
%[_Mk=&%hNWG@b(Srpf3NGhKj,"+L+?o?V:q^\R^hHJnR--`YPts48V_aC_[>j<+:Kp;sl!VqG^l:ZlBCBDUe/II?Lo@%Tsd]YMS5
%plqDn(4YB%P5$upo`"=T:\B51C&I;sIe!U?]^,12&,qLTqZY<$Zf$&@N,hu@m.6r6eRY:MCY`d0UX"0en*<>h;4lRnP+A\_ep89P
%[_)6@T?$ZtaU`PNE:!`(hY4S<mJ$M<raLBB>IU3h[C>#ikd01>qu55TN,9he-"XHg&$qA<h7+O;j2H83S%YOOmCqaI]=CIVo6rmo
%^(YF5qlYFsn+^FAm#:_S>X"FF`m;@_p,&8pq)8&ZZd1d!&,(:UcO50fN)/1A04KFjQ+q#+Z+'MFhD+mgnRE"LTBu0d55OkYT6pIj
%fk9#On7-D(dGF,_^$WjtcR1r%/G?p48bV*P4?V<[KmdnQrOKD`SUIA`ljZ1$IWkU]n#Tk<f^BZ2TD[UjfuG/rrosD2m[H`*pPJGW
%G&%W_p\/n+o7#Khqu+7bfDB#%3SeUt:NnJY[NFr*n*]W+h72cpqd$h7GK!$u]%cAr['sNUojF=OkHGHQB:IF44AYQi`fgj_8%[#m
%)\@'!)]H<tO_OtEgORuR;h&4/ikYiHSIMH)K50j5<,@("Rq:_Un%.uT:j)I;k(QM/h"g,^I3).U8,p6si:E2)I(X:c@eO6*^"Je!
%HYQ@-]+=;ck/:rFc&cD`J#cArhtK$YL<ZQ,1Fh!USuhr6b'f[9kB>-US(j>+J+s<L]moZ<DXDRaAb,cj`I+u-S#fDCohDbVlIK%c
%qX!)8ma:n#abFrH?EMej]Cka!hS-=&J$@dZEW9QZ,h[u%2DSIKNb:-rs,PFoRZ6PVGCAbn5OdVhcc_d%R)>H+G"0_ac!?fn]F!fl
%P"a%F>@Gs9B=m27]R0.o*Cok2[taEYI=,ZHh_4>Kd>_KDNbs_m)r!Q^ml@CB%GRg62PQCpkXQT:P9[Wl(q(#me,8'%kkMIn$,#,5
%GEa0K8Uk(AL\g:m]&r7K+.N"#P95.s-[V^<H\s2?'MgUjSnuJ4@9LJn1<oU2VPp$iJ"ZHU?J('[@:Kf9m_sEZ1]2qY*A?!ZZDh->
%L0ta1p6t^3\XI1p_28;bp5"J%M(=M8(7TK]^'oAUZ,YF"ip4g#$3=p:[8+SB1OQTUYV(=.L@t$8o=KeL8!]UmEqB3MSNQ!hr+W7o
%A2>JUglhA7-Xn1,gHN($m"\mpIqL:GffV))c/tGC"='Q*VEa&c1>>^8[3)O;*SYgu#Rkh`:=4-hdsBKJhqC12VsF@Kc#r,b[PDi!
%23Xa]h)_o45G)@[F5LC&g!\XLVA$@l#=%%a++Gp"'94g%V0Vs_/1UX$gGXhY@bs"A3bR4?]/9AE-L9Q;q;odQ?@R.iCDWDL%HI+k
%ij1"`62lHO$iWEke^/g>\`4=uK$.MqJQlj@FuO)C`'/Rlan"E?3WEl16`f+5/1)g$4')eOmAE:oBqrZ>5V$Qs3ne9a'j<sDXe<_2
%^<T>BC?\PgLMCkk`6X@*H?oi[I$p%pkLquoY`>4gA%fk._&)]+)X#^BgnsPod`6hn'pp42*PRO3d*Kb)YOcU8r3<#uIWU\%&&q`D
%]%5nDNJH9:YbGLOC=X6?.+B*(4pGGe4h8IAUX5MJNPk"`'O3%G9:;qZ\2D`/XTpYHiRhu7fJIehjOcT+CLaBtSX\Go\7*\-]c#QX
%bj^s7;sE'GGAeOgK*)o;]9BRng`0O]D"3B/.Jo:XHqD2LF;IR_(*kM(M&rCWUf`kg/G[.Nl^99"gMi"88"h46>7T6>:<NbuSZKCa
%>'BYImN1/L_2A*m43or0:(2!u&*@la:LQQVX3^4HcfFbP[hCpV/q%q^e)u9oFnFR44[La+H8'Ud<][AJ`OfnMg2+tToHeh3q[u)r
%pLUk7p[5,sBM\!DkgcPZ21lr5X1n8`FU.Wo]BJ/&__aI#7RqHn_tr!oNBu"q]rZZHH9."GUT^H%dGN@3k]<+9l>nbOf^%nu5Hq>#
%L7S#8AX6J+4YD/4m\rS2.p-fZWL.NEl)BQE;mCdthG^;%c-Xc&V[n.>n^LL*Ym^6S^YMu=>NbuPDr#om8G)ne^='+Lc[+rsWQ-pn
%O>0,QDjmO$dVBA/VYXQrK@\(]n`PDf)*_`[T&V,6NOd62ZSOd/dh'ju"*K7^"cP>&"DJ!tZ6N$hD/O:#]Pq/:0ng2C/cOhIWL^Vi
%@4<-W`C:;';@#fV0c5U@e?lK2+;=lRArTs^5E$E0^C34VVrn6>S9m:UKD%[-eGsr)UQt=e=X]>dNUk1%5&R2N7WZW69P7>e>=VoA
%0Du[V(6>oZI@GJ>]n^M@EB2'DD!jI?*/)?n:$m'-7B43K]A4]!,EE7ngbCq>XbW@#8<O3L*j#YZ.%/YUh1I!WiKCc,@.MC#aW5s[
%f)+:C!lCGgqnDp@YJ0J+5>topgmrk^3"bP?9;R!*D&IjCdmfHuT@_t]GWgQ7$/EolJOlC03?S.[+7%@^O1I188%c]_EbQTp%G1IH
%lrolOo+C.hB!Js++.-8^UhPs?f.ZKL(Y@IBc2R2-HY0cHU/oHcrtA)ua0U\B'E(!go1K5X)S8*UQZjs#q)h>IIoi"f&^7.O'U+(L
%7PY_%N+h?5,+9S],Q'hPgEoHLK/k_EAN"I[&A#oDDWd>JSj"3Dps)V6fX\A=F=ut,k7V7_2DZg'aIEg?Zlt$+'PEVD9Uf7R@?mT>
%`@+adicoD3!dQJ8"nNDpG.+Gf=+'(HcW]M\'u*sgO&T*u\@Zmi)3NMCpGN^,D.#KZ:pG9R7gJGgg^(FF2Y\>1m&UWM^K^#^L>S(V
%Y7(^2=UKWA3S!78g7$Iba:F.?hi;5?cm?R*8"]-lB`?1grqN\sfF^2/3b$/$JC`\:YCqB#*J'T!.-CLCMMY^L"#=J3]SNd#'6%`7
%;Yss5i(m[1Oe%=@`Xlqu^G!e9,J21d2*hMU162qV)[R4)XnBtc*\PnDZhed^YF6E/"']gfD=+mCa-sFTF^(-"SIk">ACKJYeu_G`
%h!XS"-YI>Wh#215fdsH#G+V8gGN6g7P^He#q2o4"Vs+qQ2FbhOh6uq22G^q":VA3Z$e&rk,0Ei(NunhfmW109BEPHrDWcn>g/FB<
%ol7tHmFt0%n+O2%B!)5rW?7\Na9?50WG+R4\,D<rs4G^_5<@N]*ur#nQGM>E(qf^2@E(OiXPY3Ep0YP/8b9&IQg`uIrVN5[RK0>A
%gnED07s#U?G`A3.=QXI:D1:Q$O6&b.\.egZnIY]?Dr/-VrL[)*Jba?^rdCO$5?sr#4p9d!F5\t-^Coh+cVDPS-gYCUq@]F.Gi/+R
%SWW]IqoAATYs(rr&Cn8@8DbdornS2:(E;d'b0K$`cm"=oG1^m80am($,G2m!Hi-'Io,f?""&!ZoO,o9^lIP1555j0TDTTo:0lG9H
%kO'0Eh^=6ZUEkYO8q&I$HaBtRXiI@4i1mD.a]=R:_fa\]?n9(2p5mP<g)mm8X#jN4*ZcBI2r>[?\S6T_[`@2<fJJk4Dhci<)-ftQ
%+i8e_9E0FUr'*rlS>cASl8=XcIPZQ8(XMo$q9@fXM=8L'pLE4[1%BV2`5Q$NFnX&W>G!=l`XeQ\'_<[pOe7[okhir8T>`,VNjX#2
%YZE!WC-^%%s)2iTjYa\prdRj.lH#FMn\!Zc6>EXU")[]XVg3'1WT[COo\\R+/,oQ<?\1#jmshD,s36#l?RG_Q458$+DZ8UEDE"29
%_H+Fi!HG(un]_l3IW2ui^V5NUNW&PG*$:MR:P#O_:]L"Rh>>5OY>EmOo%e5&I_p0`r8mn3\"A;G_-bB`WegZHroL21[[0M\Jkpm<
%P4\d5(B5c]=\o$h^<p()p"2L\\*_aON3P0]>P$/,Y)UQWG?*e50f"JX<LEgT?a<gK\!p*kRpL$29eLoCOIEe#e*VXS<]:TB[*0(h
%nkm1MV')+o=):sYD&OFR%//Ec3f2*W5Ak6<e&H9DW9"=j\bRF.%rA\P>FT^4Au&XXZ$,iPhj1Y&H)@-\06XmTgN2+f7_.@?(k+K/
%g2#$!:5"*_p43#u5u)S?"f(((.Jl4dgF02FH1UA&\XT7W0#8ra8l5*KF=hX+]`PIqqJAhI6.g+Fh=Y*U$g_0CCbL)/ZaKaT[ZVc'
%HiqV7[Z6j1DmPkSqJNmjL/bl=+EPoKcJlD_2(WlBdb$&sWMmJ*`&.#3[,K4Ujm.JjD^k"^<kBVOk;K.UmIIB%>!fX5CcH+kF3J&u
%[BhM\GN-+*MQ=5>X1]24\chS`\tb$B%ng-39/HpUX%U97m^M$-MJ0QTO>;f][UI;fktX<ARbaF0m5>]+7i3*?!/#ts>-]2u(#q`D
%!AQZP:]?MN!aihk3(H;,_f<F&%uKIM$P.&)K1P6M6iN?P[6Bd"gV!6Wq6oaff<A\P]ta(Qq7Yf[D7]4JTOF;:YhKo$XIH8[%1jIH
%\':cu?\p?oK9F=]f[B/c.7TBC#eN%gE#HPg4du<j]sHCN`SD$:Du=#3Okm-t69M9d4dV]E2LX]:*'SWrg"4K;\<kGNCcopBoW$A!
%]G3tRmShQV9[Rh7jpeX'*Nq!G;td>4CikoSUgYJVo?ddB53a1"3M<W47TS]bRe=)hQ"#>r&J*$UPVDfI_U[I\'iN=tPA[^N*gXDI
%TP6%mb)QO^5nfWFO\bA%rS"('?3&;XCuS1QUquMh%=W`/nU/eB>qqUU;R9m"I89+ZBm436CPtEKcCSOu$2KMC_JEN%[tLeJKpcq#
%>;4='-d1:=OERUTrVSi.79tdB3CG"BE*<q-j?Pe2U<JUp?r&*&28(h;m9SXs\'sn1)#4m(2</^MC#i6q=*JEEZ5($r@B.oHZ<H.Z
%>O=#s$8QST:^?u=V@#&$9I6.le(BOJfkGUDf]3L<9D1`n929Ia8F7uqauK\m5nDZF@/!VLJ==FNID$:-VE?3%`LC^86laI+kq9U(
%3:X'5"0Njh3l`9K?+`,^1L"7-L[MTGlt53C5TT9RQZTpt2*u/1Ru/s9f!/\$GY>JCmFLHt$TPQGof2b@C5S_K0J$lai&]"B_MKBp
%2qq.\@`"*8e$LO`TJAP3W5n"Fl[$'W>,kOangFf-AJ5X8gR`Sh(mfDa(#SCDl_Vs#2A\1;]\=CCiaCdIMkCqOH\Y5!?gt(-h40]I
%Uin@pU%uRqSQCSSK2+><:;b0Vn/DjShn+kf8B4D-($o[KL<6)g_M50!->ILccK2'?s-qj!_:0c0_8_hp0pN99U#)IZD5EOf5sLi!
%NaZWk;52_u?iX='[LNa_QcnT1>6):73FAi!%j"q#Y]AEKQtt_UOfGK@8uJd]GlO/9DAS\IW,Kj;GuQ[`L>CLU-r$pS7E#j8A':C0
%_oDnE)?j6+E;%k<"=T6c6*[nB>]-%.LhsIR;lK3X_gE\&K"gKX-[oKb@:ip?LU.et@:E,VX#Wc&?GiLG+bYi1.;Pg=NeR;Z1'R1Z
%*I;,_.'@RGou..O,b+ar9[h$n,@m7`[rBgO`\aYhW<m:>>5^7SMLEJDr4_QTXm4,c]`I"!;X+Vs[KLI2p(RY"@S-FMgR6J/=Gqp;
%Q93Y74HTN6Zg7ZN4sbFgDLg<o36Y\]?XI^!`i5AcBEmKkZ0+ofUi@#U/Xa0f$n[o<)(SQ6[&3Uc`WN&^gEu"f1hddS)g(`:]8cTV
%XjUC!@6\8Xb@*Z(TO9Neh"?bWP\]H-CM>Mic+r?H<:C/f^)'L;)]F][*T)WuE1+'XAMB15jcj2/g94Aq>3os?o$T9K^LP;GZ!k)b
%[\DeV\i#jH-J3<#"GP=Sk3HV4(%"[.*pr*%dg"7WeS\Dd0d`PoANTN^WELhNna*]#AVNh1cpJ@<drdVC^FPj+/V49=;smICS<u!q
%0^U#;#7lD@0iN9ub(FKpgm:)(.IQ'TTg)<'+p^K0$#OTs(*0Y#p3P=-1S#f!@ujW+N8"p2ctT$.YR0^2GDqfB0_>+KRsRrnR+YHH
%0b/Dl9!1M$ReEg@L!9RTG..,'jjKbL;DZSq(atW30h9B*blBQ.8,!`9'G,FMSUEGFU8&W=JdE&+eP.[BC1_?3=6.b$]9**)fW;pm
%P8EVjiq,s+k@uV`.WD)cG?<T3C$(rppk1R'pmNl]B3AupL-hA0CFI\r2=nF")gk&C!j1.S#_B-jo:)f=3m8"hMIh`]Bul=s=D;DP
%&oiG:KB1%`Lbf6]!\8b;^-3mF*B&00p<,4%+RRi]@J-dXJ6!Tl*1@2Fhd3#`.ZD$jDIR(C<*]pKDH`9C#HKgZe>EGR_S)MpC"E$k
%h39\`Q^S$12T*_Fo0?AE:[)GZagmm]a#dp>3q'[j[<I\bX<[Q@=N:rSBi87I;GPS$[":RtYXW1,"T#IT*^XtZSNYr;3\"'i1Bmm*
%@k/#mA%bT8W`40ZaDal$a#b83)re5L%Y9V"IBC:X3o#_%drV8#eV,%rS""9kmK;1fX*'N93=u]["PG,8#qZoj`&?i!Q_]gH\;+1L
%@Utr$m9'D%lc^c.Z"Ht;hf(1K%"\8GaW9SrV$o!\S`1l8aP/Ue#mZLi$3W%!35e=b^>S<]m7PtLL>0N4J<?R)?jfn0GM.\*&kbfN
%YaGT)@oo'Y;7!A*mThPXKUIX`%#Xp(U<bja$Oh3<Y\[V[<_c@3Rph700U/mrLO#4\Gp&CT'aFb,:(Yd"Ks*0h>n2q/g253POCn,+
%"M9XA'9lW7fjct,XqRtYlbeZqlSN@*gh-Z4X?EFi0Gu#`]2'B)LF7UYQNtmTVFq7;g"WH]CfK&S[^Oig]J8#I=A&)0,ucn3VlcNC
%,?u(>'f3nSS6=0Je!r"Y>(^=kW)r>4YB[`o#(ntS$JadkN0Y?@08qVj(G@@1\-.F*@k0@$&Lpsr68$\,WA`Rj]n2ZW:fi;c)XW(B
%cmg3`n0emC^cI0.Qb;YZNc;K$Y[p6[9ZdBId^moQ:,8_GG9mRs\t[A.>KsN;@X>o^W_)7&"Bq(q4RO'O?,i2>K0>!?MgVg@_k"po
%_1cj/I]):qj[63$<O:-AV748h)EbZiQlHR]N+gW8^>'t.@`LcR.;UlQ707q@n#!Ll+MEmFS&,YS`<I.Nl!s+kiI.*Ufp5.JPu?#6
%qa+31!Pnn14+g2:_$JY+Y?5m&[0]e`?^CRnONJGk=Ut0j<tE,4%1J]&c/T(TSDo;8moVfQ#OoGM1#kQ_?:q&iOs'sk/KQ"n$jZCP
%1rlWGp7\?'$=$0R1uU;/ij;dp_bnVpb(q3L@H<T<D5R'qTmj-SHIRP)nNchM.aYtuCUkj6Q;)GMK].h._mskdBGaikH41`:OQ9AH
%6C,9)>59"foVT>r;N1B4-(JFh</^lNi$W6dgeS`_hh!]u=s(f,m,S$kSBIM"^nS[K*-9qS3nYjg,1n0HcGd_QN^eX0jTi]O>V[7=
%/)3IF^uriYRb<ubC3A;9j!M>6WaL/PLp:QZ'9`c:;kW#17+5h:od6@iS-oO8k5%XSdI28MTIn)YW/rE6M[+f)8-s17,^K?h,qVN@
%)]WXbM_9%d$c-;*CE`sLM%/g]h<HVBa\$=k"4Z.G6!uicRUED<gE&&O=0t]n$B#@'O9h$nWgK4Z%mk'=bgNYYbGtoY8Ol+[ml[]!
%`*mnpF\-h]L_!r)Y*O3H&i6?'"#GO9N!O$$F6=H['$cCMQVoc3[[=!e_X071jUBAT(F)T\T"r6Vh5>uJDJIC%.#<fn,XC:7E%K8p
%$35!P>M0%q:od5tN^07.3?j/^W+T#\P=trBo4[@m]8:57:H,Yjeg'0I$*Oi6I]i>P3>hr#R2<[A1VVLcAPW"N6t%U(ZSj;rd"$?C
%:n74`)-1.#Ee6c&)0%\AFR:)&Y'*5%b[@>*,>so-Gpe!\jPP`Pc8c_JGSP5?fb#>c]g4f@ZS9H_=<^$s669[K_XM!C.2Y.9b_cgU
%^+.*Sab'mo#F55i_a.(bZ^*X7$tE$LfCYFXiZfE!bGHRnB"<3QJfUO=8/#&KjC`9i:NtM@5Y0H/%I<@q[j01L<#T"5Sd<o7$-HQ^
%"cU#kOA>C^[)@,*i>t*(8'CO`+ES9f9tTpu,$on9$R^"5*p:e;VW6=)jRHRCWnh<[ci,9CcD49-p^Ruc^E[_&!HU+0?tuiVE]&b]
%Km>S6:NU-k0ZJ'bq3hkbK&<GA#-,.%P+)t&MOPP+Fb.ElE\iXOH1*g6Lq"E+Ui6_ueQc/][5>!e:"NPt&r:K987Bd+Yd8>1P@'a5
%_s_Y,[A!['C"k-K@mncKlV\"WFgD>E>)a+PJdPnU)P[k0'aIg6:QXP-6)2[KX'!UX%B8XH!M9o)W\G/@Ce?u\IV()T*NeO1c)UC\
%:BTq!">o.`22%kO$g$dFCE'K9DDKE;g`uuHbT%=#4NoBbV"KP/RH%m4aG0BCPo\%e$JA"g/Z!'SL0:UWm'9t.iTs%Acl1=e`$5[;
%adAm@!?B`j!VN3*VB]!K>X`W*Od(LY63PEUO<i:[a7CV'm$eiZANgYJ1K6d^/d[<^'Wj,uOhHD7`t8,KI/RbJf7n<WikX&q/\kZ+
%*$]71jIRS5JU>;q7!q[dfr"Nk-'@K;FcA56R;Fi:j1mbpdhpGOHpbCnK:e5F=%*CJ[mubpPJ+On@2`E=,/TC^-t);*?h8sEk5Gi/
%Jh>E!AD3O/6^oe0a3rS\X=G3"dg(F4%'muSE2lMOkM:P?>+dYe6AXBh'pb,jb)DcE9qGpSd$TU]"\E'2+lEWf1+,R`o%RR+liT3)
%j<6d^fC5#A4Ng*B@=Vcqj*KIkZAA_cZf["54ZF8E*T<$,l16/N%`(9,rM3SJ][6*6\7"\fl;kM+-46QjQPmSgH$VKLS*.ldPE1?>
%F>=Er_.nY9+9tlJ1;fI[7+MP8r4[3Z*oO0'E3c4RVJ0U[E%6W.2T*TY]e7?6^$:=<)dPMcfbjL"8:n%D.&?!e5g$?e7$J-!#3[b\
%OHb<NjCmA17U.\%k!;<I0HB7G0rG8YJ[6E5KoT\s)'#;DA3:a1>#cQ4&Zc"/b&i8cG@RSmJ;Jn*1_QS'F5)cEE!Y(=#[%cK-r"'E
%c0(`W"7-"t3W@iA@?JrX*0h6^[_?0ZCC)I7bO]uM&n9+@G-T*?#!3@K$)HTA:$Xo>X:XB>6e4A4:MkoX?0Ag:HH10"_`3apM4YhH
%)@cqf8qg[W!=(Re7gsasU+m57R2Tmdo-6-3:PnN(LkQrki&MAQ&HJ/del+H=4:6%s6RG:f\37/]!9CtrjZQ>0cj&a-dprN7UJ1bD
%P+T<M-NqWJJs<7lm-[Q>b3<oN9"N9(Qj]@"Ws=_YgaWt'])j^HY9(D)UV()8U'B`p-MKlda,3`&VV&&pD$iA@MrJ3"9Rs6*Hn,ST
%6"-LL$S@hkD.S=3oAMSr^EAoAAmEq"=_Hds8-FGDE)b:f`.`0a;nd4+kqNd#;iD(:nUXbFQ"o<ZAWOaJ?&:cgHa&_h+iPRf4'Ae<
%kdKDuE4=@kpp#ET]I=e.aKCh7M/JbQG*iB#VK,BJm7UGXMUfq0&35.M^iHOsR.Yj$`c]V2k6XQ;(Z?=nEL:7i%X"uZ5%g'dghnta
%;e+h;(ZmFSE@$0OJgsQ9*G3##rO2eq%MC=sPMf:QWj$e_*JSNj/3nZnjhY8t!`RP])-hbp8pg]tLNd"a928"N'a-b**5a&AH;NfV
%//<q2G3aP?(_LeZc#SP^TWo14UilNSfg7Y=e4B=j(:]-YCoPd%jZ:mmQVFGrR.oegpk[aR80$b@lRLs,@[4/hQW(d1Qm-GC8mhh_
%QUpZkG9pAE.;Ofp=`CgRC/TRB]9WI)$C<.[a^_a%$;_r]UX2C04Y^TI6=e"nfkW+ZR(%6$h<7PK.^+hg;KW\c%_*mSK1/TUpM,l^
%k`B8!KKu,tqc^p2_6_&lH.f6SBu5AC)F$?C.M@:J_Q'o:,EY&XB6q0aAnp"p\T?iAbe2sIq7uKF=>nQVqE+\'J_qZ=QD^*\'6N&a
%O8qlOgd/K%]H&cs_VO45H@[_*(^SS%q*ipH?S!Y4T"F$^(a2R89[RLkrF"H9?oa.pn%`ld'ZY+QkquJnWu)nCMe5@n?uHbt/+fs0
%ZeD_]*4@SsU%K%V2(9?OMJr[QoA\HW]#'Y2ERT5j:0%OJ9ZWS1cOM3$"ACaB7\>9P$8<+0L9hOWQB5q"8q[I(9QT:'?mh6h"Q2Yk
%$//uF/9"N-P/;*U-,JeAJ8=!_b47+&]#*olnH7U@aQTKE9t3\g7l,a_Z3Pb"TR-bA/9hMp8J's9S,Fgg&V=R>5:b`7Lh)gG=:r-$
%SsW6oZu?BY\(T(9Mo*pG5SOIbY#t\S'Uo2FjbUDJF%/O.\3UY/%;Gs\?ql_W*XE?9ob:$`[+c>4k,`"LbEW,>?uU'`b5,d@5b'&\
%PD=#F#,u`a2,;%`d<*.H8LQ@N-m&I"(RA,0@&G6_VDd`MJN@Wf*9M[dLm^u?7;hN1,'_(RT'B*'G8&<WfpU'T!QU'@Rs+l^@F\'r
%Qc^b=#H?rP8iHg=J=PCFo0\]Z_LY:qiM)FjC=c)'l@@*R:r^B@<4<F'ar]QC?HkBLYh6RH[0)aUF%-,P"W]9/.q(6`h[cb.gmXC9
%H0DW796*.:pW+N?k13:@5sNsr5^rI3,j%+R]^D(/o`&$*'Vosk!/YQ5F-o?JY&tjp[%;l7%dT[/,VmAuJI_kiD/h78-h+IQ%'p%D
%Y\Cu=f`:T[$A"Dg9Q-EO!p&.!p.$lu8T[5aTI4hA87@\^B?,r9Ed!7^&_1%7%Po13^uekGLe`Jbk&,hAf*2%^7LfKeh1U2/6ah,g
%YZ_XENDMQ93J\_1WW=3ii=_[Mrcge5+?2@Q-3>"9YX3!C-,J[JK)Gg%b6f6Wammmm9F1jD!E]PP&;%0A(]fVA5g"=T+tsUBgJ^3!
%/Y;b<D=1:&k&58aa\Mnq,Q^0CCM@[h`u`*gi:U8rq[1tR6m7\YA>XEdo$;l(DTaVdZkEYG!6X_F(')XeVI7X>4QDt(`be%fmYV#&
%3us!.p4T(HQG)ViRdUApK?P@8ffirs0oec%B.1^FVICQ`CO.17pD>7,1IEc[kou`nCb_ZW<U^W&@SJlfg4ee'Xm,[Y65Vfr0E;U!
%MD9%bL>)9QOJ/]!"8b%gj7QXdF>]GY9?f4\$%*Z_"-HYM!%XRSU9B[Da5aeSghE3X5ZN]i&^6l_Imb!0Wsf27S#9LO9LK>^LpCsi
%;A\1MHUS:Q!:06Wa@=N,hAnWYF'o)h"p13OKul&s?gpDgl!6Wu(!6Xf94Hg%geL/cM-!A\SSM:i%^'+M!84%XX&=D*%.BZ0],l.Q
%f/Sm1c$]*CYfQAE\mBD=_[^A;+nG^`:LCW=23.lf?mZp,]8r5GrU@i-(FSPF+5QkVYMR$@oB!/oIX$?lpZg9f?i9K^HYs#b]Z/0(
%]/1mk_FS!6nO87f;1McW<gRGk#pD!lj/<fd?-jc"iJ?EB(j^q"h60*Y/L?mQr%Pm/U`bLA5ba7SI9r1!<-X_X6\oja6K0?4/hG4d
%guQgPNbb!9j]Sfn<F69a9J.]MVWa_hnRB)dVCob:%!JXA&E&Y_*4FoF.(mDkp6oq?&1!SJ)ucr#VI^KOid<._\PJ8AOJM.U8>r_X
%];OYjTlGkbVbr(o-kS`D*IrG!QXpbM%71\ar^Ck#&+X_bqiYq+eEea<),e&YZO:s_!Ft4&,k"pRFO1Mpq.drTr9R&M;8AndHTo4q
%.Hp]T[Fh)]cChkdi@23/5bk<9*jKR\/neNAAI#kYo7BXYGZjsM\YY93&9FHFS,h)F.i^p''/pH$`jcfp!7FNhI8_0k#HX2O4tfrq
%k"tcS*$\'"G]i51Ub!Ec\qfAKj4,<u_OPPi.Lm<r4Cc;b/Sd^mDK:G44$$T`1E(@n(`I&T1'=idNO*QdOEtoJoY.lA/=qg<@I-U`
%5718K2!L@17U;%.O7ff3@lKh]#h&6*=RLB?`kC'f0>+ja&dYoU(aBGk=Pn?r#Wfg0o7n9B^N+IgdY!F5:BgZ;oskb<:UP9jqq#7Y
%E3VTq0qhQ%N#%?d<%ok5-aWit`]uX.\\q74!_H<C]<*L(`Nm)JE6Sb[7nc[FFIZmte)G>UiTQ6'J[jF]5X[T%lQZOOJ4J3``ceGl
%g>tGuj<ZCnOgO312W`ukblN4B"?=fc))p$V7*:S+CjWV(-q2055+DXAJ22_K."6][:mQH7MdNUoq@%pi^oEV."Ye#+7ND2ql<.UV
%4@C^iYXnlmOCtHEW<uFG]1-(=)To^\`Z@Tc*7d?<7fM5F7p>TBaFtZp`1t]Zm7G<;-BMKZm\>XD3%gY:l`eg%G3]VF4p4ej]=2kG
%BH!M23=.c1Ylg?u0eSUdQuutPJb0/l,<8A4="3hPbXL*g_:a@aTgQ=H&b:E?k+-*AdXQ4]9YdSIF*OpgkW$jd48NAF)irro5`]GM
%$D9u;D27i%I"uj(r,0_4"c9^E"i+_9#>W:a+/65YA`5%^[gdrseiHE+3I*<fRPO<sI6[hnZ&tU?;j`<Z#f_(W_lTHP][TeeT'8fq
%=jK2[^2k<pZK3JW.\Or'=H>qt!u7XLJ&i!Q6"2a&&8FJ[ZY0I7F?:[GNhO=Y:YZKI3#\diQ3qYLcu<6O&I=.PiVI=FOZ/'AE+$tU
%'h=ArhJVkp>@b^n@3d!S`QBN`2):rn,\\2S8I-V1SpWPE4<l@p@>G5I3&F_ciH#d<eY2%,ohtp;)]msi017Y(Q['1lLZdiP^T]"1
%^eg%4+XX(2fsU[]GS)e6P7*rlZ,TgBZA&GC&X%qIfTKVfKZ2,c1@Z2-_.FO/k^c<hZ$J)1O?R-hd^b['!(M\RBMNMTX]-?4OXGDa
%3RA@EfWg`GJbB\\j'r+>7uSRPN4T.!.U%&4&RH-\h[eH]7$39GXChhZM)e=BSM&d4E#1kq.Eeogpjn.uVfr>I28J3#:R%l(0-u0]
%?kO+d!LP^=:2ZEWnYgHS"+<1e;1D'f#5U$#LkiJTQKRTi&$uO/paIGt4d!M4"D:"S%O8V?V]`g+mj<XBEjT=ultGR"<Ld@sAr7))
%OdBPeK2`CZT1h7?+/;)M0\MO&PLIt]236X<jm\E.5U:J[!YBS@kd9@6-!cI`K+k`$0m^cq8q_a&B=gbeRB8+6W`DDWMc<fA6\*Sm
%B#1dYn+b0^)HNGL^)S?WNQ[*U4CDA7G<(>e^^T'e7Gs#:)$!>sBR^cm6'MkRZDVXe#R]k!L4[4iM^/9A_+\`G6CB,%$j^GL4]X?L
%=b=,WYt-YY$+Ia4`arr6$mt;Y;7]gLpOU0aH#E]WP>o<@<Ihmdc*Zt+?N;f]2C=3c?QkUiI2?G%HB8N(qUMA+&(*?>Q%$@h4c2?.
%<-4'HPYgq^EWr3+>"f`3P9Si+a;lcg*M"54q>f;%%!c=,5!iur>!n8n6*>+b;1Q8HcCh(64,s8`UpK;!UsMnrN<,-SCWmlo2>1bq
%168M];=[U:4Gd)nKkrnM=Z,bkG#JBY)P.ue7`Ek9ENnMONoZ0o3+5@GWs;t*@!H4mNC4H\-(HWR&<NW<,A1"Q;:$0.EO7o)6t\lT
%'T_?U):s]:lfEo`3P?'3H)6DalA+RcL%'gac=kBTo$2Io;ss-c8j9f09^uVPJWq9m+or%W3*d7KY/X+8+QA2:!o[4daspI%I#5(G
%GC#3GjLBKm,mAqE/hcdo<%baFeV>nG8lJS_=5Afa5sU'A/6qkBE%!/7TYns7,Ijnr='q[UIs7Be\6HuuOO+!_Zd4)8LBY(ZYK,M5
%=9Sa-/PsZMBQN^NfF^N,4]S@hn=#gh`A<OUPK+XtrPj)`GFg0;W<SNaE&dHX(]=I0LeM=M\lGBa]DTE%4H`We@92(nWZ)"MM4,6s
%Y%I5o7hd'4A8Z)'amgmIbN@k(hQ!VYV)\mO[7J5b"<+R,ImnAB'^rW7Em(JO)]j]EMpYb-e)Jd3f$A>b,^&%ni23I;MSfuJ?ssiS
%8FAaI!c*lu*@:<a\..<kEB,MTeqJEt'rrU.brV)J7?rZ5fH;7D6'?Jkili*O#+Nm'o!j.FjE1rD"XG+T;*4uhg2XBWqEYIm1n[N4
%nC,6&*PS-uf0uE1,4N[`Y>Atk3s)k8nN6q-FUP)qc4;l8$<U[jC@NoRft.nj%^=E>b0\3s`#KY#QI'+bi2Ftn.>*0243=:$m20M%
%?"3K<&DdjiqPs";"Ve-?F9<n)4MiV22;0%IPb!a^X10]YE6EVRisa+mL8m,1^0+*.*T=UBT7:0r!-Ah6`%t4$0\2J9eY/Y:]^T1e
%WEA.0f9dK7a?%etfc9CD4Wq&%DCFPGgSOj<HU%!W/6/n%Ql,[;^[2s%-sn;m$!u>YF5gd^bZ/7N'Fj[uR%@S'Sp!fH=0'X5oYJ'p
%cP@6^W'bd>.E"<<f4t`G6NL-&RYIj\OU\83U'V8p7Eng$BK\<-rsW37P]W'-N``SCl.JnNTGkdf,e20H$Z<2n+gas;%_`'^H4kl:
%M>fu#&_?V]^$KV18l$(9ob.cOB+Uk6NknOIcJCn'N*\TV7lWTD6mTJa]E_pPdLqADdDSJf&igo\+"V4:PF]><k4m:o:M+:h4mJsW
%L^!]3"J5GD<mFj'c0hc([BrI61)PSZNY_096jWf8-QX'D*/-\<fH5.n!<-KNNMOA<C;j1sGTeF*NXYUV@2(uUi&hBTJIET)QgVS"
%RLU2%SmkI4A(^as7FMJnT61k%,>CT`+i\U07_LX".A.Frn[Q23=\dILY;q^=ZkJ,.mC]-<[gnms@aHn2p.MW\5\<YMG$h6\Gf9Y&
%;=HK6H">uWMAX)TO-&sV:]SH"a<EU;+<qeK[:>-9N.utf&uS.X@4HWBom/e)hQ@5:""B=ZXEoLF!5&D*0*#NNPaL0'it?H0jPUA7
%T'7pscm$ms@nkNb,kHQG:l<AN^7r')Ep^FK/:=@NBS-2MXj]oH\nBE@aM]mo3t"TVQb_QB#>(1"/BBV%=9pB8H9R.oEF#(uI2RuH
%\3c-JJIR\YoEmV@J2!(qAfs.F/*P9oX'[SQq[Hp,fa_a'_0S3Z"LK#$(R2+HI+=<f+_N5ED?hOu@:iQ:9G$Ei5S#AQ6'J22at!9#
%.kit2pjNtME;5&MTG+[u/E^]$Es;rfE2j7U$1r\`HgB80FUX$6-0trdU4c/U.i1?6164PfO4V;a?W>09<UT*.?.iu]qafWH4h5?=
%#m/9U@Qr:0#lG9ua&>t"cM<8tME4\(4.(3uK/Y'Y.(VJ`lTeutW5fa%*"G\e!f!J[L_+aL3PjrG:V=`R\r)ID36J6sJFRWD<m(Sr
%QJ7pY7-7DAJk7#)+G.2AlKSk*f-4)9?;r!'e%'-9A=:ga!lee/q"#&HN>aL:).CPMV':K1F_Gh$L\*pYo0Hugi5S%[[#YmuaG\rV
%ruSn=\2(+j\tgUG:10$g[\G;KDrHqsH(nIfVlAVu<-\If[)3c(BEoa#Wib-UH3&`'>ce>';Sh_1=<Io"!&XcF:QD&>;1Zn%T5%F&
%ecNXK*(ddc6\XT_cq;sGY9Qt5E?5gGe@[(o%U2!-IoPil$)%/hDSE\9T>,2^TNua&6)<Qdmku2#o\=8/plcY/67Dl5cLs=qp(7Mh
%^\[fUT=oXDjeiW-^\[>qDuYZQ`]nnGp7&8`U`XOGbL^+7Iej!9B:mmHSmQp&r:!38J,_b&j+k"^Ij!Y=F4+_)HElqhL&Mpq2^)_p
%J9bhR**gO?=b18foN5boirY-Om#1_M,sS^l+2arZDWOQ>%)71SZ$;>gg=hf.m4iuBk4$Zt`rI9HnBaafnJufmSB(D";rc)IbXO>o
%(cK:"HOq0@iLT-f^11P$;)T23a,&i/_GP-i%1"a`h\4Ztd,1gg`H@,kd7k_q@T$;nl?pPUeaZd7'&Qm&0BtiF>`09^??hKGcnG^N
%EJ8t8b<^2SMi-f&4NGtQ[n_"'phdoCMWVGE8pd6l"s-a>6I'Vq7!q]6b;$k!dKjKK@miY(aToj@l>r@;Lhm[n!I6e;3!L?F[;c`t
%2pm:2H=ME]T91'k39S+pN73l2,H-TA[C4\"bf1(u2l_?>)[!QPi4fH#0cW9;:7QTh"4XnqNH]%8?ED0DE1kaLdhoecEEj6FfA;4M
%%7Xj/dp>4cfN2>'pNb+'pN`Ko`e98m[O[ti<,"@`0acurZQ#+Q\-K@nL!1A\Z#[(oA_`(<HpM?!X-]WSR>e`_5D$u/S/?uqK#`+^
%Z/12S(hKO23%9TGloX636"5fABj<*Gd>#Wt@PFB[.,Y6JYdRrC?hfQ"Y*<VH(LpL`Gn'IVgcIWX$[FJBA8jAW]9m`X:_:HKbXI[O
%Go&*sbq7W,0'54Z,fJar?EgmHG;2s5A0UZ7dnOWVb(\b8Z'XLf"h)Un%I.E8IY;6a]%DB?VS(7!`RBAj6!ULZ%7XGI0'4XD^tFFO
%=OL=g^G#dI*qmQS[](J>_Hb<)K+NeO(XpIYa/'NGRhsr@l%.?W/I'f1O\:_/7:AOK=3fg)'(B9[%dthPMl4Uo/ptVL@WDWX0`i&F
%W<ZW^m\;e[m:t*]i]:-qjoITqJF3Kr7nE')WHc:LDJ]t#EtI"QG+N.oV_F8e1rWjZKf9bu`GLL[2cts,1S@uDMOQsKK;9=u&"'0/
%;%/0am+63M-uL)-$\i-?4l]/N:lOk4fL-7m6KCT?!6WS_9E9JYMk1c/"YBU.4#(H\dTGSK]/#U:9oKoN`m9@-R!$Dq%VB1cVgKP!
%jn"q%$SQMmWhnW"#)-;`\H7m2U`%t.Q'E18K.;UcW[Mg2m&_m8@XRY(]0>476!+t_`6>=`o-Zla>/`jVi?KtX3.m5.JaZe9?mCEN
%eP*eaaGB(]bn=:"fpAP.,(=FR*H=l11h.CFH+st(U\Fok,gd0UAqPrXZr$]&[[^KVK2a'dLm]S(JK8)^)J/mH-n0$DE"*"\>`"F>
%c7IaIbE&LabWj=/OEn&EZa-";CoWplqA^!dR=#hdq5)EV4cIg4]e/4dOT<RT31bt^S%IS'1Q6Z@=GUC_<j;rQUr+=C7]\C*L[fd?
%$(GB1ps*p11ZL1;s.G5Y_I:_n'Y]AoE.'mu%AR;B$WaJ@S*rf"Y94d%L_QlYo\^WWef@dX:^r&uGSakol5?&#!A6dXY^9bq#1"uF
%$r\NK1Q:4d1G15r9f*Bs0oV>;9_Y1sDQ';PmE.*kTs&7];tpja+8j"&.eQCd$lb3(XNiC+3$IES:^_oI#2DK\Amo48EPkO&%!^l-
%H1;5Chj<=h.nlbX<Yqej:_-;G9(`<&?mtIOV_CXm;=5?e_K6f;\'?B1%T#pg1SHLAF/A"f-qqY,eeXl3^8G,:FM`<\.50>,Z\".P
%-&aaY?($@=dF`Ud@AL/&V(<\H;Y4!B1r@>jAT>%t&FUeY=R<i8g#mOh$\pFA+1Wp?J0T.HK0abB81='IK<U>A;N?Pu(e^R6b3]77
%O_]Bb*fTB@edq=Z\.2_-\:Za%;m4]ei3_hK?k2<?k6Gqp7eLt6%E@+UYZHnj"2B\HA<@'t\dK=s?kE?Ih,oWPRu/!u@IOt6e!2R'
%=hLji\mX"ge\r8n*D(KYG`bupVZp-T%k@B_$D)j5?AX9GFO]:V7TCP#\"F%fmh_;J&-b_q<-5q?J&/l,TD_FqMuqI2(6(#BMadGa
%ijmY71I#gaK,tju:,q]O#PK<b+U=U_ACnd0%(ZHV1dMS`d@o.X4g:7\$Ph1,^nIu94K*fi_VE;D;?LFCMTa_aJU`X%MS7T_JN">V
%VfF'g7R\kZ0#7u*408'C%F!1@CKG+U:eH>2abbRcge]p^?=8*?jV]YSbuW&E?n2?X#]h!%$4O&Qd)q%W(pB0Y9@OepAEO^TJ0sR$
%d)Rq?@*t79K+iKNcG#qS7eij>.jHaBe=[*R6=?I4[T7tj(trZ00liri`e";;;m6:TM1NWD;'^f[<%1m$i9Yf83>F6K^.E5c*!!^j
%EkN"bB@"-m%kuGf@V9]eC/`dKbQ83j%CNa_!fU247(:%sJ4_#uF5[*/@8Hq+a"g+f'Yo)HA1orOi;nkRYR(A=?ko=SKDub&-Pb=&
%s0m63/a.\Bf=;.`0+\-%:n<L58C`]ILi`TJ6su1+6ul*2e)!/Bs2$sN"q'?sBKRt<#H)K--io=R`4n/&b9:EYqaC?$h_2p_9Ba=/
%%803^MtctVR=!T&Le'W'fpVS9)kDpVqjXT%P:bWu!%+SY1+1r9<'7_(G^j]Qo*)u-MlkL9;9+CbQXU$?K=i!5AS$Jf2mGVgcd-ic
%J^Rq=*%cB,ImNs)$#eunqjU3>E!Pd6G[$_!9c4j94b1)Sd/K17?6CK?rh?5E,XM<#-JKS@`Wln_@PPYZm4Wo*SmS3D_]P9-]!20k
%m'i:5op61[$raD0nlNrdOq4:k4M6V,=FZ_BgY+blJ([+eU_hThUoKXmF4O^2.j\#DoiFM2.C_2"02ltGZo[G)M.RVNEme=_*l&o_
%L%H0_&/I>uIrS+ReHP1j:Wd)6L%RCd?ks1%?c'1k<?&$SP]4iRBRe]7YVi?WV1]DuT`'RteJhTD?h3=T(a/,tihA"$>.hV/0/@$^
%VYt)':@lVRIi1FJ1<sOpC_!P[nG\$=U,WJgSi'Uu#oO3'?gLObSat(%^U$AFX`OL4Yhfl4?^uq['PG9i`.Q^Y_=u-WQg.,3ne[@]
%[,$H,G><YP_>$*U,8l+&(MS`e4SoB@0;=T_4O2.2LI5tqh(Jo,VSBA6NpL/d+T$jXP`3o\)nD._eM#(t><dpm)4rFnBqbk'*QWLP
%qW2c3j;Ue-m)%^94maIq'`GZUrD(pU3m00#@194tb:gTIC-IjZ6<;%Lb6SnZ^f[[:r0$bqCKH8JZoMW#0`3[ccZ'[;CTNPjYrkt_
%;Ql374",RRjr(RMMI4(Kr8p?9b:nAuMrC#[@58&)0*TW0HnbIJ"k<BXpf3>dk/Hi5/.Pc$/e#M)CYCtgnB4-C/EFY:M^K*ZlC$Ut
%qbnUi&JW",pma?>n]U[D]"p2C0;Ve1S`?&*jG8!ba"IS>?<fI=+Ur2E>naGXYmQLu$FhD<RH'Xt9`fj8j-TYT1rZ\QIfPB-eqsjW
%YOJ'*]cd.4@4Vh0P2?u'6l2G%8=A'8T&5'HMWQj[#&.=FIN]t/10AuS^rd]L^D(Y1T/4_FFLh1)S`Wum1!DdoIZ[X.%_L*c6;".!
%BRV*I.8/%c;SYp!1XWD%p*t[XQR?5GVA&np^l"Hdd4[G`^f(B`Y:;o$l)_&\IC"P6dB@^lgWLf;`C<7#e:Zs$W:&[#]Ech;Z/4L;
%(<3+1o<RucniMX$RHKo7-(7609>l'P*^S@H%H@Bqc*&8L=nrP:8[tl9m!tc)?0L_bbqBMkbu<g$`Ja:XK(Jo7;F!HOG^^eOjst\*
%+n=[;H%%2NI,Mm5S(@QP:@lYMO_QXbIY%Bgdu3,oRU81UXKeGoj_CoFYqtCU"Ce7t_XgEB(9fAVo8A@'ljK7h]F6M\>\JQeds(Xt
%Vtn:C'>Q>9IT,iT7'AG^//&Au,\T&%Q@e$SbqG'#;U1eHIOV+q(Grmiphe+9qnVP_\HGa8S)Ec@c`bD9Ea(Z@d(@4o43t*b_;)4V
%^QcTS$_C^qSH/'8q1X@BeqN:R.Jt@W!g2\_c8Zn.^Cp0bjnZmgR,JOH?d9:HH.)&rg>R^'#N-)k5#e<\b:iI_3@tSF.&aD;/($#7
%RjU6G"Nf"SHdM]YcokUDZM[&!3?@S81!K-Citnq0=IEfZ?g^Ob0JZ"@]5rJt1&*eV](5adI3fTKle%c%f84jZZZ&"IIV&L<gQp"_
%FbH/!gqN=WbjE#QcL!]@FUli+&D=?]ktLL!]p<sb,eE6up%>M$<o4HKVm"o=E>-X^4#[(^B(R*MFru[WA+NBN_Z>KJcs6?nLK?hJ
%T.eKJoNfi>N_RFd_WKU$GG?;Pm>_2W/miQOOK.eDj\&q3=r*;T^SeZ!HkG_"K"1=F6ARoL1qraF&JH_0Lkq8WpIsT$2p[FDM(`>r
%aG'kR04X!%>q(/F[jH^C(\8/j`PLKeA)i>#JM1]Ip/r/\06T0=.PL"4pFL!oRD"qBnJj?MNAfE31UqeJVUVuXh*PS&GHC.J1%um&
%RX0,9?>tqtgoe<'KKQ!!f4fSo0%M)!,!B@PU%BjL0/pUV!NnD/;*Qa"%ITIo\;uT.E6jKV]GY[W3FVCE5%F*TP(F,[W&%^4Mqt%t
%S?8,(E>W=`epEqJ`7;K./p42NfM6fu;qm.T61;YbO)O3C:9;)Qp-:XEoE'rJU/=-gb397n?DeLL0_CP)!t9WVf_>gF2$eM\5iff.
%4.H^=piuo.B.91ro7Cou>5Z7_3u(CpjLfG;\T*B@:WN2c2=H\g1GAND84IqKiYdhBe+-6]gBgnepiF_Fi7q:bG&)T3K9[6NJYj.n
%,7:7fXLrXSS8S).QROnl=O%L:#k2;+m(OZV`t=!SSlp?DcquY*.kck/+rWre<=[@$?T<>iE?SI%S@lM49h5"C?Wf6W(J\;j(O4lr
%jHXF&5%=hLq%gja:>TPf"=Gi*9S!?p0*Np$5'-;C7,uNR-SK0^\8RmYnpXuB4=pBkccO;P80-4"Kp.j$VZ!'L=7NoN(BlIeE[9p7
%F7M*K!g=ukH-)Mkdu0E63`X%NOr'0S^HX,lQZ!b,X9c#W2nVuXC/[f/3?CW]!lDNXLV!tMH3kTQo1)XJ7dr#IH!0is]=Tcf144fG
%)2u4e0#2<37UAPSQq]e$nh.8s)0n4b0unm.pXo3!bfG-s.X^?_Kj`sf7n2fG6=*"FX"qlXmN<s!mYd2$huPhOne1YP'g2hJ7E3ou
%,320gdV$-&ntJAQIVCM,U;i'YE[q'Zg,S1\`sYk31P/R$_4JnDiqUa=^-g;9N0h?p(7dE(YFr8V>[)mt&@?(\]FpAW=SP:U8$$B$
%VjVrlc8-ECU4FkLn`m)*G&%a30>gmP?28^Wk^iI@FM,Na>HmY'E[8s])6^Ad3>6<Q_$q[ge5`l!iSfKlW+;+%]^CK]_8=rT>$OUC
%!O*fdPTg^q#u#u'\&['7B*R5\qt:-nDsq#:l[o?a*)b(Sl$'BI#P;l;n*Vk`\$Xe3aUUB+/,:e'T#adgjL\fMWi[l@>r"b>/+`0M
%HYS@]G@s#c=Eesb11!Lq#t>L?0=1Q.Td6]*?^k.TZ0bdEGI_iRno`6fb6%>n(?'.RPh1V-QWSdk(Yp]eNs)7(fQKP*g@@&.>r\QL
%Y6ET34G&"*`O1Wm5c\7jFod-Pc3;M#bO(G?=@BbDL94OC>uZS'QPq-]%E50%@2CU;T\_=)]+F\E07I3BG?X<j-5Z.m3&MLqh8X-V
%>i`IjgPqfYfStqBZS(P,M,AKj%pJGk%\6Z;,rNVVT4rGafYPg<S5m&o^;*%7MfKpO8RFH"+[d_13-AY2-UGCt)*fQ01[5&/%WJTb
%l6<^jSR30[$O@K)p<PbODt(D\ejZJErs7XCfQ9tgMfcsm9R"'t'O85uG@h13?,2^sYBQkl"VMU@qI%_T^)@K0&Es7GNA07X7lPtP
%6)-M)Fri3Gp`:5T/@nL\huSI!2^7u^U,s@5J)SaCnKRp6kKodFVAL#Ydf[Z-#$kaaL_8AdM!]oa!Q/3m=Vh9J8hojg5rXq[1sa.6
%b92,^!&uBK\P#!#N'X.qAY0RLT[6E<lbo2XpGghIeU4M5K0tt?$OF=M3-<9Y^mL%$kV>0A4kQ;m=1R<oY8k,1d($8L5AC2/VR4gT
%W>EJ?Lkkqc=`gQs*Ng[!1Nn\#$=*d]MoRhlOC6m?:8rR?E2F;f/cONc@uE"<cUBp-EA$Ug/DI65#a.;oHL5THi[QG@`oTLWX.kE9
%:Bt@d/gbdp4SMB#S_8'u_7Lkb8jTs[g^^Xpo3SZQ>SqDt0FY%4pIO3j@`2QG6*[#0cqo'?"a.!5JnDSsgprZ2%d:d#b8-Hj_4Ad4
%L,nMR\a0-H4-sqtnf9]6Y"G,&>hlm6V,`Z2SqqnTpI^'"(BVCN(3_BJAT?_$MD&CK_,(R*>Qk);1M?cHEBk+7mm3MfRjrP8kGHlI
%,+*FSYQ,Db@Et^6;gn>Zk,QFhF/e:U].V=<Zjk!<gL^)jTc1k[&Ff*?bdm@>EUQYn9CrBmae6qUar'rsS4c?e0.rW50u1>I#'6rQ
%SRl,qF%O`0mLSGbA`%Q4gporbn>0I$F30T^WWqY3Kn(d`E9A^Id.Su60!Q/t6NqZd"[u\,>P1ZX]/&OnVl(?f+r`c.E<UD9NbDaV
%Ik^$eQ,/Pk0]t4aLRS]E>ekO*M+Q<_(IOV^FVLncnl@_i/oiTb-l:lJ8=@beW=IK*g>B`:M_l"j:D`.uo"MqQ%H^n$(s<?M>RFlB
%>aTTSKN&\l(>aVl82(aJ3LB,8m;lmb9uLVpZC#]1%U@iJd&mE)"Wl(8'6C=^BNnW`\\.AXX$M([($A`30]td&b;jW].a;ajS2lo;
%G^(%e>Y#1.$g(\8`jamM\NFqR51kJl#bX6`Y+<?:>tj$hE9AjiKfo*k3dWJSce(_6i[1Ct9=_@k,+$KGffC[rpClo(LZ$CJ];397
%Rt;h9fQ1P=?H@1dh%su^X/t7`"`H"LC>-efJ-o16A^+pU,Fo$_->7Ig'.\rJ*gI`coMlpY<5=LGS^Z`l[kKKh]XagP_t4>n>c%b6
%l"[`qfrN7j]XahNgpft<2]"hS#`[cejj`k>p3HOs9&maEF7GM0JjGn7!H"P=EA"&?`WgK:"hoJg+B/n+d=,]Qjm.X%kfgT]qF5j2
%Q9a,OTC!#-0"P6VWaO*u$UWJEYlZ^m03#S<k7Yt"`FQ/$St-14;<ME`EV$@aFY:Ta<Y$>TMl6CeFY4t6OC+r-Gt&EE#'DO1InYq/
%FY4qkYoV'!Zq-UKFllr_XCR%lk$6p*a9$<ic<\<+SBI14qNeST8A$V(^Km4J+kGjtk$/1Z;I.MW4@HQXBBEHVfi,_W/*aP$>e2,d
%aARXll<L%`R0O5e>X2:WOqf^X'LbVqmT`58q<ESoQfXoo:,saUB)nS&bahCf-QU&AU_CSa\-*W-gdC@37bjNPGL.(YnT12tcX?^X
%/;rR0-e_g*jJTtc$R;9M>*.kj>`<XrKempS$tE/smK/J'`n[9as!qN\$+oD@2-'_J?s:S7E^sqEH"P6R2n5L7F;A$`<Nb@`Y>i'2
%P!i<'__&*HMC;eY(TFK`kCk<#Y]<PS3)M<FC8``p#$Oh'F-kN89eM+7Ws;9M@Y!38*4[I@5dA[i+r:g__VHHUOGiRkgHpc@(Z/(n
%Fs4pQeZd;Xi5Z#B*b^ISGJF^;cT%&t0b$LcYr4o']n5,,gcuH28^)T,`s#oX9NBNL"T])IgGq'-ft#N,R2-U97Y[PoXLR&CD_$_[
%(CYq=)p^K`9+bQ?;;qZI%`3iu"p+hb;ccFn8<Jf=6<p#cGkOR^>Dfk^^%1+tCd=*$L5XP4b.qK)+:2qOk`lObEYckfL!(%^/;jfN
%c9GG@c:#0uGLV6L(PObNTTp8mh>9[9Q4jWLKV7]<%U:iZA7b:m`MRKJ0+>@hg18Mi!A:nqi7Bsg/V"]U@V>OA5\)XZ$<",k:`B[n
%"o0a/8T#]$jpXVePpnVh^-s(/U:or#qflP_7;cEeqBXm"0S8j2D+O&6VS!'b-i;bDXO>$6SU1ma>JS=c(h!rh><F+OFe.q9YCNt#
%A"X*)->c4s34Xk2M7o&i!iF?1=B)b'm>lF%\qL]]9b?,M0m3!@1?4EYkKYongrcA@`H&R?@\)SgGT$70j;,hS/G`#U+0\mHX$L``
%BJ3?QL#J>f*,.$W>OLGN!/s!Hptj$#db@*EMWJ6T"[rY'CkCFX=%Z52]<$$@Xaq)jC0R'1H'H9aM\<8jN7XA_#iI/%eeZa_Qpo;8
%Mmi[kk_7M%66mM%dh\aH#hB6W/Vq2h:KL0Ci2?rO>C6[rM_j)H/$KX&6<h)8fW)c#>B\%V3)9os.B'o*Cpka<@KDu+8T7@@H#_N3
%W!X4.6=n>\#DD>gD#PW/ILt0V;nD]RN@j^hd-j81Mshct#o6`m7s3(1`&:[3CG-1Pl2sQk[Z0S8)1sO3.UGL)"RM!=G4=*mi"?35
%VQVj#*Pj.F_og)KWKYpXiWPJ56=)`VB:f\%g<*UKK=Vi@ClE#N[7u$8Mmt\@MX%j^(_ei5Bkmrt?r)]gG&T8[UpX;\q8d3o>*)I?
%n(oL/&Y'8]>4)p7H`Ha,="C5q@]Sl+cuHAFlig6fZ<A2Xi9aWO[>olF<4*u0Gg9:3]f57C<3(.QdF?lO_Bgfk[>8qN'2'ps/U)ke
%P$2=Bato(3+r_mXC9t,"_,/>7k>nbh[/b^CIF6N\pLr:N=R<DnKA+apG$=3a=r029j7])o\7r2pZ9n-!9a_)XaE3rA('.%b[Ti6e
%NO?PW57_d<7.3S<4bBk%D=X`t!9jU'pePgT6`4B[?cZr4<ko7RDVCb`$>Nb?cpk';Am.1f0X-.r(+%roAqQGYGlcoYQ50gB$6\Wp
%$'Q5oYF!*"Y$W9b8'Bn'$;+L_.00M[7TpG2m.EtAgUs7:K$rSQJjp0?=n&A7QL&"S*D%5%+b].jX22>[_>`J6Z%IoL67a$@76>o&
%"_XP5D^Q7^KnpM,F#XcJ6]3uJ`m)rc#)PXj$Oc>=.cLdNg>TbXd*$UY2I8@V&\sm9gRrM@;Sp7F5o\]7%(%/d!o!'AWBi)iSJgQV
%57>sh""PuD8]FDbc`Z_Lmb&-UokaB,<A;aBB;2mIcN6%0`C?m.Dj-_)['SS^^),ARm^j>Al"kQ7:/K/DW#%<PU<I"^jo2""3'3Y#
%4U>[$eI-9F76-:i?.&@C$utdK32Ntq;ADgi_DaQHaX?:aLMs[:FL/lo&APHo%el3YCj#r?e%''8070Rb%?dMpRN9<?!Xb[TiQ.'1
%cg:-(C!b)LU-bJ[R0BX.<da`dRADU(`A,P*,;4pW'^9"_>Sq)9Z'?:2OQ>ltHgo4ac6]qM]dt"g&7u8mg$.UFMd2Qddl4cs\7LG:
%AHoIlZ661CFCJD.$hn_VnB(rdn=l2e4gA$C=Ck?V_^`V5X"6T!,Tb9Z?Rj5):>+YIB1ghh.8=H>*D5o+I;I.&$_8hFS>*&!Sa;/[
%8<Cd`l;V^=10O+GOCp8C8G:8[8X9A@5+`G/JluX=e%m8%Wf]1L)VOP7OUI(`#NXcXP/VGH0<1(c6e2D"ik&%.mYERkFAU&qCF+aE
%E6'ZJR7-`[MFD]4rgQ>cg2eCSc5a,Xf^LTh,u@pS-g-R=_9`nPbEYF1i;0n&r`ZPeVt1K]JLk&nlljIqKo$LB.Xj.EI0:Rb;jBV`
%g?8ok/@[Nfm9/MTaKCXXgpppA&/\caA!,.!*c+Rl9>@Lm-kt'lT!F/aDF$H_+BA=K&CX[dcrZ,b(1)n#EbF7]MVqsd`uBf,A9@pN
%-j4BgpiC."m#9$\=cgXdP@Kot)>i3XH2*TX9Aag1IQ,PSma&l-+-`q-@tt4(-eq8R*Scq?'7q3eWFTF<B[tL;T&'h69WVlpjN(P1
%@`WZo?*\4iVZRdla`3ar:hoa%D.j(EkILn@#(JBi%6Q@rVj&>L[=P5(!M#P&!Cb+L-?sd)Vj>X#Y0_8nlomid4;LM'])`EpXs[fJ
%,;0'-UD0L`M$"fW'i82h2]i8`;RiX=R7&AP/7&XNT*I:k=4(gTE";S45/<^:EE;!G26T,rKPU]`#BMOD84kp#D;9"g]>?q+N]&M@
%bDVXlC"Gu\^rP/`U%u^igc$'V2/^0(D2VXW`qiPmWf;]'!XaHNM,#P+;ktODFdG!Kp1PcM>&FJV*sGs*bT:pGp9H=#TXtlD@Cp;q
%`,\?pHESGe>/$>HD?@LUG/@V7<.gVL&e$dLa.(?n9-[M"Oi"okAEa3AZi`K#*,pg1TXZ3k,^\%[Bc"%K98`NHSW;;m!FjjVWH.a!
%.o-u#0AJ(l(2Z(Z6u93a<'aeCb$oVm#e,kfoYMX_KOM0ei7;>#$+^Dp\!d+N?ipU"ipdr?iL],o^0`nWY4aO7#gX\%bkW0s)C9+R
%/W<-d_\r7d8/,(@"dnk4,S0QQ=qhC4^@]n%nU?I''mCK6oF=-TcfGfZ6(ZFT_o$0AgDZ8,.\+&Qp#L;P^1A-.%r#_lecHJ@T]XLu
%(+JKR#D+XgJjq0aXrPm;ZLIV#Cl03S#a?IWQoEnO<K^?55J8<X@c@5U6H^.pbO"amgqT(uU?GP4"4>tp(H6<2:2M?Z/Y0<>\PQT1
%r.6A0E=5V)(cNF"bT+J/kO+?Qdib\SNnGW!_7eEVQgY9+nNcL#J89+23tc@/Sc2G6g``1ji=R5*g)3J1KMXdS`Xjg3`!]BVrhr9?
%4`\FL<3;gi%NNd9a6r'G5]DN[XGPrZP+nq$acXE@1Z0/I::M@ZVY,hTWG7tlg15-"MW/=4oE=L(YG,6WdGPF#8$DkUE3I&;-W\\@
%KeoUS$iZC40+!,rjB3V\R*#((A2'$lNF;ml]rhJ]`8'+OK2?sE#h<)aX;c>,iJmA<*?$?KLq-//^df(pFTZ#'YoJiJbR_hBD@i48
%AC34q0+"jnA0-<r7':4m%5WK0`WJhr;Q-bA^fSM<kajqJ-/tTg.u=0jq^Y$m8tnZ\6Hi+=WS$`@pOG\eoJ=+3Rjfe%j[OMC.,6,g
%^tqKtbqh'qalR)K_;[M^1c?f='2<>20X2!/2s%k9LBje4DTUN[D1l@*E\5*fk%#YBnuf.A9`4u/bd!6u#N.+]pVB:II.$rp,B<)8
%)/qA\<kM*C!H)PcD,J>0EX[L1_iQ!F`U*\/4p=NY-X09V5-X)+;aA3j,B*rseL;[5"9r6t-jRE=+G%Y%.E`XR7\CoCrWFdB9+7E2
%PG/+EK.&a\8TifM?O;lN1a\&7*F9uiC0@+e.]^9PEUf;M&L%u0b$GM-,O"DHAJuWFV4%39n$14-*pHFU_'t]Di4hT4&2+_!=h?r\
%T.QIaaqfk+q>^i&j$3`6HOUVAa$ooPd522:l%g_Scm>h8F4IhK-[,^JS:6A/\%A)Ifs2)UbZ5R=lEk$*%4:<X>$ptL(o;FRQr."*
%UD.aoF'lHDqj4RLZ4o%mq@.@,:]ZklBC3MAFI"1%"#aH.4Lm;\cH)PO\S7HU,"2nB49c-7O$EsD<>`[6@)qsHXZL(sLHoppeWXO"
%V/P&8@KF;uip,!%>B"iFQ2>M9hr4u2-=_V_p=Pr@gV-JOZ;uA%R-M:pd?rr57+4$"=EOaj)a82/C.Tf],cpcL9D0HO!+&m.iU/D,
%[%duEWC'JlmYEC4PoXVm4l^l;0$WRQgbpJN_u!8m$hnSip16U_c"a9!+=I)aCT-6Vqu7(ArMlF)+DHVgcsuC74]GLE[J&6i!Qot*
%h!R2+LN#8loY\LG[G-Y]J?ZKmod)P7FcU0f`U-AY_%esQOj0!&L#nV)h#^9hS6sin[C:j:/C(bd*I%m26S=[=Z3*B2KNLKDcNA8*
%qrnM"`(NGq^+"lUVM'aKKRV.7R_jC'h'o@!fq2@`#QM&@IrB\28p>tlI*XQ#fUQ!&H@uW:<X^Z:h[J-`Se%mEaW:[r"%=i.4iZNj
%2R,F"\-poSg@Y2p0GSF7i^QMk6k"aIE7QR1p'Wj&P1:\S9m/Zobj*nC7<"2"2b3^^31c3?3<Us\`f3>XH\[Q!J?+&$D]0B9+Z,40
%itI&1K"O.tlU3Hkk\obZ&r9R&Fl;BeHii9(J`%OU>7t77>N4#F#_MWA&3&dj'1Nfs#+3HM<S3q5(jTsI]kar:*LA&iq[hRl&IF[h
%]=dCr3g7no5m.?Y-8;'9Yp;bSRGMt@]mc&_?:I5b'go!)YM>(YM%BNgo8Wq/6_g4&`]-VEL[gZRD9g3sZ9hk!Z_*i\)SMeqJ^r_-
%g'+;"2U0t0V=-d;`S)V3kXrLqFta2Hh&g"[mL`baoHk_VQj:S)6;e>3*gLd9FOU!-ddGoSW:%9saEKq2*a0,FCGaOtg)hf*n."HU
%F13>=`d%q!iOX42b>FZ3>b%\FnBGbV>n9tlE8lD-pk[R1NY7Gs5\^oLQ1FF/GZ,@qZ>!TKrkc4>0!AQgV3L<`DC?>JTFXa7Xs0R_
%1"DH.?:>XL_"Ss,6[%5H3>ZQ(%5sa<[LbVS?ElZ;bN)cMPVP(q`U)rW#W@rJrJ+K4&`hRO8IGV%j-X:d;e7/L#]`J)bAdOWM\s\f
%f&65g9fWtZP3oP5pLEcA2-%Tu9L'5((*?,T*>pde*Y3o,^$#5u2#l81\dJ"'BEVtd:.k&L6DZEA'[dVX!.kbb,2%A+[!6AKE9\rq
%"25t>3/G$p4uZ>p&cN)""Gp%rd)0*?jl!Au*(lBIFh8o&r`M'EnD\`J-]WBpT"F0C:^=,.#l#S2IY]KUfU0Y<LHXli,eAiu"uAk5
%5?37AYmtN^E5D,3@V7kh9LO=ZJ>2l,!h^1h^?j1-<_n`qGES[_Q%n<(Y/0'[jBZk%)'D;*9A_sN'>6r^mS%6UEQ_H@Ld.tIJ;6M%
%JBRnpcE3Fk_cCgND3-M'@1[4Z5slS7QZ5Dg+l,RE!ptX`,[b\hj"=5;&?u"nJf:fm@Rf?0/W$t"'p?:DJohtjYSr[T,83e.CL_mI
%0Hb"P<:Lr%V'68iogR155-iH95r-BVg/K/\M7:?%MskW2];U;WKNKK8Hj[0]FQN3E5sP\gZ/Ti6L:%=mE<^i_ET2JOLWq[&G`#eW
%d!X=YQkj"m:KX&$$QSA3%o/ZF?l0rQd3rqtjaQE>D@2S)!sG,.IMcT/8$SUE)Q%2_eWc$P]W%^CR<*L3$=FtAd)cu4,fABj,pIB9
%RBUGEj0ES+Q:X6bZ\k"WJl)Vh!3%0n&.cLEc%FR!AHu!4!DYmK1=OX4"t7EK2tBpe4X&37^a2i1/P,r`1?#[/*nC#X@a)R^GU)*l
%=%PF/2FI'dRMaM2>PTZILu9f:h\kr6A?CNXLU@X9lPC]b0YAQ;R21inImV#!7?(f[7n^_.+D%@1`rSa7M<O@dLUL$b2L3Bu@cAfi
%MLrq^c5#^lPC0?=2tt*6,.P<V,(k$EgqoMb;\3"2)9WJ$3W$p!]sa1sg.M]<jA<CX19$feiHc"'&fIEO<L:[V%JUQ$,FN^9K<]<f
%6/oF-a880.+$5.<etl-<)41jV'etqVE^DS;2_.aGBP0IW?9hF^DD93#bl4JQ/obCXXXNtf+NY4Lj?V\dGL._m0j+7K*>j1kCKqU\
%D9'kT\2,ur<:S+P.Af;=2D>YCLK`gtL:FPp`lHY@I.5B[:N8\bE/[Id<OFDD.60Jh*0XW`PMnC'?ifHE\2dF?Hm&J[c!8C%q].#<
%G+CNNF%8XBlV7@%"Xo\sX%G\07I_ceDM.]+F,d=)):Zse2fWApjO5Y)=WH=a-u=W/WGs%:V&7Z*%bdA[!Uq/$^/+=lBJqVZX@F8Z
%'gH#&<VVf5N2qWoN[1@!fk7Z!\;*F<3I/0W3Y?mXhZj^\ahdY-NLYE<,$om=B,j:Q#42,1"T/:`-OmkMrH&%jiGS6.(4n0q[Gaa*
%VA%ga;tsi*Iq^KFd].MP&,341Xm(^5g8I!eX^^@9pT\oI-&(,b?@+u[Je:@$94\CDP6j\P=1PKTKFYe@qc^H07rQ+a3<L!6`n9do
%^?KLqk1lV/GVq;b`.YHn9^3nMW@6G#`;2fWNn@DRJ:q4NOjHjp$A9I^^]<FA>F%aLVb:(,L62jRJ,jf:-mU'<`e/1@M#6?iDG:T-
%nBTemb</sgm;ds9="S*Ei7Y2V&B#jAVO6ZmHrWn$l01;MUKK:99fSSVhju8PTY0tkgSU?r+PF^V2,u'l9cYMeZ0s%%0IZ3@.Nr[G
%4!RrH8P`HK/FrjBSEgtX/Ms)m>`_"gHa$^_<p!mj3G6[3=Squ-?OX1JF8qH[.hs0eQQ'I(Lma7BT]X?M&"$&B2COS[U?&h!F6WcO
%/@?g)[msnOS/e#^;=>]$laERph-ddd)b#sF3h.-/dC:M,'eXbCGN\*J<@Fo"E!h?T6mX*(9Y9KDSNA7a'#ctp&ck\<QHKVf^3Imb
%c6\(YB*UW&VF#?s:5L35GA9aQ"1@Hh(GFe/?sk"Rb9sc]/J!Jf?CSf/gf"asiR.BR%?^U%i1f\?OE>?2Hq2i'qgss#ke$^U4cjX!
%iuu+^UZId^@)+N2/f;a?mKt49U:fH6EgG)%GFU-dcHrJIq-%/6@b9O6=0Keeo>`eD;[B!uhStd'JY956K\m;sX:To4OhX*jlnr)\
%G#0Y\R<_4M!!OmG$Sf@]/.`tlDM]tk4jPI3kQh/f>/g]`U:]<rfKonS;NCpJ7:Z#b^8XW9Blf4T_"EY*OkJ>Rr/.\;();/U*/L(Z
%kBS%,RlFmX8?#!#\H%RRC%:(4WDhthfqXR;/Ul#4B.1j^!e7i-Y')iYHd')kWTTEu._cf:%WN6[P[)Fl[mkBkXI"gd[W0Ge/'XM/
%SIUJf!tT!`@a<bC-P;t77@8gJ_i1Pem`,Wf"WetqEY$3`9!SNj"$F,Q4&,+g`$@I_/LZS5L`dO,Kd!nLKTIAq8@N8rU'U-_iqLW*
%1r9Te&H\21d:YaK#^s#8.od\q7G.\h_A\]jB$W"l>b%nN'O&O+m0dM?Aj4>3<cksRJ\nt_U8YpeU^Tg<,K:02R)Ej!ehLo&2U;kp
%F>=oD$1X"B<n8QUdAAV0_;&c!!PgWNnsV,!7t<j2^+g;73<gL>f/=AB=-sJ\Ec1/H(a*fVGanaM31'3pS*KSf3TjFe=gj-i.?MPT
%],;a_EoOJ"bf9?0H-rL5c\4XN#J04k$&Z'7@tJ/k&K@nMQ,Nn]o66"Y;h73NReM4O9L!C%ggc*AA6Pq>+=Y-a^qk@]=$"$%hl`35
%V!"o.TSsiWOEB&%+jm&?_mO8]StlIpk?(<a8na,]@P<T('^%M@%\,h)PI`5rLu9HMKm[.m:h.3C6;[fJ&e[stJ%UFP)4an+=3KTF
%]@t,1QInSRHQ!lh#[Dn)bYi!(S:W?r4/TV-Ro4(RF;BD5GO84V&l2#rEeg(I+_PDm^tD'$"Y4hm0FnP^BK?^QlV1D&q=@JjTMA[$
%&%_n:b8&L78ffjC^mQEpo3Y%%e*r`NJo#/9mMsdm,iiV#7Wek."\^+m2_H#ONMh*@=Gk2c(mX8&9=PnL`'@i]p'ei[&rBbl@i"#o
%nng1i9XnU'*Ad318o+f0namATfA]J9fAVn2E(^i+:P&CS6Go<=2+l9KU0r;s]b(gB*U?=:6>c%_>AWZ2`NF]Q#"/G*cJJlXfYb#E
%rgZ*pN,XreL-+&mSHd'U(@M``A)K01N[Q@uiai$Q,g4XOiX<QTNUY=8f)XI6.41oH"%Jh$>B/+#/8d@cFZ_d(YhV`&<1ATM9;oCG
%N>(oJPLLD2n89`X>FhOl>pHRR&MBfP\:Gp.6-'6[Q,S@pr%F/ugF8.4-mB&0PDj&b!i#\/<V_86%`2kKa0UM#*P4"@`&`4!)DPm^
%B0<F35)j&3\ThfPU4gVt+Dg8CAZq=3k,.dGWAnLI#It*pk0>I;M&u5tUjlL-5F/!+!u-qUTa8RNF]T?,#/bC2,=]1c+[lrT,Rr5b
%^2aeH&b"!r`n$[K(nGXLRt2V[r[YT:!q2ShK`hLIJkbm1"Fc5'`QGQepk`3(EIqm43nGW>KF3b#ki3A*;poW+5]?5'27(i.q'E$2
%+mI2?,Qq4N@$$Z43n>lM!ptk(OduO;L_FZHmi^0KPLJd?nMUMLROpGEoA,A4R\Ild"El*"(`L$OdYdLoXMP5"CZbt=-F0IjM0G]=
%aL#.L>r/V*\j:EX\L.$F-'b%tUo5bqJK/!JC3t4#KW@j0(i?:".br-fG9H'Z*W>,f-\,58C')7$:fV1"kH$"c^B7$^PW0@D^3_7C
%Z\OpNjYuF?<I<K:**%tBp2K.tg-&!KeKcep%UuT;[JFt(&fd^TL=m6n@n;V*AJ\naPEc9'%*.QV[jiL#W^-FqI$4)"%gmh.1S_H.
%4UQF1S9E01')2RR@/,(cR48cS5eR!n`_:>,hUfGG$PI=:>!s4?=pb[)ct*t8TkQ%/m)_np=Mr6C!9WcN<$5NN;']h;VA2,hiGA-)
%-l$CJnOFV6*@BPtH9f*o)7,-MfK%m.aEuIdfm2;(;\^R'K],9R>p?3]DM[!\FU`U*_;/6H.;hkA3pkXFDQ:sGH27WAleLTY-%Jo1
%F"gC5(f9rFd1lJ?4G46@WreX0MFIT()4g/pgK/KNd0O4B(UFss]fZ-47`c]E,2quZ:b"]]326e'YB(q)%oEiik(K'PORK>E(S6'.
%/+b]Pl\D2b3e[u8i26m6!(gQFr^MEG[sD[TL-2sR>qbCHBMoM=MddDH/:X([&/%YtI3U'c5Bmj;*SZeYn17R>l-F+ED7Zsp"/C%/
%B1I1hP9*t9e<5:N;V3JnJ>^X[94V]KUQ#]B&!^oDLUJk'*3%7@GT09qep`t$,@r3G+uc`e",?kLeT^:bBo5V)#6uA8H]8]NV=eD&
%A`m1`,BcX2:<eVJQL.jXJB:.oZkQD<a$Iqg%tR>n'B0Y[R$p,TIeG"LF.BIkfq(K#'Ye_]O'T"q0n8Uin1mdE7!/dR[-sEgk9q5M
%dq!>aS/p4(e8i@W,bu6DH![7ZiS6TWnY+cb6oP(`4O^ZD\?@h.71]q),/chP9f"?6/jGhg]m9j>Fpaihg_V3"ea583*=`CNp'>4g
%04(?cbt>6a'E^AcN4PVR+'i:k,a:i;`#pR/[NTY.B%M4fa)NU-B=XL:_alRm-b-]<e_Mr-/Dqb,9,3KtI7^LbN!O>QcG?ZTFh)`g
%K,nEqoQb@<9p]DDN7rU;=jtWZWlad3PVe*R]rEK+d1_?5Nc\fi!l6MU-@`-l1H*3bQ\<>@!V/ZP0rc?B8#I^pg5:a@krma#/_(T\
%>!5IgSb6GL.oe*/0h@c-0rYN4FR87*8gZ<N;tDQDau$rJY)=&K'][@(%pGLB&]ULc1tW:.A-ARaW261l(8?So]d,%(fucGE*fuu9
%0PPH"#kEFZ.1T"(ZC>L*Zr\P!oH-!K?^&-<AT^W\b:2At<-q2AFc>ML-FfW=<61Cdq1n(;',NklOl#%^eJa#7!$sGDLI78X\f6nP
%X/U:+_3S.rQt:.NS@G0l\e00JW[,LbO+]n-Zol9+XMoBgV1_"U,Z7KEP!qpbSQ*!K(/N-`#eGd()5Q?(BXWQ`i#)#rMb^5=:Z\Mo
%#,3#E9B(3kekh%4"g]^e.O*a16BIus4c_9sR?D@4]SFFH=$?71MZ])2i]:k@L_BQgLcC@75B;iNB&>rqW=m-=EAC]J-rf1UhOK`R
%E>+0$W2LE((I)CbK5F@^Z9(k`HT)PXNVt-n_@/9YQ3:YK[#gB)"PZYfRp]/0qX*ib<iT7K-aF>/8Su')Kl%0*>p0;$:6WCBfqnGt
%=qoXu4.2rkW&A]$d75Rj?hM8R=<2h/6Vr?-McNh?"(AC&MiqUAW`PB*4*OWInGn:FF?YbT&hr4YP=oIe"^AWNdjEjHDr<lGhsXmp
%cHKO@8$Qo6B#9^#odd\Pc0N=3J7TK336(tHciT_0p>J%DCt^?kX=@O<8Pkbe]]LN39rXE%>q:bVQmuZS6^O4RdT/QEMXh&B&L%&F
%c$.?u_s8e7(8Sse)d;0"k$<o"P0sKglR/`<FAkQt[da0o^>e4H:QP+`e]t8(BfZtfNM.VsRnak5<@<HU^bC]baZ)<pV$ptO*m0KT
%j,A;?O[)rUV-&phTB*iKb0-3-ak.R:Z/-&i+rVm1X0MSc0t=5#SF#e%8Y@*N2NJ);*gC5i!!Uj3eoOGZ,XF>g1@j`kQ1ZMb*1(."
%,cd;6E5UrT7>rZKB87<p=uXM]&BG'_C?f+`8ug4sV9Tnu1g=2e:>^f,]2ep.SPTY^7?JF_9#Y9R_o!BC^?HWU9k2cg_nmu>!F;,N
%&8iZcUT&c=YkS>Q*?%ARpp),M),0*GCCbaF_W&#i&]F;>iUH?</gO,S?oD1'9,T=$Eki2?9r7^RYu?MMAWXKn8elAd@&;5T>`1]h
%caYPa0rkbA0VJ`f"NB^_?jI"BXrE-V"@Aq.Zpnk=4r7*0Q<M2FcuNE1jhE)&4:,-Bh8Z<>^".,,8K`Q'k;(5?INkN4gs:mT\)IBl
%8rh9W2G[d+GR/6HR_RI<"M<=9("GIc]9f#i%[7*kd'3G`-hu0&+"SWKkL7dC=5bPd,&4-r&T7gY#e;Ak*(2,4JN9W#_D,abXgrbb
%L+Xj*1td-pOcK#?U>8P(jD0MjHZD(BT%U.7,qbh_(g/70-@k;GV@+COZ9[30nRriQ#K8PGnZ:FO3V/uh8L5`>#"3@4WaG$@b4#g5
%;OgV1M0t96Ka:WY`7uCq4>IIL*-nJ'^K7ODoic/q5unR,pG::4Lde:#($ij,iSLq1!\o$c]JRqT0$]f\S\OubI3E'>;'lP]2akPl
%@Td(43ZK/mftAD12f*@=!rnI=CA\q<a\fKMG=R=:q>[Au6d:AlnXViZP"e@S^-aQ_j']))]N>&2I\@0UMLl::b3Y]-(3`JI_.2q-
%/)E+53Y4*KN'm`+0CXa_..Q8P#=pG;C)LU),+$Cg0!=,Kpn@kj^6]e&bt#bjlp'Pj"4W?>EKkJm#O;JOgV^M'f6pb<8eLlhat2ml
%/<\e%btC=,2&GlL_7KUq!h0P>kD0d\"2NR,L*/-AGf'OFVfHN%Jp@&HJK[i>!%M<n0>eZ+!F&8+MR'_Tl5k%*fi,Ya]49."q#\XJ
%Mj`[hf]of<30+H"]F5Ju';iE/oI_TtNp%aG=uiE&DE:P3f%c$XYSIuq:iKCS5g8j\$#[FkFu&%mSAdTl<t_3ECH!9bgNk`f=)jk@
%B(;&B(.Cs#l5ua!<Rld@-!CT3!ipWpR>;);d;(rApPRBS4e%_k&K\iR?VD(?3l6k=ZGItZ0U971OPR#;J*ajQEu`5c0)D^VrJ,iA
%KQY/-.dre#3"I3\fq&XW3gRHL&JI5?&.+11j2(g_bF2dfEdd8:<S\+i8V:ISm-otY?Du#hlcOAK(4UtcT*t_%#\FJnZ^p0qr(T`,
%?:%C4_qq`r`sKqS=,NLa4OPX#5JSNU9LQ9_i0GZW"=JKdHlGm3F'N)gU"YQX:LpT7&k1j!,D\QR'W`#\K#q5**<=5J?f28V9lPY3
%"Wr$5TStobP)r%AkFtB!!(J8lpD.]*=AcA$[MfWVWtuANJRP>KTOnA:TMS_"pbO3'%`XZ#2l4_LjM&Vb&OsjlU:#m<:STk<i=[(D
%(m-h0/MkUD(69dJ>^<'J/OnSJ!Z4:eJR1,l_*sOH?:@;)Tq!^_+(S*R(eKm</NfE>:D+sP)^dh9\^,nUWmIu+N!Qte0d+tO"D?\d
%,Bg;qj2,,^nf0%L#H_]-[B'(d86,e\<Z\`DJ=SIDaQ00=9&p0;E$I-@JHnXFC#N.8XMoIX77*W:jNCs%J6Lng6mde2c!KK=1n(qs
%iDYR^P,KD2p`2foc9>D74G;_-C$WXY4\7Qm,_FF>],oA>,#\[8GbFI?K%MC^&7WuhoZW-tj:sTm'<8"H@mFQ)6]`IW:PTSgUD*,C
%>^=d8B\$'fNkq".=;;?\+:K:91j<(NQ:+*'!2A'nkGm0?P;qi^!RA?R/uns"Udp/U6B5:1e9-<&,#F$f3o/P0[mKnrCQ7arfSP4V
%lYpo<H8^_r9]:oJV0U?@fBn2S;u+`%;aB%Ad(:V6>758tZ#R("7o`"9D[It\+J6qu(F$3AWX0K#8WjqI&"2p;8-KC!BIh(69h5eI
%@t3:M8>?M#YJT.#$9/-V!bH^DQCUETKEsYm3AM^Y.<(:qH\h\A79*Kf!G17irB*Er/A;7$J.ni[")=A=;@?EhWl06\<tK'qp4=La
%Wc/#L[o"7g\tWSbj:;qE^.I@d,GUUHFY\sGC'GS!ljZM_."rGhf>dP3;$Q(c_7DmF,-k[rDuh8"X9kVmpd4"7K;3@(YQn=N&B,>0
%bF*+((W<jF6):8rR23F<YAk?-a!r(WK,[a#72!?@`WP2/64fLJV!`VUN"ChkL*X_WFteT/[Y`NIF1/C!H]m]QT#7-Iq^1;URQs,j
%11V#t;X,OISMBKQEQdK<Gn:[o-YhLi>VHTm%M@NaL<K#..ZdB-C1YMu!-&'(GFUgO!oh:2C(_7iPSP'RAkgjG";-L+cBGba\NUI>
%-hoE],'%:,pV_:f?A-6\SJ:8%Vcf[cOYL6KI2&oGn1fe8Ka_&uNMlT_j1QpG&!8=,!YenGNF97GB9496L/q\7:BqIRaJ,9f6&+`>
%;POD&/Ug0O=1(./O\**\PY?lOA>/^K(n.\Di5"8fgE\ue[V&uO)+HKWRR3"0*=XV*9RFD4@9o`d;B+VQH0=dF#([u[=;rHCP7;J0
%KEO+iQsrPDbp?!BE*SEIU,Q_HE%2a5b/d.2(e-K,MTs]4W-_L4YRi#L(*k0%P`a"CZp,gF3U@?U-=Cggb#b,>dnRaf]Sa3@qRl""
%=Bo]pKj\h>n,PI+9&h``%O+1>Crr,6AenQGH04>`YRaV<>ttWb$jT14.H%9]RV^I29Ef&upfKjTEtRfAM&(rlpB6DKj"s1[O'.&7
%pPsW`.+cp-+9EZ0GV5X.*dNZM.rj73&-[lKE,SR7SON4[/AkNCW]%PnWAcq7JlU==&Vst8aGS,<N$9Kh0G#CA*RE-4V<LF_-"JJl
%s+b5W.Deu?+P5>"FSikA5dG/:$qb3%8=];S>d1L+$JCVf;^uu6Dc3<@":_"TEXV0J"CQA.=<d\'-jV(!)Or&pl9%J8YXa8rV/W"9
%N8]4rne?6acE_DRkW%oE=U":d3uJUHnPdg4[T#c0&cd17&dPpHp4CH0P#INC;Ab$lRtZJ$DF5+o(t.afi&5Tn(5=ha;=)BWNE:Ok
%%!DLOU[3:mD8IM=3!Y!Xb3[8_(P.d];8?367KEg"\EslYa,ui9_8HZP/>,`a&rjA<j4o(&62$i53$OBUC1b_nL<NG,@E=3?"VYi"
%Ug2rB1)Yu+`3hqP$D^7%/;ft_,b_gUOYGVsoe<_cS*pCN8KnBS@=;o8f[65tGm?V+[f\J=e;5KC3Eb5fCXV.ba`-YW]Gr46fmp@.
%1CoI.dY;=.i;MHB5adgd%.qaIOuXhdf"ckW!L[_o0uG^nFcTgsF1XTs@PR)FTU5ghVppu_QkP$>P<"FZhK,3F"+q[Q?OX0OE_3p@
%^C@>Q+gMitSBO\]]IJ:hPngHQmu`0-Y2tBH]KD&b`5'Qk`3:l!b6M#[\"ToKTNmT%$2bBk3Xakd!ed;0Ifh<a5q?)prItZt3QFo(
%i:8:)dtV(%AqYhd$>t.;.s[.Z:,0CH5>YiN@Mg:Ns'Y"Y_F*B<-\Em>l3127E_7@-94'Es&RFA])Itj#nYJ8XbGhS7%uOGK?[7K/
%%U*WMXIRuEP`0(:e#*`X[=B`&K%=U+j^cpLfaX`t;BC`]3t-pOpna`)39=9srXG_e=,C^^K9T:HUEEEM\9nT$)!+L-U7ACVM5P12
%@CY[1!)oQ/A/fLW5QoSiaX'3_B)3B/3Im\)jTM5I6tl/)!M3#BFR4r%E,nABH;7j5Y\K#PT.l$I04K2]AFcl6_<Y^KjNnYT_h\h.
%EmcbD+?C`jTC`^"+(8,hqCVKf"'hQLRZ9^t;rcM`MFcU"!;-td]Ol-p.ip\OBon?kE9&hcP]U-&OgiJeYRQO2a`]sj-"'85FV)Q]
%>bJc+;P;(GaAF49&]Fp4S1*`%=b)Vr8D[)d@S'@`V!="MOb:HcY]Tu3QURBE/991V!K!s]jJ4QI"hK4.Dc5lWON=Do$9tFZj="XB
%]A<UGSB8S6'YJCZDurB==MIE?4r7&V6jA7(,*AYK9<Rm<fH.X),&`(AD`Hf]*(jY\.1mk_DJpZYFHt4^'S9ST1.*1&<MSpC!9?P%
%'3=YDa[B#P#p(!EFXJUh[:OM[?#[4S$2?Ip^'9OsL0D&1hMqd33%<'j-n4_39oM\S^uLZrN7blKmWb$a>R!9]RS%/n4)QM0$e4\l
%6)B/o:A?->=t/YpiKnLhN]H6H;T#+nN[KD@299b]-sl"c"!p_SV\BNs\5n5^]Q&U<,+E`c2\)11P8%+SeRigY.b6SIqQ[dN=QAJ!
%6Jd;\NDmoe*>p<-b-';!d!4%c2[(+\@YQY.ECpO3&nj=6`lTS@SOV(P2Fl[I>eEBg`edM+jPGhhBFQCD!\k0tFQRY!fOa+E_$Vq"
%(amiFCSggcjNlng."N0^i=5kL$ZpB\8#d8Y\B&5of]!jUj073/A3.g:a=gmCMc1ZnAOe?O9'A%s<u"t[&d?'<(U2nV,\*e4n=b/"
%TgON<F[@]7`CX\DTW^\>e+]Lj.Sr*>3DO8t:n7G:fKMnrL/qe[-K)hMhXD.PS3/t`J"pE2Oej@V&grGW,$>[Pi^q>o"rg=NRKJJ3
%PT0iHI%Z9C5u9?KE?^L9C`)/"@$lO+KK-qL,f/_7-jC+s`d%_!++uY'\0chHI!APIVkSsE`$%ZEnF35RaV6h,i5r;*JAW4lU`/4o
%3?1%2J.!+ME7-2gBdC4I5[SEA#QluTHBnC.%4<8.J0ZOTG`(K<><moV<UW]dPnUt?e-1f4`1-N/+)'V`EUeW(NhJjlr)]t=!cha\
%M)eNp3K2@.71,*5$*6DNd4+qi*%*j`]T0j^P;eNlI0CoZkZth$$)c,MhutW#Ga*GqK*Vtp*ksrG%iYGA#iSaV[`S1EJ8gaSQ&(6I
%&+1n$`pnD7I)E?1%31mEPKS(ocd@3^5u;*21+?c[Q3f6)mHc/[f7jZ.J-'&82ZOr8&kj&,4*)/*,q+!RkF3)3BW@YBGf8B3fI9_!
%@Km,K*A7jin>nX/N!DP'hf&l,/fD5&%=Ae\R"9faieCcKJPV5o32"&7#epHISA[+j"p7WP,c>Yh$@"u'?B4@7`6ZN]j95a4L!c@l
%mMQ(RP&+8g!,plD=TX+4ECVMX2\_ncr_5ThJ$HNN]gT:Jp,=$+p_\0/1l_iJ6iIjRTE0OTcDr%shaU_`IN)9a^RH'%'[%HH866"H
%]:$UcCQF<;D2@)%0E_52U>gTJ97BmNDr$]e[-raRJ@JL]Dc4"T&Z8ag'C;:ll9,2^W=9=RA#sUgF,59QI8:-H%<W-GHNGZD_G^U(
%q[rZ&"FF>!^'W&80B!)g2i/tdJ,qWC9oq7Ale<q?p]B`MFETW8'^<4q`oTH73^YSQK[h!d2ru#R$L7!Y+sDZA($;!+l5::K!V9"u
%'WXA(o0!,E?c+GsW`0cE"^%FF#G@)t+<Rp-RP-&9Q4k>HK[MLs^:bXI(rCLdS=X-hho*_urb7D]9joW05#Z^pi5J!bkhZH?cJb@9
%E,Vq6#Sl+K9;Q<Sp*KiolNOT'([%RqHW0])en>:V(alSN/RZ7`QK/<J!Mr*=I-'lB%hau9\ZV6khF:L=Di314MR?o>A"H)')d*cg
%LuBhim)9<pLh2+noE8-P"e^'9$_u^,;k+!]`tcmh"s?2g,L$m0rRD?2n'H`5.$h>rjisL3.?4lH9Tct:3s6,b$IMS`9Gm1!aW((J
%Qr13L/LXZ$&JdpoK.9FKWJRHXJ\3oEnKFnG@hLW83KQ2O>H.eG)^0Z$>>u_``&Am$@KGOaB,??IJ@t,4L<`a@Dd%@ffes*+"r.FK
%$HLE'*FR/jM#d@]frkF%dro4p'mhZV>o1?I`pYBbdF/L3^Mn.oiHS9PVcPE:2BF)n.WCF7_!qUs"u96o`uB#lE#^<e2ZT"u+Ht+Q
%E/Df#c@Y)9KbDEFkCn1I]jJX$,I.N``WG1[R$uaoJFUW(:9`&WpjA;lJ94eFnOD"[Y\s]bRpq*h,]WqGNM(^>Ael5%#Gbq,;$`+>
%D,:E[?GLe1=PK0ni_9Q+72Un@@njqNL>qTjPg;*!Di0lj-`3V_,Ou_<mKJP.OW!I`@D!1&#P`"anHK#@IY$O=2j%.938U<iJ\lB=
%M#q2e'$$IG#-;ZqnYZ)&U^J*&2^53Y8tG!eU\qD=/%-4T=c@cn!p!'V%KOf"J\9)U#BR00GdkUW]*@:i[2$77k7#>A--bcl&8s[2
%d_P@LG+)W&n8=+QXoR<4kJ>BD(u@(^"KO+/]I=-oLI*/sRhKI67IUNXYooYXJ2c.e\H\o2GZ.EK-[?)K2kkBqQdZrDh,N>R3R!B;
%9`tYk(%?*e0+,Gf_!WPE?t/"#'IHp&&U^:nh5Ch0.'7ROD@G9X2hdf3P>hN<k\eNEcH38UaPAFe5+Fl$P"h!WE<Wci`Sr[<0i5K=
%)?adoFq&2@:!\dON?[opmUM@7%Y5:Re't1ZOJ:)OAiJU&M&eGUZ^\f)JeY(ND*,O2#V$JIYn4DJGl@cNS&h*9/s+m3:ph?uliobl
%^'A1-aN2G#aDQA+eHlqqRj_MUFTL/iVJSjr#2,".%=fEHA2arh+HGWHh8gI"@('Nf;\fQ>UFBe6-AaNRkFgWR(Q"qs6\d0)TW=aA
%8Do$FYlO/\)NE^(Z^=Q7K1\GA6/ei4F3ne-eT+3GJ9I\S']B!*[@=<P%O>2MG&s$&I8s.VnR)uO;(4mdY,!@_2hW9UE[ef[(6>N+
%h*d'N^-,l9M9:CM!o".c;Jm2W)\anR2TP3>M3$'+K7^4?k+1LT_f,d.\%qBc>(mM'`U,!EA65#RG([X3%!1KI-6pT&OLrmW-hK07
%2\EP"`r`djeSPk'Tuc&k3!bhZ5YmYrF$Gbu\bos'WhZ*#'LW^5jDO0AMR,I-]+KKEHj@ICLf!7Z,/E$-n6)+\GCqHl\\r*r_BHLF
%gPp,,keeCLRtL]'-e!t3OW96V1P!pj1n&oNgC<t@Jc#\]S#20t+VhMVbp&;`3t$$Pis=fe2ar@ZEr@G+2k*FFTUcp=\$LB;K%nP)
%Q4O7<2iKOe_+r!?qbUFa;qu6rMsP4\KpOE!V!p!e]1IS3ls),l7%+c:_udCeE-G'IblbEoQ=[5D+h6@8iF!6TghrIcL@Q=n)eif<
%$rYku'SPPW-Gf)(k`;GB$f#W]+Y"sZ2cHS1E4\':L7(LsN-WjA"p=9?=!VDp.WDj!>R63;W\d8VMnmeG!-a'cOI;@#g>J'="n!]E
%LYXV6]8<&Y!,=2?e0H=g%(McUE4X;F]BQ(qF\I@ua[aLn&&IW[Q_Hel%bP[/7$44?Yh]HQ!'[E=gr06B%l]T^al(5M@\FEt(+51M
%DKh,0VDO(q-L)kB0AJ]Y@*g(umET^)Z4EKKMnd:T]<ediI4PcWeIo)J9;QaJlR']a8Z_6^NDUSe1ro&s)(S9i<2J0_H/]%ZD1i'p
%pRhjqGEnZT0XqE1Mc89j=PY8pp4kfN@.OTPXhPZ+h*tq:mZJlZ<^F;'M8Q7A&u$=qjasfFs!aAGThd.)2\EPpi>eM[hIFU+!-D0*
%a8o.cmQ/J@?bg_!Xe)ERgk:9s[3>dERkS1d&9NrW%5d4gp,go>5_'SHOL^8_r5q#R2\C$\'pkBq;6gno-m4/J,'OPsmP9d;5PRbU
%@0Sn_"m%'4_@.6Jgf\/'KB+?u/'u?PP.Tp,Sfr+fA0'UJ'p(Lm!G071-BM8=4=oF#5nt5XKF6(QW!BD3gmu5m[07=i<m<n&\B40^
%L"c_L_m%2u5hlW>7?'OJi?fp7>6+k]Rq<K0*#C$YW"@h>!9)4l$EY0#e0/?B/KhRN/Rk0+^eI`:DP.!b7"AZ0a59pJ5_Ir`<b3fa
%I='hr!8k3tcAK;@e;:"egVt6LaP-htaa)/5]Nq=8KY_A(Xd$AHh6'mImd7:!R\G@N;`J599?:tcMeW;-GY6IBEC&B_)X=U.gocP)
%Xao/jec?;Tib]@333J5Egif1*i2C>DUj'_I/n!H-H\&RfVujA$pc)H3)@:4[N&M-7mABYW$F<GfWJN0r&q]n,WF%Vm[Y`3hO;dd'
%/!OX"gX*/=5'te(VJn)ZI4<Au;2Q12DQ`:jca4<#0\^]qo'N,)gFWbOK;*1G@YCkg!86dm"@S0!CnkL-A-LWj"@?*Zm#a@s![l!j
%+PX[sW.J*r74"LjCL;U.@o\X1+s>Xm*q0sqa>PH*'g)`S7\NX!"WQ&b7c]Gn%'mPq3?=Meofb[M@=A?JfE,S&A-??ia>TM66Q)!>
%0K4%.O#b9>lsY]d;NPa!B).13C_I^62Tu54S*#5W0,7uD.*.:Nbt#H=4c*SNp(CAA(u(]k"Nel_=bYb0GuV"b$tGbT$kk-&gW6Q%
%?WfX1dmuL9:*I&[)_rt16>ViRa<>O2M!ZAc>#Y[m=(qR?Z-BKoQ$m0F@XCQ[Li!iNL8.Nf[Y]SA[fsW,i%gsp/&J^sr4/I10K&u$
%$A7^s&@Q9XF!-\kCa6TS;hP<_S!KHu[hf>)PcG&Y1kjSZUc!n;Q[JGF7@]\=g(YX,`;uVeO9k9n^EmO6Z_"Kgf7s50gg&gG@6[)?
%L;I_YP1J$gR@<nFKVbCpA<\UW2SR<+M!+9]C_E;K/"D)J9l+T%I-jrL#CQf\:"_og<%5P)/Z_5W]Jd'R4MthCFDWN"_nK%(6kfb2
%Dj<Y)(Wh>8!,E5[>Z5XMMe75bXEMui1e6(CeVHl7Mn,Z4fW\h"'4N,ff`e0pOW%_aW*P:XO:.^>!OBNG1rIe>MEk0>_r52skf4r\
%'O!@\3Fd]]*)2nFd=>;lB\GJFog6I$!M[T*l2d`PXeq.%Bi@)L)""Cgg'*?lYYYI,)o33o<tkcFUl3YTil(=!"%/Q0-t$:Z#]9,K
%_W[^"g/2AR('*((Qtm[r#[\sQ07YQ'I!.%\'=EM>VGJqk$PrAN$LC:R[t86_%>@nlB2a$f:g"Jn)qEc?T+Lo+f/^"MAlF.6UKe(>
%G%/f@L!1mO$<aeF`,)/g#+-[o;k+RrEsd4fO]W%j15F%JP(-qSfh'=>cX$_/jq9/u$8*c*2A?X7^&jNnTeCA*/o\+1&6so]@'Yts
%<`bN%8hf:/=*'JiV!&L"P"dufo,<qNVh9<6%F$'%l)'#;6kQ`hFt*Q]NS)`+=a3SiC_HP@^fg34WI*:V$BIn)=VVJr1N_u\C7^#e
%\"r+%"WP'b#m?i0@oJIGU3ICkS+&+?aA?D`5\:3He.MZG&8.fKfM*=s#)c1YrS2qBL4]X`)@DD)4qL*#VSG$U*Z(L%[:hE+!QAr6
%F/kV[9eGgT88N>:E5$QT07ZAHBUgt[V]]!:"sc+JY^%WB[KAFm6jnmJ)$LO_JVd+^#*]80`!62VE(1NTgKAB_"X`rE701@S$KGSE
%.(42[!4W0N#1*Y,:-l/Ds,I0I`"hD8!>4?1-oT"4#TO2/%Au"b4,(Z1PVe0On;^q^8`Z870(;-FD@I-lL5AVi"/ru9OOtge35NZW
%d8As9K&90$Z&.Bbmg+0joH(YU$TMsu%Z@_1B\6$%XVKlbm?TK/@:96L,9YfA+!_+e!';\Lp<8.JLVnjI&aM^"L.XtP"U]tnF/l+j
%%Rb(L<>ci_^p)4s&-it/K_$UW24&6eX&?4,6"/j$U00'S&oQi>fLTH09#C^bNKG#V/ep'VUFa3bktT0S;(ufIVC9bu@+Z`S78DF%
%K4,F].mGO$2GkmPD.R,-&D76HHBn\-!Zb)f'apKR0"A8D6Xf!]/DL:7)gqej'I[d1-"[hu)sK"`a`AkH:nn`R@":&-J/\e/2V90N
%E#):&&4[K0R^E^Il0X4Y9b`V&=?p:^O%(uX`PQf>#n.fRbe5-R;Z.LJ2ABpKo74\)AXF-<'FL>cbU?.CLVech#'_L&Kal:abC0^6
%2SeON>dlL65K,BsP)Op"",sB@7R?&Lp56Ag!5h:M$Z'__L(-H\kj-I3nId'ec_7SbI4C-t:tQJe_I^:m$CdXG8R"Gg"5=IN'8=;X
%T,#%>KPQb8_]0V"]KoQ'MX3@7hAD_NOK_=>jB],X_M0q;0n9E6Rq,Dt";D34X:T2T><lUQDH-30$6-7.HlrS")\chW/YK=.*jgS$
%L!="75Wd7p==;5Y>sMi9-EkMS%B2ckZm:@BL).p6mrKmnG#V4F5[e.*N*mf*fOPd3#a%+]2Nd*r%##/f)0\iKYX*i"B`Wo^A;48%
%-u;#d1EoZJB\Wogo74]4@`2)%MD\"'L/huO_V8XT"WI)n/9'86#r^Eaau)jh**b1Q_^8*A%>=GJ=1q;dY\01\*;1L**&^b_%ODZG
%Cu)fu1i+P,-6*poBE<p&:`sTL0r5#qM"h+\M<N#SJGbd2ZPWodY"6hBS)[mt(r!)-?u%+Zo-k/-Sq5%s!5dk8CT8V\5hKm'OjXt\
%G9FM!Pq(_p#TF>T'AUq9KFR)X!&G;p)eW$C%HaLE,)[e*KM@+.a0$Up_bp\hOp)IVlq@Cr:ag-VpkE9,C_/Q5@Le*O<Ic/sTs3L-
%kAo/UKh^\4c>?iP@08hI$5t`Kr/c!08-'a^;S4:./toK]HfDF7#2"N/Li:8LLA;!!i"oMJ6jA[`@:=e?`DS7':_6sD^qrR!L`fSH
%C`$SW,[I[Z@AfO9)AG(T?nXB'`7QD=7L"PUY6BPabb;6G=eW'>rO(Db'K5*UL:d_E9k<+%$AD1g%dd.BCcm?3XT]CsaB13O_Ido-
%l38"^@N`34b<5/&Z(7(dHO%9g1U@r$_hL\&MeG8hY[JFtQ=jUXaDFEAUgdSm_uXE+,oAPi/iTO`N>PN?<$NrUYQn1D^/4JnWg.'m
%DJ0(>6/TK%:MI5T_%)iF[k\e:>&I<$1)0(+7HTmYfNHENL4Po7,&InD<H'RV#hW.9NeV!pM>[PV]':&9^gC/Fq<"k8B!GcO=37@C
%@UE'j*$Vfoq\o>XH%iu0!#JbT(Wb286u9rr'QaOkVdRqZ;M,dqf0j/F9nBu)cdPhukV[`i/Z`AeHc['ZaD2tV.?;RW+XEkAiI/Mf
%!DAsT*sTBT+t(G=[lu_#U$$[PPbJ3&?A6!l!%NW5%U(!&JTa`g?Y"1RXD:3dP7XHbf7Zr-L3"Au8t?$)*OLF)U0PUB2:XRGC\!Fj
%@n\SZ.IR:K[2%^_#j051igP\moI@_#cqm/"\0c,2l?P#_Xss=Iq#PD.?4GHmA1LN?%I095^o_)[3-E3KL=*5Z!H"Ab'QntC9cg&h
%_mQ?i)*mI9X>O",5VEqPelag2"1>$#J5EA8f$lD?ILA\^$FOOK%aRZnP^MZK!48U'6>XF@Si%6C`1C$iCC7DaIApo2j9p`f\cB'k
%Ou@:i%Va:D+KlL"RXUn8d/q=VPXZet`#;5n*E'k\VUnZ-Aq=Ab"rp;+5SA($=@>T^VYED0KnK\]23!qgZN\)^5r=Gcp+Ut>4JX\q
%o[(Z*A'Vlj&]bO:XT[N367jZO0qbS(MTegaXu;pQ"g6..8[uR<7VSC.\d*?*Oi]2ReNo<)(9#atF,DJF6)t;Z)>K&G=e,[nBE;6F
%bSno7"L1!:%%%)s'7ihH9>##6+p232WX6`N<^0$RVQW"4YP.#KYf0/<W_&ug1p')E_i;A?<)"tYf_ZA\RUC_dkS0mT8;PV*V)h`K
%7KKKc9GGK''oZm8a!$=VN_sXA:C9rn"MPYj,tJ/lZRcZfK9cX:J8,/X"#!JuC;X[k^f+0(*@G/c&e[?^$]Dj#I?qd_^o$fD2Q5!P
%j;(M](`.8;N/G3^V']P(Xpi:G-3?d^0J'W`>,_m/l7N;q&:oC18)7O(8Y*Z3efh"+\E"'\RP#(pTG<QWp,>+"$U!]B\UIHsq3All
%fc_q\e7>\5@=<\rh;F67.g)Q,;?u'_W!fNAY!GqZgU'u31"[H(jOR?SC5J?ai_W_??p^\?NM?a-b###eTU47rW!SXk[5&GK\r%Q-
%#h3UO?c/M%Qn<r_/m<3\d&4RSgF^gN1M;m[n7`3/2!eqd*&aIfiFpX:9KLsLAJsnmm11SDHNSJ\ZJg=&Ts3"Q\OD/06N`@ig<]hj
%%O,.,k-S2=5p<.gaY-cNL,_mFJ!k@R+]"4aPbbIpSF!sr;W<!42_F"RMDh#5CN'AlH:%TroP7j`Yh>^JJV$U[H'VrT'l4chWKU42
%4pqCpqB.O>Lr*.*'lA7q@)%&bJ64VfWQrkfU\ONkCg++&$u7nLJP0?89p7_liA_!TR_V8"b-V.C-d@9Li(Oep#ilhVR3jHrG.n=+
%1_GU-1";uZ`<\(5e)^9m7$g56PIjd%'TLJ1Uq+KSVl.mCE)ZjuVLm@`?8Qokl3,7#Ld:H(IXk'M`s.AH[PUjD-_f8A9hVf@Zo#Vc
%,'RXM/DZgqQ;h7+8k3CGTKG\nJ5:+b.p]1idT0K7.[_K8(/<-s^fFQf8f*&m0PZpO;o=hX_?*V=WJ2fqc?n%R<Ld_09SOn-^ltXG
%@^ZgS[5pU5AMiZAEt0P!<5Xk''R$MZ9"HE3b5t8(,-7R!9@H=0P!lZ+N\h?T!olt;eS=W3,$d$]8g0s&&pNUB6^eS#\-OlX86;qQ
%TErtfNXR&`0ViKIZm:?e"sN&Y+:Vhk95=OU<T14d5IsHa35pqJrV;u7i1gSlPF^if*_i?)n9G@c1rYPc/f30fL/4\nd6PI"4&1m4
%X.WHGJYOYuMi5dp9-iRr[gF'Kgr>8_I\9/_lGEU]`d?5TAi,'Y".j?1);XHJ15WmLT,XHE!Z6n"7%`'"U'VD@2Dg,GVUtrF:_C'J
%bcV=h@*qssD\XajCuUt\/4e1<Tp3G--s@e2%4@T*L"'F_M/IlsOI%ZKF9[jiW$p%f;h5W.HJ[#aLp$"b<f#t^mP0?H<pm31LSj!8
%L7f<0BL6L0aY_N1&d>pfJIYE%$,?aF.XBLt$lU$moqec66^%lcE396N9tp_+.Cd`9dV=AT=D78a<Cs$"@*2%@^_@KOS8?!e>[Tn]
%`&W7##u,_(E(:WWg'A'ckWoqckUb@`L.P)(Z*WL?"biiM#$a8ne/CsGb0CGqkh%kRFU8CLpfpB;'E0u>RsZ95d%jK`0tRp&0PP)D
%`YfmU.;qcb(#n!\!<V9_%[oY&!A^]hd"LDsV#gc.\gT9.$k,0iLmMO96d$ut?pOlq2M<q9BS^ZR%4#W;N"$(3\oTK>5gZ<>"0P,V
%4A(Ku_*AY78F6d!BYs"#6!$L+"schL!sEpU1-3!ffkZ('TXS>kp\'*gs7a]$L@9S8q+Orn+VE\F5@7]Fh)fr3qtfN=d%?j-fY93=
%bGV!1q$$auq/9'3?bLi)D>j<LQ^9'9VpAE>ZVRLLQ_/^^XhObudna</s-Abne*>if^](:_ITj_@T2u!fJ#Ci'rmJ9*q=Kk@rK-cs
%Ajsj?s.9[nF@O&K[mE2`-VdoLkBQOn<hd6U.D>SXrtfL^OPt9<9,Ui:Tk5DZQ-^^oO?1/E\cMc)TD[L6&$d``Zoe".;"K?Af,<i:
%2+`3i-SHe[Tmh//KnFMk^)RJj%`l4TmkR=qLLWR:dR"=qRgje<XYr8f?iP[]+R`:IT)q*2/rWQf6+kXE'G!th!Dh*'_t/tUNc/Xp
%=?f(aGH"I>1e%4.+gGg'9Lm_K'0TWo+<lPo5?`p,KBOh\*\b9hAW]'<\l`j@9YEC?q9JoNdRfp/HHT='=F?FS"'o;=qeS&X&BRk7
%[E)m/]26'dEK8YFb&Ac*4P9cJTG<7g=PstU*Ys(]@61je/$URDecI-t0[[4ab]MGqP1#8TLV&AqPaI`G2N%;1f,DENFfZi,aX]X^
%3(=pE\%fY(C\4l',1SE05=+kI=iCGoNkho0V73DD,S^&,V-c0,3!AIhU!!W(G/*L?G,EI58^@mPpmDu!:*?VP>PiS#lZOK$'VDeT
%VMb;@8]Z]V4#VDFEY+d[g1uMW9UsOG>J'LWBuII,R78>,Du:kUN,SliP-,>;3CkmY-qfX8mp)F.;ch_,9*K8*j9Q,s#%DpoX_[N7
%(]32[&VRU*H&>p2i)Ff:P0V6Xm->f_*#7lt[4q;RSYRWq(mSo__R&3me<F$=qf"B%;/ETC.j?jm=B$O8U=1QmUW1,@9!%l:RaZ'C
%_U;VMcB+^?CIrOG.BKt,EHEPRc>+[Kn3ZBr.D8Bc4BIr+_@2/Sk_,=oCpUj8Cp"E../YdpnW&lp-r]!\,XtBbBFXdA;JaP-^<O:'
%p/1.!(O#HATuaKKHbM?r[^a\Y[c,;CGM?fNnOpG'';_2N[VF67cUlr9(il%/X\U)KqH>t50bk24&dB.g2+Y3;1@Z%BON0sHPES"%
%-)<h6CM/"r+?K'#npW3Um[Kdqf4BsW'6E7!U_$3AKa?b/+k7QH$Us+Y\jGL:"]UWV"Ik1&82X5pl)$.<BYJ4'#f&cqFkJ3:bt;4[
%`E8uqq\-EdL!g&0/[D-EPFfSM`9ft'"`N]J:geBG9@:!e\qF91q1!0%Nb1pH\Z39ENUBYmBI_#hq#hCD"FPs0&J7dU#=sC#RI7Z_
%W@ba8-3:?ccpQBMF)afGDRHljo5=:\W_.DR[PMk!BUJE=E9**h@R"hSodTf-Ln2KlOc?15ChrmK0P_#;/5!!M>@$RKS5&2niAm^_
%fE?5`a8I<ZT2Z0:k\lq'I5j-u930WBp*1Gb>O0,h>[gnVr^:MbKp!#V_/c<@J]tYb/<`g[]MkQXUjN=@YJtfcC2u!&P3h/),4e25
%DsP6gfu-lLl!K6<&,mKSF&93&^ZpQOTUMkh2Kf!GN0,;4jiJqZ0a9hP>JGDF?c=XIa[c6hN6Z7R,1":VS]S6Na1&E3kDH)N=o4%,
%S]2D6:q[C^1(\*;6t.4["fc<=P*N2O,Y/_=&g=MX_MRWMd$c`4>d`%SPo3ZJ8^B\(*VA<$VmhTY8mE=Qr:IF0]9mDi2S@.4aE9("
%g6m=j5C'JS76Pop);W1^akc8<h+Bo0%sqXgER>$W*afIO0Vd.=$_pLDG^O(:&5`BoiuH#&AKW.r3!o0<P=<+B)dc,Y-Dt=jG^HPs
%oDR*K/",]oZBn:!Cef[inlIS$1_iW%=UEKq#%P&8B_5.JQ(2^)PKkpd!T(%j:tS0"=7tN]bUk^tY)Qn>M`-d4+MHG[g86>Y>P!"C
%G.&UNS#2js+qg]E8D0+R9ngY(MOpH+K3[uoOLOrBBK#m0(3/Bqobe_&"S=,LmmB.7ClTq[,N`*m31"*E.ltIV,*-dlijYFZ>PkWt
%pREZO:nC,H$74qNC$?)]UL/"eaiKT0pN1q#gNhV39h%oWZmgmT#R9[^nPPm/j-,aqK@kaWU<uGjOCr#rX=-a(1)$SJouZ2mL`sS4
%i8e=o""MEa7IRD=_])@`E<fm\XqPlug&Uai^1Z7YCE\OP)bf"^@Q9ME'nKap$\/uoZ'76.)fUrD<m7R-N&4ZKF,3F>,0EcuFUGH=
%[%K!1Q;9!l3X*nAS]Ig2XDT03>\AIe>DZjb':LW=HI+.t(VVR8a<Y!AGUu&jqfV>k1D`ZEh?cDtJ`,1PDoqFO*+_`>>!]S:T1W:%
%Yu3Wsc,R'3[\j5kOtLOu$dXP'3`]!AoYs/pU1_Z3*7$TP$-<SX@AZQ1H,3BKN]J$G<W5jhXdM:BHR@#T@-ZQYH;N?:"k\,u(+0GT
%?m=G@J]0T2jTCpXd>#s*-Pbe7i67"GQ15#:lU*79ne!e.m%=u0.B3g4-J9O?B6j#Gd[[S)jA]NuocgUM:Xs4gWmQ,NrlX:YHa:'4
%-uuY[B,6[k*J&T12!'@o8N)EFeo:?&,HK+$:<'q<e^8Li.b3TK$[+Nl[DUACk,OFOfKPRiT?iNUCbetZSJb3>h<%1LZe=S0R''9X
%[NT\Aj5JnF"!L.g9g^dXIR`*VL#^k.NsS?cbJJ'uh:HTZDaT%_`Pe`(Mnqm?HA!(=,`tD=@+TK-^&H,a>?$`)Zs6:(kp3UoP&I@4
%]US,*Y>>Ftl#0R)GH>gNDffFE]-)0PGfX%VJm:ZR5Y]rE[0OVnI?DO:Oq8p]iXo-R2-(mbb_G-M;OD1$[uG<H8]G4d0QHA?J$*Ci
%V,b2cEU/Q$$>-fDd1%C"6sm6k$NJ4(`RW#+9&q[_\i.f:c6>`@0;Rku;H;hh.Vmk-iMH%@!W[mj'AiSJ<n$>u9Wb*54-sU3rLgVD
%cPI5)N"2pNmZ7.j8tB\k.;)SjQ9ABL9N;hNa\:JGNQJGhgTLLk]?GE*d>2(W<%0C02aOnG;<Ls50@%d),_j5gpNE<33khF2rC!CD
%j34$"@Nd@gT&gV"PuD6"6r,6<I;2kR&B/ch#d?"c[^LQo+&-?[-@;4glCa'/':H7*5FP:6!/+]b$.3N!`GN,]Ac!l!d7#iB,q#UY
%kf(3<V*_+PVuj.pO.X5^6-Nq:9^9P@HEH&,;"ZtlbBAe=9j:BGZnrDc[e@tW9nHk+_H.'f^Kh[^C`8H'^J%<qq.B<(07d5)aR?eU
%="<ECG)2YOcbq6+?Y&,KM4kB%>f14u(,()/XAbcp0s"#JZ`U!i%o>F&LksJ"86JLCd%Sh\S7P_5c-=ZG`Q1R:@2D$E':IZpC"U-k
%=[PXP:,J#86HqU+":Im#a%AiuUX6i\M3u6V=SVICg9NGk2R+JjXP$YnP'*MU]ZbIGk]B]Alf:tY+tV!EThO9W'(!^lbKW>F1D>[=
%U76Ru+%g['q3_bNcLF`Y,7@`_H&k]A:'C\CLt62eGXp>jfm,@]+WpuS%[1Zt>kVUMSt!8a!BY\&oT2d3(8#IH^4`*!_CeXl_/5Bm
%4[kWAMT#0;KkpSe7HKse"F'P)kJ)kHMTc.hK+loO*(Gd#UTjPae8c4O$#%WmUW7*h(UkiL'HYH93f"s`"#3+0A'fpt't&79R.XmM
%,.I3\\joSU;9a&pLa&iPlEi/RFrDPc]B2p2J;Fq.p+gWnbs?GM<l?J<(<e%qfdXGY"#H->&R',)Sl8E;`T/@gHGSJgcO(u)07MsK
%U[=&$>F?TO<27Y\W)uT40b4m9@:or[Mn/qH(kker1oMdH=A9'C>m"r$]e26)`I5)EBX7e!'i_%QB49\bjU7h"(M7b8Wp"4[F?%m+
%G[rB/CI(od&=Yjg=QnT-_pN:sL44XmZ*@9*hSSm-7.6'fWY$[_CkK7nD7R=4djAZSB\(\J=gMmlR!6kZKFDn<XF$/4X<8MkE@T*S
%!fOu&YuY;-ZXc:d[RFaT<P7+3=QPAXfJBkeLO&WW`<A,VS?VG#_5foLM$c\h>$@)KGPg_1$:C/8+^fj<L5FQj2k61Cc[+nD["'18
%okke'DVdcp[,V!YgkuQ:#Dj9hS<53fa8/ib6%eC%&tNc17#td[&p7!+@`bAq%eoCW4q%HI0pjkjcfVrMqNR5im#HmB#UlDd[TjAB
%dh[]98C&'LAEWSf$!bZpV%oGPZOe*SCU4524YumT(gO.A;Ta:65*N.kg(O2oRDDWc.j]a1jYqRn<SkBQn^1<:htS=<K`HejJg^&[
%Wj`HELDNQa2&B(F.ejZl)/lRuTh8!pinZ'K)aM:bU/F,:d4J]M,%A#-E&?WAS;LXYPBuhWSjbOfD!4)aHC=E"oHe8t`Hum?hcF-?
%J>-F\$t6O0-'/^pNDUaWifhT]DqSr'UjT-TJebAOFk*N"Anm'n4FqUT-770,*<6cb2K`g%?$r)ta>DgtA\0m)aHI7%)aFcEjcOL>
%C*!iAVVb+^g&^,/7gnr7gc<b2.IG@&%Y^f[4rDOV0q1*'XXVtURtA(FouU=iBL%j)bjLj.V#tL(NWa-#pmS?`NR9qUUtsHc)@ZrA
%N`-j0dt`R/CLdoa,pL/G:9q!M<2kE3[HJBZe)OQplCFk)/MYX#h=9.F6ptdhS;g@'oo62r=^J::b(X%J;7.<D9!W'"/ne)A+OQbO
%:,dlbni>Kf9Pd$n95`m,B\!9.X7n?lPG'E/"[e]VIPJ,]K\6?u0*Th?A89n9%"KB2U<Gr44!528:=@a/ju&lKA0atRK066l15_B[
%IHpSdMWr7+P6E`X##=3FUI<A$PU$ni:6#TlfWZ.@?ph3XE;h6%#+D(Kk9`;1[3:NB$f23;CKEoo*48\sbWo!Ed>k8@aj&n+6<0B.
%BV8>b/q,SK]:-JWZg]D3#s-6Z*.f#--Qc)<U;ru=k9>PZ`]FL'U'XQ_ill:NCB,<;YF`[Z"G]>l>sd<ZICSQ6oekFh:cVQ:I[U!N
%AjdM(Q@2QI8Vt\SK1(LNQWZuA9hq</HFp'l\-2p:S4"R#FN0?tADKchJ-H#s9-Y?%QHU8TeYL(S@KLoiWtX/QRQ;XXS!)/e";fRb
%R^E];UJ[8)f%V&'@4*dt[c5g-JjM/)7/SdC1DoA5Ta9kXIFB=HW6mV=[]"Tn"`18o.B'.%7AgZsVAIpB/Bs'h6HPp4B(h,E;0Bc?
%'u`*`@f<(R)U@taTpFN%@4uD\)bY`M1e%ufdor]q,hg6X_FaP0-MjSqR7/op<'>"?Mn,<\BK?Z8dT^O&5s(qJF1U)8e;_gr:3tpD
%r0N)3P2!e',)TZWUhUPDh2"93<\X5=;fNN9'g`EeJK#J>6MKVlc^]X(6n^S;8I)mNc>GQ`U`6LXAr.`i:`^'@=$OeiJi\f>_gnkL
%pVeq[1cR\8(oMOH%Tc6+?aZs[j-!\A=-&Gr4pt5jZHQ?q-H<-.;dGd`+DSe"Y<=di;&a-+fJa3`C!RD2%#O2<''hA,!llT9GQUYq
%2KJ(?R0]]lai$kR=I$A09bs(Wq-%7%o3RiUo1D]>6Bg*"3Edir1m!OQ6o[sTAh:MT'/d'Mc0o.o#rK*C-GFU.nnD!2-0SAQ7NL4D
%255oj6*cl@bp6ja-9_'.(\^6a6DLbsboWPo-5Z?4b**0AKR6s'oF#-0U)Gjk"\3MR->K>X6I,(_W_>EbR>J'KA8NHg<Z+?jS[(\$
%AO^VmALs.K<i2YnpI%dmh\3t#5_W^CC1uK$2lNTgWQK%?8kAGI]$Wps-</s$F+Zk(H[kD)-u<Wj('p/KD1HZ8\irtom1e7Oa*he[
%!90SqY2qIeMio<0Y1A3E`"#q>*fd,1b&p7:PtBZa9N.G%T;rJM([^1S!b*]HRmk8n*)*suVSH=k4LSL3kE#olb84.kU5-)F'(>I6
%RZW5FY]d^IZEi01$#cLTbK*#-PA9tTRO#m!De*aY(ms?`9m4#[o=i=$VE3Uh3bM@2RYeC'bU)Dj4\b@5U(9UAQGmAHNDQI8=3jSp
%Q&b,P97-bkb>)1]Fs2`ROsO"lTGGM1&@eBl==fqI6W@u(SYQC0+?!7kcH#eN#QpG^G[jEajbUH\LBjkT`U7gLbch2-3(YI:XO8lJ
%%aqH-4.qSkCP&gVm)Yn%KP8s'"Aq2:`/\LXdN5Y/kaH)Z&DBEgAKgit4=&m6R<*q4-qYfQ#R_F+qD[\CW#!HDo]!PjHu($Dc&Boh
%iZfAA7&r;u/CK`ElLgke)_GLi(>BNt8P+X0ieHnjN&^`K'b`DRHDu!l]Fo:fIXS+k$^7-5+dULHHB?47bea,YAKdWk\qjlH1RE7H
%/J5>^/R*0=76cUQ4IZM^N%#]XS&2Xn[?-8$I#Zir!$7=e>RQ=i[;<k6^bof,"\inT\ZRMen69G04qf)fo49XcL^7q0kfQUp-BkeM
%4lC,Y6)umQJW?fhOM%TV:46i5F#\Fh$.VV'j$k[;C.ICL]ZR6>HI*F,^5BLQkp"PSf[nakR4tt1#hN4"<X>C%,/K)cEf>D[m`'iF
%[?quOE3U0tWsWi%1#,iQJ@%.d(s>q\:3;fLBiJ"5D\?&Adh(5(ArN6o@SRbQnM6R17)VY35u#e`l@^<A7B@eLTs.c7JVKA"BN&?k
%'DX:Uo9eg18N/`e5&s16Gt(5QO^K\+1!1h]R<m"><0c"MU;YfWX5:n)W<6@K1p-E6^gu[BajT.h"Y4#)FN$^begWP14i^_s'%)om
%3.ba2bY=BZ>t<CT@bFNS*R2eYOcB+`@7`+1]b'3UWlMmj2<LS8=a*RP-25&.3Nbu)D<#^A5/GJf$S11bBSsGLGL^<YRO"Rt&922n
%.:sDLS(ED]k>!,EiZkH3_&#),>GB/rR@-1lgnb2&2(Tc_MA*)8e8\OFLo,ImOinG@(Y%V>&^nD9__ihiRNtJ/!XqhBkh>T@Tif0L
%YkTghS#H.9Z,HA<d'T<<\jVe6C?F<m2I;k[2sCQ)UUVMt8QnZR\<>'1OZ8i\]OEU2KT1f1nA.h_p-H2IghM.iLVX*F:F_Y1R-If<
%.Ol!.C$M1WbcO#!"0+g*32k_<Sg:*X=>V=SV(<NL(+#ua-nq*jq)"dPnZJ=Dc$Zm_LG0391p$e%mNP%EgrkmMe7kZSVC_qr\#dD.
%/gDX+l<0#K.rYXqko-8+X-ABMNanp+XD'iBbE5*(</n"4P6U'Jlc:ljXL.=3N$H,NRlIj]qUr5aQ'g4bL(mStCI.>BhH]S-`tgs=
%.WZjD=]:.!J2*]'Np<_M>eJ;68G\YueJ^$#"7QqGZr!:0)q8[s1nsK;jKrF+3jbs,[^jLbleZ+*WZ@*KCAJtO&7um.Bc+:fF"h1K
%^QmP^X2eNgedu@o,F85\ZTVNK,MRrn'LiJLP0``=lk]ab&FgL1aP&u)o6IS$/K^.Y74fG'&>CaQN>`fPe(@N3Q2ki+-N2_49ht%A
%W&j#*87dil*\p76K<CVB<&q'o[S:i*]rt/Z(_Q1Q/L\n0?mF%'dA$n.ATfGPkBfpMe>rh"dLq,.+Tg83?5Lp9NQ.PI_r#Ib%MRk&
%5#Km5lkIfQ2)0UuI*_kKU?O4o;^UQ>aSnI*YJjr('oWN"2nU5_2akt1nr=/uXI"CERh>('\b*QVdcNrH]04Xp=aIXQ:*6X&*fuIO
%6DrXMC!:!6[6X',fs'4kn-!<D3I'@_":UJ\5A7nYJaH%).IjT"P:ST,HXbb%,F86ZX$-dFa"<]Uj]Lk-)*Na3!_uG`b`!.YFIu62
%EI,X%Cmn4jP-.:m@j[FA9q=f:Kdg](N`Jk9e"AUd4B-CO:hC7&eC6Z^FhPBUTk2qm!csif@FDhPb7ACL3n'agRI[DpNW^oue-o/)
%SM^1O?CPOOenA8;Wtc>S.'[ds6]9c*d5<^q3mJ*FHI3R>%INm@Cb8@=I[3R@%r3N"_"mK_oL93.3sVMAQp=7c`h"r+J\?5/NBL2%
%pX(R4cLPq_'Q4G;<fP`^<Y(#&HI*Gr>AblT.%-IhfLLc:7i`/a9XJp?f>V^\VOL(].apr2oB[)*U4r+]X2^*7C9qq#Do'@(ob\rN
%H]jaIiQf`0(+/&gV9&NY5Z/^RM!22--2$#<p3uY&ln>jP6rZ$&Dujf6.&md<B?>0^G=@.,.s!mV47/=IZiM@39@&-!Dar4WIO"+(
%0Z.'PVRclo8J.gjh5Pk1&;hfT^cs:AiMd_@6W@R&g4rO$FOl4ZYV^<<R$Be&J=BK+d>QV]TUZH)q\gne=\_R_8al/u/4>8.h2>)F
%2"r#q<sFUk<lJn6?=AS2"FA:hj>Aa@B(Oj(#$rkYNF`!`7$W$$BN84WEDW5s/P[0DTRha``._`qg3N,:;,E5pgCeLbL>0VfKHT!r
%)F9,bf7YpFi[4>Z+VKKA10Fk3<J3bE*J3m[a325bW2o:;L@bbS`t9VXgYg.XP&]RY98<VIqTWS4&=\,a.`6<t<]'tHOl/A:>uJ3>
%IRkUtP>#W7_dN3P0`\Bt<f`7s+,:d`=cOLg_^QWahl%$Op'B'l__J?pH!pOmCI.Y,hK^C7iE#Rl$^steEuR+!d\7VVTZL0-9G5_X
%"i53l/i3*HPGHmsXG*T#"f3gnEC<7F*AWPpd#`<JDDW^n_S`e!.;DgPC50TgRhA`2%Wb,NS<KE#*n41nm)fWLJPE(!TVjH1Hq3fk
%.?B'KE3/\?0%/As=7)RiO-=h%.gHj[";_H1EW^$4_S.RAcF$eu)jE[<(^Y@oL9a?GN[/i;XiDj,X"id9)sngl3H/rZUsVfV1'o7F
%'Tl:Z18jr3r30L_JT2kc2G5:^U+1#9bq`TNE#XW$10r63oCdMkB6'"X`m%Wn`jhqGE*1L8-XZFX+U\f._6$lKG/l$ro\Q=-4\&k=
%(:)f30ma@WK4G`C,$[X3W#T]@IS$5SC;k9>.43:0?R4q?iJ%GL`S6.Ad:07Ak>j?XAE+oQP)2d$cY8`a=UT(O/tm"e*C>R-d_ttE
%o1Uj:e_*XYR;,a"=WWY;MepO?PCrF"30>a$MM$%K/Qia\pG,U`9`eC5QPPIh6]c`6&%<E#K9rZ'+rVG%)4l8V*auL@C,sS4>HT%F
%cpk3=`DoKK9iNLXphbq:,?&^o\I\jM"S+u?F4bgGYmnu`+s^@]h+,Co-j/"Q)8`[3CM4VS%$mrj1Cn;>:%TJ"9qnCF&:\RqobT&n
%:@AI2e"Y,h13&n\b,G*6#mPOV6)'j[;kSAeAu^k4YCPoVo*\eA(o]\b;Y3mQ\K3b%?G^DC[4i<E.BjjioV,Y>0jA<I9)C"b8/;sV
%:ikHc;:r],.bD'8*,&q=Vt@21>9_5;i8M[AoOq:#YsL7jf>)VPUP5Mq$t*n3Q!UA.2$,W_74S5:!tg&c&1;&C!1r29W@lG+n.i$)
%pTDgVYp=lo.$1J<(Nj;cKfF_:"frL6D3f#N(kBlp1#!KjFG9!D)&ed9/l:dQVfEfDs2Z,P\mkmQP__as!K"?6;U^7$[9DG5(;N!G
%+mRU^KhbWpV(QS9S?en\-+'C0*7J_;X]R2bcm7q1g04mu`!855;nN10q(o8Y4lVY]D2]q_R<l'GF/8#0<?;=K$;VSP8n$SlUh3D.
%:O&fID2OAo'iQ$1)M2EbGq'P`aWPW*A.<DaS8rB:k*cT]*(NdNA[:#W>I+huo0MDQY_:aQN_YQJRLGBL*(<\o'-c!ef`c%Tn7e7,
%JtbsN;8ZH:LT_8OA-M(0@0G@4.-7H5Z2]?1P?48!,fVVpQE$Se,K_]c$Rt^!r":a:4X67M-DIpW:[h3!'>,1eC;emT`OXPQ;F?<]
%R*7ZSN]rO:=Z*i?2`?QL9m44J.)]##PKMY%+s;Eq^a$qeC#o6Mf_Rpg^aA1$JE`:6:e`2#"iIFI'8q^g'-epcaeCs=Dm2p"@QHdG
%Y`d%!06Uq^B0nFX5>#=%C(-NH#=t>$1[C?[[\l%48d%Hk%iWBI+01m%iCA,]QgS;o?`hPP,pYEJi.iJi3D5+Jab5/,%]'=9]$t/&
%P5)/iY\>FcL_g=-7ocmd*$-:b3tLJ?-@1U#&0NQbPgJK^l9R]]Q<`(;_[fB[1DKmF782)]pu.Cc=6H\kMVcJHZbhcLo8uXW,`!(@
%3"Ln>*`lu_"rq3l8\pkJTt4Kp."K)NIho1^ANH?9ijk0C@0JU2)Po^;OX:dcjC^&H?Gn,E2^clqjj,Zo;p*#7PSoWT>)7R*n`TO6
%cQmFCe=L0n4qX'.B>nsf-r6fC:GnL?M$cnup5tH*A#6)2d@jmTQ('(#,XuIb^5a!+2iNXIZ/d%Fj$T<L!G,0-WpDU``\Ll2A<E/L
%\ZFcF<A_89Amld;R:i6T:,7IkO$h[/_`GbNBV_%";'lLFOd.US=:<su1lAcXf7\*,%7R#<Cu[;$BfoC+^D[]j-2WKO$:Gb;iS2`S
%Qb$-ne2PRgC(r3--N3.oA:!?f8a):h(n'@JbVr"G"Cj$L^Z\oC/SJI3B!uf_gf^heObl\A-^uDX8]Co$(RnrVL_<u&R@,9ZO7hX5
%VfcH3R#,rRWb14nA:BG[&m?-]VfJZY"e^m@4p$ckP(AE60Xdrsi6<1)q3nRS'gFYK9d?r0ZVXo1%B,#IfcFY?KjH0La92jdEMTZE
%N]$aq/."MF6VL[N9VTZ\Z5tMZM^Uk$h'+&'>+ZGJ2A4,3%>CGE>S<0V`h+`l6L6)$C9U`3g-G/=&dX@.8["OJ\6*b]Pm7q[V+"W9
%'`->'ata)0''XuP72IWJH(1W4C5sFe,ne67oue174Y522KunT<S8s;$cr&3r@<V5R;=pPr>ZD>X0[eX9SM#2J<7KTq7c@&\!cud4
%eKe10&9WWhD+tXad.E[8Q9n8J',r@GQ"e?D79)>p3noR(n>Vf-+i?)oWKpGPde*BqaWR=6/__!TZ[kMU2Pps9-0q'm'JC0)Wj=3s
%9Bf"`U6k9<,XjD$(hRAn""7rNVgrm88%3$K1OZQj@E0O!BQhgS533TV>[!ff#a8_o;m0QE6,4<gN#ac<GSW-C.!+VTlU1=`3A$&B
%(e$5U,iR6-Z'U]I,Xq^s(kj8"M00sch:Me7Kqp`%R>^%V(t8tOS3pL&1<jSQZUW2<YprD?YRMHY83G4H828?8>EG\*XRqbLMT_/^
%'8+gOU=uLrYYs_fT^Z1gIZbaQ@7CT\o>Bj/&LPUqqPHq)d?W.3k@>lFAhO>nc^&?'.fiCURcs2H0btE'W,f%\W$JrIoS,Y0'J#fI
%7*/IA(<h">#>/c/X</Xd7B\*`&eWYq?KQtrWgtNgVIDjm[4i/8,jQ[MZd`UJX',l\rft;--E:CIfhc^G`Q?U?iYm9s#A:ls>s:3"
%'l#aD@(>-sFlJ?/(I"HjT6^XP%WjJ39j(q!*>`X-(71.d=Z<q`A+Bj/epsaFCl;_211=5SI]4/kZFK]ec0Sahkn2Bl3&8QX]X@rI
%&Q/LQ+u^UCoe)Ug/.pdD$Yn[`Gc%I%j#CDnSC!ss&!+L<f[3.\*.n;9H#6I<6tnA,Q]=7@;L47Qpf1"`*)K<s'WHGAbYKIIJ?$J_
%6C9ac%Lus`VD=3A6RW@nDPg9RgS+b'ISQZ;MM<fo(7\f79X\(+8P(6I=\L9l<L8mX$[Hu-[>5/Wk1O98DIubkSDD6W__M*Xe0mI@
%1K=n!eMMlG,E_1i'3cg>fbEeQ4@4!Kd4qhPc8(hrH-Stt1YAR"(*GAmGSh?*@DaN-eY5`QB`=G3%2u`[rdG]Ef9(/Mp@GB0eq.Fg
%C>(pl5u$se7]+a4ZHEa]L2+8<!?lg4dhlm-D?-TI]groM+B/H@Zf'!Mleq+Z5pEN.1DCOUC:R+)NQ;=1+upJ/Hpl5P/OR)s:Pn30
%CBc@JCRcYhF<qNomE1[6^7Ga*K)3]<#H08tdpUU8U0ah)mDTUc.#lo5>m#uk\JUo+;rS]JbRm*Th!2B6Ro@'tAdlK`V2)=jK0\Be
%k]3&'D%VY[dfcIYD@+2HYbN!^_sE0]5=j!tRpA!/^r0WsA;TdM$`-qH[A;7t)9_VVPS,QD>j".&bc/Q:1f9^'LoR]g24M1MajD&U
%3&6_u_NA,TNUKT"G^ur/]-([cAuPjmgQ]eD15g9B9t)?a+U5h9N_.,U6Vt[m\+c4Pi6G'0]SPOMlAA!`jFtu5H::_#RAc.L+OuR0
%Qn4QKjA=3m3pQoL#pHNZMpt.1TNXGbWps0neLNe:V@OL7$7h;"jrft:30m]\ZdlI7Ng)D=HfjUPO=b%2C5RR'UoU99jGeoi]2\]-
%-5]#i;_hXnk(-[8f)7^?.>XquPe\YkoNL/U%@EsGarYGa+W84La0=pJd2`,6OEP#`^)1sW";"ie`2'mpC*(-\`LFrI@0L'Bne=M>
%h$Oe+[:9D%8BGaEoo;.0<MKpt`HBuj6u8/Q.3&)*fm1tC32K@O[8>D$WY!IFI2I`'E9::g1rCa3<5U88!(d`fLf(2Jlrd^#d2.cb
%f$&q]FO\CW+V0d&#HL`3ZA)MI1-r(sd^RWkaXj<OFf8/(_.f!'p.5X""O"?tV.rSZ0PMkF*[MMWmaZ^oPKkS!&;q^)8B/JV&B)ue
%6oY!$T5AM3=.r%7Co\R\PY"GbEU&?O,JBpaFe+Mj*RHAH0hR9;,+@sX$"X7#Y.Ym`n;aA5,/;.W^g'dsg(;9f]ES3<p&l8u[:WPF
%[E'Le7j@69i7ZuXY3;[@U_PRpNGMEF:=!AT5HN4c)gs]7TeKN*2>1`l0Ii6==&`W?S)uL@Q5;e#e%L)j94LVL]].Rs-VWA(7jP:K
%/;ruCGD-+k7QrW:.pPt#Hpme_)'"J*Bp:F/D!-&'he>TrQPo@nL($Z9Y[rD8lrW8DB-B=ZD3a0Ti10'eRV/!&l_,G$E$$oH&Di:]
%*BT^b[E`!b*d7gjcpt?TY*1dQ!$A3Q8%k6G;J)Yk_kP0HUY2RNfdVj3*8=ki<mUj5ck];"#O(4f1-ZE>e6<CBo^OO#N!3u$-n(o!
%/sNO8.07q$c&OiDb>Ao@.0\9XM(RbmEQf=7c&7JJ26B+T2.<Gg'ZV;R_X'4-2Wgj)`[LU)(J8n+6_n9;M($=o'%bs$1a!*78Mcl%
%d"ao8On#dO`VBpW<kR?OfaJ'@W+mdI3bi5;`T4p-KA%IlZe/Ll6lLcHXon&O%8>E64rhi.K%;c<\BP#''8Ph'?:Skj#3W&Vb?A'g
%oX/iHKIFeR.prCpAIUU`GVtu8P#hjJRi2keD'KKoRV@bFRi+pn0pMVV'IBQ2/VA((SE`WoqcO<W)h+Eh"p!LuDD4?ch&OD]Ck-;\
%gAn!oOLu&VR]'r)02bK4M6dJ7BB!1YCIj89VjdOcK+lc%1<[d-md5_VS'q^=D<Bq%7:9^k[`qihEH=>VcK'EhJ3^OuJY"'ac/3H5
%RYD3:kJd#'fZmf53bfGm1g+e6nnU-[_L2iIPA0]!6'ik*_Ch'_URT<39$WRnVBC&V:m/>r$3O6Lh=A+%7>tF#;@P"RiS^c\;`J4C
%.UjfV:#Ubmj'16B:P?h$>q;g'>ps!lYE]dGR&Cc/=qn<\W7e(h@`d#5>L8o%i=sr2"0Y-pj4`eMT<5j+O,\YhlH;ECms]KVm)eq$
%Qd<E1\[a`6^(fjrdiZmgQh4YbmIKi/iq1n2jAi+-p?As\P-i/GJ,8f$=/;jFq1=(,eV*sMq_S3Ip\qArlEm0aDHd!Qoq28.>!;1)
%If#Hq^_2dId^OJY>'qoD<L#u;I]7j>]LFB8UuJE$a4n)N\VWuE#^>^;ra5VK<jG.hZt\`MRug+i:G2l\:Amdfd5.J@qF@F_DiriJ
%hk#5l8R25Y;sKO8pUMs)XLn6r!_!lH=*]0$WThrd/u1lWFDdi*gPP2Z;-I.q96)2//sAu"4d*L:r^",06^JSU9BGbj01<*BP2M8B
%419i"?:=6KBDrS;c9()R;t!oWgPgHFI:l&,T;CEL)?4Bali,VM`HPt.>HSmY]7mWYh>.t;\<FV=MX.nMmIp&h\&37>[r$^iI.k<l
%"&mUWrZk)^l^A"a2BDF2IU7KrR?8lBf@mcp5&9?WVk<mBS<^]I,s:h=&:"+>RP-dbm_X@s[ZG)Srp,?Z5!gqq(X&s0bb^I&6s:D?
%gHlf3rp,>On_I@:F=$+j@?\(bh>.t7n,C)TAMDm7s8BAfIr%].iFu0ok8h"2dC#P:>M=Qk>BSNSYV?8BbB/)pK5<'[:A(?`45$Y/
%8BQkI)9KHVYkqspge&KuS%!Mf>BTJlMtQ0g5%l5-b*LndO'un+hQ[Kq9)HU%1RBQMboZ91%slKB56a7jnuK5N:TW$QSb$(>IntHA
%I)g(4@4ZP/&*R'BR)XDUGB0)?OfljPH8eBi/*+$-IQM86YBa>rF-u+I]i\WR42bW_h.q>G2MO<Sqa8BS/bs9gFgQ3/IFc\jfW*>9
%%O'%eo4sZ)iaj:@Ca4oUmn0_f'^:4k-u".j'.TNj%dT+h8Xd>;7rl:lAC`hJaZ8P=,V=AP5)+:Bqh_9/rV>aLlg(n#S$U9[+$C5t
%mXt=B55jQg0CUnZnK5OA5C`J,fm.N$dn`0:J$8jRs8)Fba+(gLG"Vd@IK%JcDrA[dYQ&lfIbBR=keI+:ErP@rZdj!j*V0A>qeZ.N
%FT(.&cbI-,55G$A)aF;eX6]4]SY'4P4l-&M?]6A(5!M,YG("[n-f""Y5@31t?bcF4KtRE>Z_o`p=-k;d)r:G"^ZF4VSmK.Bq!.+g
%aZiO-rp0OTDpcm6)gtpqT7-b)L:Zjnr+4`ahlMfoi6pLFXRAqkT)S`coY4c+(&3'87^gmOotap?I<0IQoCVjJ#P\qXrUoN)Y82$'
%X7a<b]]hu2L<!ZYRrOFSed(j0Tj45(I!'nE7t]2!rT<e!rT:5-hU0lmMlW1W2]n4ESR&sT7BTse?D$"X]`n"WmqX\i[(aYr\U&Ds
%o^i[G-SM'`4alqSDB8b4(tI=$],mEIbM2Hf%l4^1bAk)ac$]3_J"8d:H#iTCnl_T?-Wg=qo>In9o=)oLRshja(;3o/&RF8meXHg;
%r:K?rkPN1e[6kl7aps'7D';-^3<$HKKJ3B#h3[:XStCDnFuZJIp1Q#,R<MepI1d.$LkWI3OIsgih:s>;IY`PGJ)7t"5QC-8&$%>n
%Wn\PrK(pHg\K1Ig6'L%f:%!f&PJ3pWJ%dsjH-kY:k[4n3gd.8gk]-o6m\%c%94Rf8FL`D;aFc*hd,h\HjItdXIlM`Ho&\QHjcf:;
%G9AZR:MoO]c*Q<!ro<?uRb4BpYjBqa!=/Pb!Ji\lhnDZG8tFn@++AH[H3Y[Ck@:jQK'`HMg>VZggS\9Bfp6F?$@C_hD"O<hOLJP`
%I1l:GrUW1Bno%j)5(.R&Ed^V*EI[Voh8N`.SR((lhi/uPc7J'SR\o?+$i,k][*p`.B9.f;5?im$FrSFb0uonNLc*$90M=(\+TLl%
%0<Qp'0DC;(Dg#tb:"k#C7ou$1Dbg"HI%tKCj4b`3mH(D7+&8E!Ie33mI%TcgbAOGClWe=e7o->6YHIomVrtOYO;H'bchfRhma&Ko
%"FDeOddI%ueSXL2Sd93=GK6;VamJMVSbLgoT:!*pC[@h2j1k]hT*(TgTA;WE35+"a3I%_e_%+oYhf"_R5/^!j1[cHKrdCCKrnk2T
%qd%2Qp1Xroh=f96L7Ac0L3VI$no+X2hVtEiV^&M?DEL.qq>01=<d!u.]H$rnHMul.>`A."3^*KDYMQanBCFl#Hk5QAJQHCVF*J5I
%j"=s0(UlEE#8Q"ba?PXISgUH93'I<(q8otDT,pD7`bt+JIkH7q3%Kb4TD'U->[>*hIW^,4iuRKLG@m2fcH]4/Z$kL[7G^2a!E7qQ
%jOr4eI0s--%]te((Lu=9Zce+=Ej`e%4sI,p^r?k#C^2l,9+JtUZa#;$]FG6YHPJ+.&<rlZd]<(U$sSb2UPBEL]$#!fGRjISUr;^5
%6?Nf;icbr-%Opq'Pk[<\g%L[*ms!EAqgX1b+pI?1%D'_THp!bADpMb(3'V\7H?"7Vo;@cg+7KL2EX+]!dIWRFbL?'$:<u_.m[&74
%fsUL$pQlou,PsR:c)toRX4q)h%NK?s3SZcR*SG!km5(MD$tb:"]\L!O"A;@sgFMHCOr=7@dN?('J+,O,2]&[`^qGpa*s*M&:)D".
%oA1KgincAkBr1i4D>_j7rqY\Bj.H4EJSKu.SA2`V/B1nBjQ,muic[i?0>Thr5h)1q=(h3Pkh=n[J[KrD)He\:YWnX?IJW6geS?.O
%+(Sog:9>&mq@kF:%O6>om-Nm$++#jtldGX.cHe+=:Nd"'m8D3X5@*)62!1><C340<:abEjSc!jSf3DW22^d4(G,K;?eq]K5(s]J"
%!#3"+(WNLm=ZAJOj*Rf1Z:>"ZrbS[W%T;fH*Y!`_ZTa*cY"qjnB*Xar_qFk]*Y!h8ZTa`sN"A3Y?X<$I37+3TMc+aOL[5(ZE$)p2
%^>ImGm_;6#Md!\fCU-s8gL2E%=eg=OOXO!9OXU*H/frOJ&;d^9DYeSfpKg7^m"36!%ms2(L%Z"].!sr*Gkqt\;0J*)pAGKWAL0O3
%lfSh;Eem/pRokoQ%j;_MUZ$1d+;SOT%CON@H81d-'XpF\atJ%r4K)AHV[jpdAZ#oHms4ASN^[rC=HrOpMfS=8m-(9kq@L:r4#-)M
%>*H)$mbjr;W$(5G3dH(^C#?fhJ)HUEa]!UiM-g>Spd$ON>ti^#*L62Xe0fZP(kua[dHj)NiR-3+q3)hoiV$S9IC.H=gF$@m2Z,mc
%^b:'[kBh^,l2g\G?ePao"+T]I'>H3)?Om-)rg+C@qH`\sD!UQXWOM91f+*1F)dgbn^:"hfqVZa<LQ-92CCcT3SR,[ZC<F)jD!`@J
%mDkSX**`:\mHT>2G2R*GLoVPL[J^rkLZW=V=mZ<1[64gLfcbn)^4_i#JFbR(`:*,.nD<+@h8*DGLLYF-a(U7-4<1-.4[pM7'8qY?
%QWk\-%tIb(Eb$74+P+^P"Gug66/=%VXL$)_Va$\WhHjB7&b#PTo]5/DH\Eb'ldP^W*['%#gBAnh!;?(YJpk1pqnc,ZQhl2-X8`-+
%oRHW8rM'=#Fh^j&ep.&1eZFf,*WUf*6%V75(`ukt=N3Vp<pG&C-2oLia+mRlEjnL5G`kCRXtF$c]t@WkqBZuoXdeIe\fZ)Xq>5VA
%hV.S*ru(^FgV8&WgZ^n@JIf[&:9Mo\SmS#Em'>10'fXbgp\=3djhcJ&O\f[K'SILHYYV1smop;%/n;CC%,unu+hZQ9]$4IN6,jK9
%<@3)hDTSI2j*`s7DnI;*5aWWprq+qsrB;:I?bj_V9=kd#NkEarXjR]ggRHu4+)Y>5fk,4$nrM[VIJ2"9o<6J9IfAc,JlEii^]2I@
%4nsM<E!QF3559ULA3m#Ds7bIOIBR.+kl+op?fV7]dhb(Q@L&OoHP\.B52V"=pYbX+pjDP!#Q4;^LEBj94?Y%0U]0>,<P?[hJ<-97
%T^tJL3p9oUrTg,+*V?O&Z/'iW^OA@05JR'ZM]],u:G9KHil^L%rCELXGkK$?cE>GgDn`_FIJ1Y1ouZ<trhkBXG2F%@hk'N$H?jRZ
%2n57D/2QB.<<(G=rbKj0Z<<eXpg)]a9IKj]G4B=NTGFY"Dr,5Q^'f*LDgqNIqM-\pIC!iL@2@\QfF#6jJbq@,7BbQV<6n\.41`!+
%QeA-rD=hZAh>$+Um\K5uL_6e6Cjggh!tW1`oK_E-G@$Ala(4heMpnS0:VT*GN7N?'YSmDf,<OP:%Q:'m5I,pdk[64CTJe%"&@'JN
%$qN&m*Ge1MS'`l=1He!mdJ7RToKHu"#M[j7mq0%enOqB*hu3.8(SpfJT!I%WNBOPaQI&\+csX66[7t)kJXS7hQ2Z=$?k:2%V#0bF
%@_R%8jpqr8iiVq.hOg<nQ:ZG]"FJ;u*\>s^/g(Dr%Q:R"aMC%\rbZ$V]8Y\K2K?cIfE*u$!3.EZUU,4Fn&P%+S$,W5DH/;"QfI%F
%4<QAlb6>XV-i\_8ZmTA9E]NR5JG9%LHqR1YT2*ICn&>G2dmo,-oG5WaO%8aWnC@Hbm[s[YdK;dB\rGh?\NBP.cg3aidb_bKm'-3X
%&oQWhVnWI(H#M]f=$QWPo(59Rp,inIlji+bTA;d:hRe\Nr-<>l=4do!7^#U[m<IR`q4t[r!o52II?4X/k<ZY((K(#Lp@(7$QhR`P
%+*_?<J=#>iHJVTNZR]bI4?n+7p!Wp`pES89G,Wo>d*Otd,^n%d%N='ufN7a=U$]n9DUZsU=eLD%G0nT"oXZ,$[!TD5#7YNW2)H,H
%?bL_mcVO!V%JA#dU`EV\c6J[!(sY>$B)d7LepL9lRd[I+q]l2[&HH+ljd>sfp2$p1D5BJkhN%-X=4c?E3^:<j(&d7n@hX9?o()GI
%f;JZIWfQ_ZZZ(FAqN)p`5SMs/Vunm(0<2s?9[H0<"e"TE%Q.+$Y4cNGe<s#`GJEZnes9hO+Gh2CY:fN_,j<N,UM[b'WlX;&Mm&`/
%SGZm#i^`1&HD_dfMcf[=E5S"?g6AqX\N.9IHCHOmE4jS>Im#mNX*%Y=C41%c>bCXG4ob-(fe0gur;F;Hfm%3pUo+_hd=6I<'-#eS
%-2-#uF19`jIE5N=E54(f*VOnG-P$4'jkrs[?Qic8-TgFVn)KE$nJOsfI%Tj=:N-i0L$>6^ge2MCk"SA*^?Gt]TS&2LOAXo9N4Raj
%4%Q=U.J8-^WG[#Y@5#5$B)dKiL@k>uD$WFSY!'GjU?n).\1R&YVdj`QH[3E\g^a.lpJ@@6@8mJCDZ>s3#O)"EW,i2dm\%iGe@C2m
%G>RJ**i_91KC/T0c5kEFm/qV^lJ.u(1$kS0ge0JY*Rj-ES]s9IAC(F[`+ulu#D\SSH<gdDdn+g-p_X5=_`\mi!Q"7_D!UiY=''U]
%&DigjrBT9'lB;2@rV=Ra^ONLtdaa8>Ve7qQs4^:,h3U&bmoN(Wma(`iHX1d?qo#1P*616aJqJ&a:Y+SaKee4EE:e.@RCsDPh@4@9
%+&00S>10rcrq9R!@!=0PT\l4fjgSkN%t8mbp=sis[bN#Zo(9Tpg+u+=XAA0Z)hkpH68k8?3uFMaro`Y-eQs+TX[d:nRs2T;GF5UG
%%K!i,[:Qg*[_f0uHJaIbkg_bR8d^Fs?!W%fma9*6HF?#KT:YKSd;^ctc(imI9cmhplQ'1OhsRmYpRT\q&2W+e$hEgYF5KOE`Ig-o
%^W!_g^gmr'gfs70>sMW$ZKgoXq;U]1FKZsCc*"a4!2PV@T`haU[Is&Q<,qi0MfoV!+F:)gb9)dAF>2[go:!>3K`?31^@u;7%l?uU
%^^9E6-TJY#]6SjF\eElA^#B;Z#^:d5m?nJ>''d^;(j6J+s1V9as6j1;r[q]j/Qqh#N$5jg(iB^&q&j1'\(rJD-S0@`qrdt9O6:.7
%?_<kEWa-Yua2@"`\!Q,-$uOlTa'C=mI6.2Y0#q8;E4?nFs5gaP"5`p%nLZWWI6&O,]5bm'nPF#j^)YDlYjNTXAaVLXquqI]GIup_
%!TEVmb;UC@=b$&-!Q4)e*nb]FT8-DPrf'&+UD2FD?h1+Yrn&7PqRn[8^Na#hmb>!lRuOlNVreNgj"FaQLN-*"bu/L_:%Fons"_`d
%7uVrcdg`,o\oTcL!;ZDVAV\lgHp"L"p5hbPr=FBrN/[XP\QB:'d132)hIB6,otW=9QRd.XRFi1NiId&jHOIZ3mhsfjn:5lD,b]W^
%KDOm7$[<bIBt$a3fR#&B^YQoaHhK-8cCp9]qSc'01k32&\U=4jHN^nWrN",>J,+V-eZX.8G2/U8It%6Dp<=qhkgfO\`ZOZQh=#6j
%1MsE^I)&JM\?)RX@@QZ1OP\kQHh&>hR6*+/I2^Oo]Bmi;_*cZ/8.ta,$R!2K]>!I"P(W"/:Y+TMe&U3[[_4meDk-uN0+8pbWWPK\
%fO@8+G4#%oGlH-S!7pP\oCE38;XSq`5*?gTks<ibHK6,:'r:l>\pF)1ouShle_[&TmC"A=j@J-."DOcTEkdMTrT_Qj]'6ia>s>T(
%8>%7QIJ;p*bHLf9!+GIikYFs'4M.-`jjR$)r'K/S+2@XIiqoctMN)k'F)uL"fr*<ab>1?j<o<oKkpNYurT+!(71B%%7/;`>9>e]^
%rL&-5HiM]IFkTVA2m*(dqTo1'Xe,1i^ASH<Z%)(:M9\>'Xef#HP@%TL.IaNNr5rmUX164,0nFf4am$(&Rf:O5Y)`9SqGj<)LgTRi
%C&B<ePO%jcRbUNLdsoN`0(?()ALD,dWAiple:17ggNV[jPh,?)GO3t2c$F4Yae0D*dbk(U-L8/3;/Z&9p<,Z1d8djCqEI>55?>s6
%]>_#0Chh"o1-Np^GTMT5$NHntKK=SJYjfhj`P5Sp,_ad]]eUq%rcp>)A@Fb=1Qmbf?H6a,Hk,2G0"0&!J+q(ZZmC5#[nAcccW6SC
%5<CsoLTu;_Sb]53/p4Ln`[="!$pX<2p2aO0C)3E?D_Ll]C$e^1XI_PforTUrhkHZ.Ddbr(4R%XaDkDL,<n$)tAuB6h2D2F4fA`,l
%m'^9eMm0HWIW8orilJ2Srg""f>NfbDL0AK'[9rO=H+mO&h7i40H^aCd?2im;YM&&?h`UKJI<tc3Tp1tsDj(,"3QmjlDGN2_=Sn;C
%[Rmp?ojmr(2#,$:l$MJmht7rOApJ1ilFS<c9]ssbl[C.M?=3].F6o5PfC8Y9<Nhm!I2>tq&#69O7e6@^:/B.qU7M:nBV9cpI`;A*
%r@[l_p"?\OIJU9,i\s(l(k(!pZO_1UrQ3U?q=:4PZMORZe_)ahY($$ah,N:Zf)PDUX)J#JIVm2<ZgIbVHK4a$,fHnB5d08:Tn?<f
%]m]`fL\Q+6_T$NN;TWeQ4a&MDs-hjEEM\;_gH!@P@m_b8\$Z(A9s)1N[^J)*>E:rih7ffA%U7XWhLWCTK=7a@@K"ND5!.NQRr:O%
%rU#RR^(_JtU[i1Nj4@=DrV(=Y?LrMl(,tF0<ar<h`Yl7ejn``HDE-@]44:M0gMQsRXmN8qJ,@:#3Klpa2Qu\-&o=aGCO9pX3ARR%
%)\euVXMJ[qg+G=c:U1k<2E8<YfD`:mAN/LoEnd'&2soL7gnrt<hF5"s+/e<@s!,$-okjQXBA[1^rs3m"2/`61[jRQIa:$@HDUPQ"
%Gs\8W@$B>^4F`<=h#UaKZWli\>Q<jXjSJ-4Ff+S-?bR)cmWR22<"R.<EQk9)`T3O2[i-I!89eB4,tTE'a"=d+_K*nM5NO+l+$8*0
%ni;LjZc;dLI.-;2S%='rqX.N=g*pJ+4oNXoNIK-D6g&*A/]K/iN$dUJH+s5Zk0GT6a$#G/HiD\5TYAksL&T?;/s`leY&@3I4ZKX9
%,BT')kPe?9]NsHRA#?10]n^\2m>u2BcO4T6p%b5`DZ4\Qo]l9UmicVPh7Btu]oTo*iu_fbJ,S?kqEf8qGUrL$qX!MEe*k$KA,EEQ
%l5M4_p>+rSElZVPI/@`$1Ar.=F+_BX/7dT9&57<fY?c+HcX*&Nk=hH*aA2-pP56^?3m#lW6OgFWdA?2`kX1U_6g'[`JC@7>5#^J$
%4R%!R'>56N>[>Q(-Mdjb];3JG/ObMi<@3G5ZKt;[qp_");q$NXj:`2rpY=U(L#ttX0=gQK&>Wt;6L-Z;EQ!;GBKUIaojL@f#FG8)
%FQIn5B-ZlVIUBO6_]cCbHB%&`2BE;on[3Tb\MOI::-%XB*7Nqsm,TY"UnShZh$9R?SqBBTS`iBiEpop+1jOL!rEi@nFdJjA*;Tg`
%:"GJqQ=R;bqb8rJ&A7_;Z]%*B=dF8h2I!T8K%%EkYmPp.\/O+BdqnHVUYU/`qJ>g1PL[G$k;La(kkhhBYM7k%XtO>m_BSUWGLO/R
%SC//0Q@+:#7X^9-4@nr7ma^$&%V>]d$@O:a:>FCE^>YU=\(C[_s73\1W)@u:-Y&RlAQRe(FBWOFdLoc38tXkP]5._:(3g#[T]=Z)
%?.H?j::c*=b%ePWSC)T]p+=Xs+70PD\b2Z=_o6sGeg]gkWZe=J2L0/50B#l^XED8j<)TLa/ibUKeLA[fL]2E>p5.VX"<^mkWQQM*
%%i6=pKuAE*`0uVVTt!8n@l(+C.!13laIm[WoK$E2KoQ0%r(cU!P7U[N,>Kg%0*@?4c+t`Yis"]5[#g'V93'P"q]L8qU'Xq/r8gE4
%%KBanP`%cX`BL$b`\aFucY?2r/q(QhfWR`i`&(KE&\oT+@`B3U4>>pPk>4Y%V@\E'2OA"S->$/Hf(VI?U<b]4_fRAsh?qZsUAYAf
%>j"`V`p&*FHIZleTWW-aWPnIbCEIS^LNBoq*2b5@Z%\Rc-LVpYbc!*Th$,.jH>G:pFj0)Z^ZN3LW"c6QSgcBKd&,BnN.&%SWMD2Z
%30^;>B"9J6W1sUPJLA`EDLIe2[P'hfiadiA)tQN3"7-3sURE(0s703<X37hhoqtU9clK\Mgh:P^bC'RA;]PY5GI>`[O.[uS.ETKa
%nU9a#L@u(pIZTH9L$Y>=<f\$oits.;\;Pd<)O+LQ%hl5?`c?bS_Fl.+1gTdC41gD1\%Zcja"4Q<.j<UpN%"O5+u(^R4^9%`^A!=k
%Au;uM\!((![9olDk&gPhR&GiY-=:82>>,TL>2k<_G;Qm1qoCh18Z'qU6C4\3C$:J-&]]_=mUC>uQ\'+q_'<QAmqe]9U#IdO;_ka&
%q?Cf@YBJ#SP\iGtk]W?qhga'A\dd3d5IHsAiE!a=>OH]4C3!QWEjANL:R/B8g[bm2KYE^]e1p)"Jf]j0AF<BqEoHZqoZW'(T;p>O
%lk;h"DirYd4J%A,/XKXsgk$nFbIQ`P?$RkV4764C;;SOKc>2J%o92&Yff$0l7O";A1%%Hu*F!@W[?d:=d,h4M9:\W3OV[fUc3Y.h
%Crc;KR]nhO,GD?_3Qe-qoHifB@@D9Z2sFoYBl9([L'I4)9d+5Ul5L]'B`#M(hHB%d2cNARp4)^HBGZc[e[]ST`Z&AgU!ZpR]As3H
%4p70u@de\/K-YVg:O7tG)q83JpGls6T?;/BTQG9&m&TZQ:(N17f3jqP5G_XuE(m>YEU^e[M8bq!m!<VT;A-fG$>hZ2\b\-o<_*"p
%BQg*B3QnKOHbSL#[3KH-I#X=;G58Q?%#9l8epdADIUD3>6]hSdAL]KQ`CHN$6?J_Y8!jVmf(DlF?U`_,NSQ(TNHNf?-EB>brAO-!
%1lut5=)R?)Xl"J2rpK7K;d)Q'l,bRNNh:a*o4MR*_;51Lbd_P7o-mAN)DnRf;JbX!b@dlBcVIl;XtC8E2V4GsRV?C$qRiT,i:9m^
%KDF_TRj7s`Kq;H:;UC>B[!iBKOeoZf08%sR'Vaf,FK82Q%nF/:R70LUp\Xs9:@=]=I+e-g\\/nQi[)c:eX+0.'5r^2hqi1>=>B%:
%g''G'L'\fq++\m8=W/O`0Yhh`8EH4rg^V6_#49ZYD-b,2#iWBL4]M..&[Ad=2u]%p#\aad/lh0noWBqKTUTW#roWE"hcX6U=1'sj
%[LW%-F]DRKkW?$0aL<<F$,/=Z^@#72HEfud=XAl"eW/J;fWRG#0s:U4[A^1?CCsQK2-l)K7dCjqWP[A31$O#DMmmI:;=>8B6KG!0
%D:n_k^9:,l?K>isH@1hUkPe7#G3Ls,2'6$BpR<N?c?*FgF-B0IS`ok2VW4;D1cn^8Zd@g=re%?.?/&auXG_AX0lJNQC#,&@a0QOh
%&m`R%n;(jh/[<Vghg0i",eKj2Nn%qCUClX>cH!N;:&L8YH1)@t>2OTEgpLo7IF+NdFlBJ8Y6m*`,fVjmO]%=:l7;*X>mfkpW3Ym6
%dm_oME[2Zd,lMS`G$V21LL)Q<e>.KpmeVs9IBr0O*K:jb7jF//:\01MMC_pV*8iOTG?gM@.C36iiT:f)(l+k^AP$22NkStF7XV5+
%N]-@cfmX@@j<2d;0\'fg]f/]0`D`%k;CmgR9F8pRkTIB=jM5:AZ=t@hPl1\r+a_u0h?I%l=jn&9`%mFH^!!Xhm]6:pf3Pk)/:f]:
%Cc=Pri/04)nqo^@AsJM>oV&E]0^!T(g_)]jAh?uOac3Fl`oH/rV#Jj5l3Ejo-o+PND$IMqJbkh!J#ot1@d\[1"P>4rZQX=UG=-s.
%WIQosQ='K3kupBF4&8b%\E2NP+d@.Jf>TdXjTG4:T7+$:B-$5e.5PHZe+M^N^"R'sn$eLAX?P4WeR9PI.iG])aA69t$M<<;mB+,h
%"Js/N8.;CACcu21")gdNCD]U:Y-\;q1"&$B:F?@OH:7,CWQsh"=[Z/#!a%cZ[`M"q:Qi?UelPG#,[LKU;,_)!l8sIfaf\ts$)'t9
%*4]32"jhH.*d@@>P*KS.q*J6g17\$FmkZZ.jPIA\FF'#Id_DCQoB+6^e!&NKVQ`pom)c%k!o)5X]\'1"j>nZd0H&chGfDYAm4k*k
%r,^r[ph:I%]W?ZZ:L@:/A3OYJeNl3e;<W$8MS->gZ+"%K+$@iTr_T7*RJ_O1PTKSsGT<>mK5s)L'Jb1%8,ROf^%LqkG+3+FcDAbb
%k[Jp(H`bI\pn)p"U8KU;a3,:&DV"R;FLQVB]lp`I[_CE[=_ouOFY5W-#0#HQZJ!7K.!9rrJ[3p;F>GMXfET=O\sk;6fMpCT.K2iP
%Oo.Ar=RQlW?MSMHT>0[kr=ork.)1@]ql;*rY?jD"rTWD6jN#a8eQ:AK:9Qm/diVZhf;"Q$o<TN!UJ`03CEM[$X0?nio6BpE1.Zf,
%q/!h!HQ1-eh"9<%2O`eeqAWf?j5g,t0DtM.e^N\#J*&Xq51eE`Y57Fh0@'1.]1:1CY+K$kS?F!9IXg)OG^?L<dlMLgI5SLHq9@Ug
%5Pij$XWGY0oS$L%_0];0D1eK-gDn4G^o73ZV4q&jI&6idcLUc<_&:P:XQf-Xnk6[f\d>u[dpR?2S!%Eb;t,;7s3n,lo8__k@miDK
%^E36$.%[/k@#=kY^A]1g4W?G1Hp7&a4Uul:H%#Md1P&Qo/:64gs1\2>j1f<l;nmfGs50/E5@*7bkGVZm?*:&NrPo_(B]8`9rVccp
%D"[Urqf1TuVg_)5j4#.Lr()dRS5dFP]['C!/m%rVP;tD`F*Zn,gL'j?k2bdahu:#h^@pXKjk8,%Vlm6&Iero-4FWfMFY+--Ve9iL
%XF8A)b1*M1QXmO84L'd]a]b`@5?[r2es9lfooE$$fBVt2:TeWENpFg_l/f61bf/ngJ/4G<n@K*;f(IG/m6,st0TN:gT=m:t\SVVq
%Qg\T\r;Z,sBj2N<dQdZBT'Mj6?pd7'"K/Z7Us@7$63;^'aM&O%QEZb/k%l^MTDb`r8_pL,#*PCEqp*FQRHp@FKj%-K<4bcTl[K.\
%Kk7aDCG5\<5$?VHf-SgaM,7^j1_QVoY5c:;Njs04T:Ilt@spqc3<Yc%MWmncIR<[&ZL\E+:Hq6O@Z\$U)?&/cepl#7kaTOUg9!/)
%`r@bull=<`QX6c\Sos,ZT</^s*\m*qoDXTj>8r]8QMhRC_[R2*A-+\b_oP5+K3\'X^(!%aN4'&mi11l5hYg+=mdJko^RKG*Vr*q]
%*[b0qpIC,8Lj+o)pJmRo5JXlGa*R5^QRVpM8s_Ng]/fm(.=[cGqgKmB=X)#lh@]5UV0VegTm*Q.j(GNEgN46t8%e_+j4un_?>+6\
%/)`=c<6@3?%]U.Bo0EiU,NJC\a\pE[8F;KmOs$2)6ka;P9o+o?plCaBhl4Bj4*n`!H2m'0l,T1#m6"TtZ!dU;LPmD>4]8p_9_YG7
%h?l:.E0_?W_E&>3G;qTE?76TH\]7o(Te)_m6475H8FmlWmjjg8]A<9mEIHm'f7i*Pb^7:@8'LiXHFuaSP7d9_>BtE?rG*uHDD%K]
%<d=B$_=?beah%X4$CN=([0(7tVj4hm4&.;C31H_6C?hTe,u^ZC+o]Z,\5#Q#J+XEqJ)/j@I,8)\3UVmFcbJH6_8U.A]-ai%ZGJ"!
%rFl,kVSm%j9=5E!![@#.?fpj?,DXTpVtg*`gLK=6)9JG-RJ)j%2d``VDJt?aXV'#'faK+&q_M.j;j=EDbSP+QVna^7431!`gZVb(
%is075H=SUd\Fu1mqs!XrZ08i,FN8;i>^ODs7pLE%l1pAbXT+kLr>>!0?'nuJp[\$MJ$_]hee.?lna<$f]16b!&_"F\l)nTIX?9]J
%rH%u*-n0/SF@T#KUbMi3&_;HXRXU3>YBO@+orZMHc0'EuhEBlS,MrA4H+-U>>KcgE8u8&&W)G.XMqY#Q8WGP&9*IbPWY*i(EUBg:
%p;WSeK@e,6]]bF3*$_ULin@IBmRK%S7I$sebVh9T6ujW["Hg\lM\PXA2QT:>(R/n[157(FaO:ai*qAYKH2#n4?[m7JjQQ,7B>hDP
%]R.T/J#:4KinYj9rHIi#=51LiZ.b_;5(,0Fh':c>inZgTTl3o:E5]Eh:?MN?j\i_F?Th`q3XSfGR.lD^s%K=^P,)7'0@QfHnbou9
%iGHmZB4L*SGGZp_Th5#jltge4I`/Xtk1Xb(7f)N9Cq6l3\jJ:5g*<d!1V*4Xdd2H8n,BIaq7CqHcGJS\`mW>LSW1>O\9FP`WABog
%`f_pp?G+c90#_HYCSWP1Fh#KZ;k4&oj8\MUn+XcCCA6K&oW]>ATofm)$)+!UpE?g$'TTKMdKpoa<#ChqX.@+q9'%[rM^.V)EfQsB
%0.hm,#n(3\q7((fj7VigW8@?+H&n?e:\FUDDW-Ydp><`p^Ga@.c%W<8rTQdVHc3<^>^LRVF2W2#G,G06esiL)R:WMJD4hKi*AQBB
%l/ro>j;d^X^QWj`/\RbUA*`s4_9U+l4lY9BhYf6UpZNseLhm#R>l1lihgb@lY]KYgoT8X"CQH"!cfEe`Wg%"IM3`aW`GHgXRr0L-
%,B=iNSsl&/[t2t)HHV+gIin.Y[as8[h4<GJYr4'G46#'@hYgAupF%oh^Qj$C&ug`DZhBl,V_;*E(.Pr``4JOPHc3Pro*F[^.e!A]
%lL+RgFtQXm,MrB;]S2ZKBu43$e0Y*#Ss>&:\TDSLK\t(?,395<J'GPUQ8*[tmJiUX(qkb!T?Xrs$(&bPVgmnulGpZ?d2i.Ig-&oV
%5?$r=IYhY)Fs`4/#Adrun,m^9rCcn(eU.-Y/"u<#i?!"+/%PBBlc\0lc+Zc@NZNE^EU=@irjg=;;35h:]DkX_]sY*7[&`(@T8q>$
%8%a2e]76!5A'OIc_RRSb8%eV`ji-^qr[R:0O/'2P`R3IZDgr_F*CoI@`/]>E.Qtr&r\%d:^Pig(kM]K"gHRZdq_ib=B>h2J>l,lu
%d1,*OcLU?mCQ77#[#s&YJk@h+s%2>/lS;a6iI<*74_!971%2$YSNecEr]2V-rsJ5n+f=qIV_^)Z9GLTU;Z-PX!?0\CB)(7T9r1<9
%XObnD.An(^,h^5ll2LtZq4H08PtJC`"&=erRX[kfP:::s-9.ck+IEZk&t=(E1HbL5@.)crJiD#9qB)mlV-5tLR,WcPX"u70='3^8
%VL>FDc)I.7+uHAF^WLWN?'h]se1Ri"H@9rsqn.0Z1Y_<g*.&)d!W)`,F0aZ!%h;A.AnD*lY.]$uZJI]Yp\SgBOS.u_RJGq@%I0Y=
%ml#aBO&M!k2h(jTeNa!'+7$%;R$rE9J'`,sJ,XnU24<`#!0fW*Z:l_,*ho;LDRH`+=5.EW'LO.CLs_\k93(JUU@m:7d8B*$iWCE"
%lH2jP9p`HYp.<Xe'b4reS-b;26l0Vjg<]fP/=S_1D-dl3/sR_EN7uSuSX%9Y<m]oq".03e[tNF&m8od(m?<"*pd>scZ"fWYb]&R!
%9Nl$VKEj9RV6Ba]pt6IG5Oq.PT=0$KpI1ro9D;FeS%GlQ&rhb/["^,q0$SVDOid*=N,r]<O&"bY2MB[46cW)-l<$+4=IEhED3bK7
%B4aj"\R:R+NmVE`6r"J<X`d:?V>FCnkn9U]TfJ."A6]1ho\;js<8`/+j4(9$]&`ON?"0+Or_7efd57,3.>1^=iKXT44%#<hYFll`
%4s[Et<7+j+q-h-]pX?46TM?Zr\-F=6b<fj\3tA?>F+R!O6K-38n>@+SWn_[YCmr*A6/j0a`rtXhf*35Y9CQ7Y?1!O]VGb/2ZmF9F
%Z:+Jek!`3bN]:/WM$;`!"Dc794en_rDN"o1b^=DE]Jmd)-meREY08*5QRf#XPdc5Sj4o'`bB%39@[3iqi/-@1:kUnp8kRj5I82AO
%=6G#%j>8d3PT,`29(I$A`(:Rhr$J4'L#+*N*mnq[7*a(h;&o=t!/#!2:<9qC6%BViPDLYJOmctg:f#`;-`)`D$5)r"gW:3M;6f5$
%XCT'b#i#V9_'!k;5Fe@8_&4#f/Qj$4>N8MAV,QRQ%l"Npch$"XZ/KXid_%7#Bc+1?Z92]Yf#P4..ZFbYO0Rd[T4n*#3KeVV6=E@/
%PoDu)T1b7Z]1Nf>lVSg%T9(0,]ZgpdHLO;i=q"W*cd,G>Rb+S2kqS*o4VTg9NRQT3>+qNJoq%c`jZC`5"Wn-A'9OOP%B!H8LsB(j
%qN=15j-e7`80$NA0)6nfXYZ$[%n;.l9:LS@QFj1RXa+s*;S?M1#j(jtS\E%WeQ)+;SH#F7Z\gPOF'^G?H00o_d6niUb0iS!]Q-=`
%mkPofKV_7-H#l4=N0^no+)B1HmK,#E\LSk:IsQsLnDfS$e]#&jZRg?[b`S=4N&7jd0_gGMb*p*a$JFC+1%I0lLW9bLTm0q?-mbYt
%:1n8U;%i>07RGrR^RT+6L7ds&.H3*0BufB]_AhmB07Q]cat$)@K)Ge<`[..mmj[+7)"!mN"o]W(L!k@-D8]Crn@,@75G)X&_El>m
%K&i(HfE'6iHp0?PF'o(qkHN8blIZ_(q#3)`OARppbpHooi^afs0PlmD>WhZE0Om<"-B56E4;Q!NUWq_GNFkZmM#uh&Ka9C.K)s@e
%EK":e&of0\80u#N,1W:`A\pZ$?o8rrVYSH@hNs]pg@LusN^Va1_.a]:\=>*32H$l#9!),fk"\3,A0GFcDgsCS<%bP1po2=f(1.Zs
%<2?"f$:.#!T7)mT9YH=J!#nc9KNB9Q0sGpG?If-$-&$Nd10%F;m7b-b#q'3CW'\pe1J:4i_K#i[GT<%u-I/4P4=r#&b_KmK"jbg\
%TinL\q2@akm#j,.Pr`Ls/*>CX@@Q#+Vo5Y)[q]4aO0ndh2l.2!LJpAqQg=Knj%;7'SYMb0_HF'lAKPL,8dA1WCR^*/?MT#sd!pML
%7j@f$4V,8<ER\Z7AC1"U/9>.mWXR[MGtfD1(J3S2m*."7e@/h;cgI.j,Se0(FHpA\%<=6>OI*@'%F%@ON]Ij')6"ctmoMT77SBB5
%7PbGW;]^;gCC%LEGaLF3-8@;ceUsFkO?r#_3gas;!U3=+N9PgCBMBtop`rAHWrnbk63_n[Gs-sZJuU&,K+%k$r6$MR`ntnQSopoj
%:*LdCih'J(K]8/H];;@J0WE23?)^Kp$K6$qiX>3!0Sd_^2Y]Z'f^aTJKjZ-CS6=$m$gk*LhUfR90@jNAijXZM"TM7d2o*2E-tPdi
%L4gM0LeQH__[juX'@QTfQB=s\n;"Ypa\8'20)Be6+eW^lKg_*/b^rfoK_)K4kV]74V^gJ"2(13n_fnr!&dq$3,LGA*0V?tT%saeu
%Md]XnCrsP->7@ie5mq-;/&Fq:3+9cj3P?],eI4tOqKHXa3Lql@,pPHJL4:m4SD5ZfdGPOh_ND()"lbiE)+`J\9mB-ae:on1rrHC.
%!E8r8@99`mUp8D@n'L+k>j8LBr%b+L-?eDHo,l:SK?&cIQMZ&1%XS)2q^QX1TD&omelOqiL5mets2WAKO1.2@kj&2C_-XSMkg+G,
%n3TgoSb;k#\3),$44IlFo>agDZ$^S<"suOEfktt;qbqcq1lFtMQV8t^I%f"M4)U\_(Rfb=mIef7Er\=EpbhV)1>pFBb4EnRg](<,
%qk!Yc:&]-[F@+n'r9Lg=4>1[L?2m#I^(WPt)W(7bH(;@W4ko?^s4)+Lg\p7E/`L[ik-nssTXfL#hJDq5s)UR+%up46/%SrnC@*)_
%m<%)1Tp;S4?7$;bFOL3\[-2%^WhQ)RI@@tF=W`j<jo9Mi?X)$N?5*<M;"ft=f$@Q)FlJSu-b[iZn(uk.k#5Cbrm8:KgWu>"r2JFK
%c>L]-nN'mMC3GWPJ#0pN3ig#%7]CkVl"hH3lk"3UpY_6+N/7HnA+#[OC-9=@oQ/G@\S18nKcYA?L[CX>FHQC[rmsa)a19JKMU<M.
%Ma&aMHFprlc,-o5FO9mQP-hlrc-BJ$eXf."aY+iQMo;b+-beC["oEP@^"Zo[*fr/TMphP!Bb&go/B\t(O0.6pBK%SKoR?[FDuU&"
%b5\`Ck*$ai^_rR8@-3_)r8ST!g`OGc'm;4AEa=1oU?hYskdj1EpIei'Y29b5qYS%kg;;Wo#m!f,l2R4MrZ;l&(Cui1>U2^$&I.LH
%rTnQ*H[J4gZqmoG0@$"V#Q6l&/+)6J8"lnVMmah/mJ=iiDQV[[p"S;jhqG2]Vd%nn*]6_sq=IROjC`GFh<gcA3N[D&Ha**e"714$
%O+'*U,3=gh0[TmFPQ!k-k0r[&h((lnV:/#0)oN./RQR*GIXH<\P^Am+;%J=FqJ3XT`ADCJoBc+Vg[=`L*!N=DrRUD._OWQ[EK$.5
%dD9P!eU\OpO'9$+7jIZ/p]SLA]>(ahSU?CQ-(A.acfe06(]QJ^FSkR&bk?AMId^G:cQP9-#O@oQNt+q=[=8"6X-So-m;\$LYZ6M5
%H9QP_#]#>[#;hhN:f'03S9.0$nFMbWG'7%nBqF[^2>>h4p!2gTC#6O#:)+l4?d(H)IV\X8&,s/-G?$ZHB)Cd`ZVR3sFBZp6R!_&7
%0UrXgX_HF2GBon12ZESHTGg2\"IYJ6dSYc0^de4nlj-!ZY292(m\nsuH.b3+(%KN5+6QbbMZ5;$eB-%+Vk*g7kGZj8V#rog"$T`f
%rT>,beP;U3[%k<ej0KuUn2iQu<blmUgRVr#LT$QZ)*.s3=ZjX5>u2kdJ(i]2)5NW@/Ri[>a3EK"!)''V]7\@a$fhG(F7HJUHI+)7
%BQgpEHe.Z82OH"[P[`'?V&(bj-KpQR'2><hmc(+L[TtNab&6r5eaWKF'XaGEf+**Ig5S"5gL`+^jfK%haKh^"8Nh9Tj)X7GbLMHV
%fM&YWD>3`3A2-g.2VL!]Z\U`H>\&L!)7AdSRjYnu-4.$0T/>AV*MU2U6`ur"N&d/&-G=TR5:$_C1%!*WX6lI1ZfC7&+!Wd"N#+W0
%\/o^uIP(+'h8KfFgue^D5F3<`P87=lLUS7=^"_4'3,7&S7Q,IPpG9EA^V&p]"mTlYZ^7lIlh/6'D#NVRkPEp<&(JJ`[3sY`a3Er+
%qfA7=X5b_qmdkb<q`:]PkU.=1m]8S:B*XK!5Q'WohOa+!Slf/VrTgZ%lLh,0$haA@)e8R;jO5jKetjmTCO_WLULEHY;>8&8THC=Z
%na"A$qf2(\I^oB/r\`i(jrUpsr/;urd3*l0lJo?&qVfF'rcRa(C\]E.^!"19.<kM0IU2Q)?bU=3_65HiFk46&Vt@mf(coDjldii=
%dSEg9n`rgdB'Dcpp(mUI'<T84QED;n=7jtDkP0FErh0#V2LabeV@/BCR3);\,P\I'kM+g2piQtZc7FEin8/e&2!J@M3[a[2]DS^:
%9h'1[l#GD7nbhgqqgY#Xk&c)mqdhPVptim@CdY<e]W(%2c`GI,r78LZG]E/K,^`C:>hm&:kP`9cN@3<oSt2iVN&AVQU@*:3VJ!s8
%qf6+JXic?5n*_N/?AXZVrgGg[epV)Qdt9gTEouaN\QGJl]=i^l?om0YqAfOoNQ)`Om=m4*H2,YeUVC.$&pD:8JEuIG%)h<3InEAI
%na$q*%hJ6N@s>.GCS0iEb8]Pr/JHCaMp7#PI<aT[965%/D9Qna4IhdC]KNEC7[&hFDkEmC*ZX$DSERVr\MX&sI$m(/ZZGH[\$lT`
%&Ohu@Y(>HVF+f.9M8O8<a.9oMa7gW.Y8Qr5okOKarf]FmMlSAfdC4l_42&/pppj8Rc<>_rFo1[mZhj<HIb+cTSNOSA]6W_iao'!3
%%Uu.*pqqa(6G*!=0#$(g4SS'bo<3qYTC#BhHi.2d%ErJXmW.d<g>[9rlYQ:Jg[SS'c`bf=1YI]\$d1WT2lO@!UIRghmO5c_D=-`I
%Y+"adQGrK)p(7O@m);mAH_iO1GuigpSm.Gk9=(?S1];"d`qHL'BoFY1c?rFrF/u>P"ueI,k[.$-J(;T;`(YUWG3cY%[e&Qq]tWu>
%'Cg8/lh-$/qj?VMfW_?E+33YFcej,Nhn50/A7G;F923:fSc"<$`ZJ!">k45,4``IYW&M-In>@-8H$uDN2Y$<4IJh[5oD1=)]j8Bj
%knHqK?V>AGDVRgLlB;a>hUeY@2`p]%cgE^VdkA`'lF1)JH<$U5YkYW_fUeM2hqgH)?Vc^6?dqNj[d.\@J$#m![S/iT\G*@JDN0.G
%>Of7.GE5d)4aX9&eF.5(5Lo52>1f_KrJB.7rntWA[JIdBp\3s6:;h7&m`s(2qY^6\ch586m^;oOol#oV:Tg==W%Y?FNn9oJSB]Vd
%Rb'dUT0Jj;Wio3cjnao&fn9.`nuAj2-#^6WYKjkBe_bId/_8g-^;#_;5.oRSohR6$51I?[9Q/Ij?YsW1GM\irX7,I==K1b5Rf3*A
%7.R.&I-9n+H=s@b<<(NqrN4qk-(g.HQ^_Vtj/6t!@hWqD'4[7'DmmZ_k8u$\1VN*]`fem7h(^3VO(judo]r'GA+'/Pag&I%:-OV"
%\C%rJp8Il^gXuH'`obq6:XA[co#KjeZ'>hqf#H9a<qY+bd>O3nXo>Af@rE%Gkelc7f\#B3qWG-N@iB[fm]mfofV/k9a%np[SZ]S9
%%+DtrA]DbK]@Y%MoY^XtWIsTij"m1eagb/ch0:uSVT0_A:uh;agta!#[.3hFpqlX#CZA2KPK2]6Y7L)_YCCeja'X;/5;W:^I-S`H
%a6[na]XcncNjna@O2o#XB4#A?nWSt.rUJa_m,#.T[>2BGDVU]<]/KV%C&_@WpY"/6Bmo=B>5$qH[qcMGS^t!h08LS!SuC>1CTGpf
%dq]o3HM=VVDVSC+p>P_GokVf6j6s2=Y!1UTG5.nXG3uZOe@8i"HZl$9\N]QGq9&BpZPt!hMs&?Kl_Zm.IJr$oM$MYqP24CK9D^C9
%YHL.%5BVD'2BH.R44\n&rR90Q\*H+_&'X^MT>.I75M^/s:XjTWHK)s'cARP!`:<)F[UXM/m];?@'9<W8-Y\s)-1gET`9Ni0PDPV>
%\*d&)Ha0q@d7b&B`*PNR5B4!u\hS1_1\LUa7.9fmNLBM-2`LB0O,Y*&?ekU!A+!JihcO4>gps]hiPEDNY7DsUDgXV#?bN^[hG2rf
%?<R8TUOW(&+h6Kj#P[PJNSWsGUrgiOanoFNIrb)Lh)COu`$6X:Snq.qIe_9+:$t,,?(!gD9?^prmb-7BNOa4JlLt/JqNP8gGqep\
%;m.p`oPL9\[GEmuR<nIHrq4d-:Arkq_1S'kB'S-595e-DpbmQ,1%B_jVYRakmH2;6qXEV\Ffg)``C-VLo51E(l/q\:o>AhjK9,J>
%p,eo(:JX^PI@QV+o6L3#PHjN>KeLR9o^c8p8(4YChfPccA%h3W?WUNC\j*W3Bp`+gT?$,4aiDTNDr$oI]YCl,H[KdJXjnB*p%IFW
%]%-YO(2k43+24<a4*c*21NWN2oSgI>1HRDir7gP*B1KS)R9/VX2=oqIld_E@`lA#%g"s?:0g58[[:(DjNuF)Q:GGQ'frN6HNE7Y)
%Xu2Zo[[o=9St6qX*dapTh4E<PfY6`r`m`]6B2:_I?G"Zf\)2$crH+OM0tmO&rR5pF3B;F>;-W(9ahtL]3-j4b+&?51/\Fie?`5eA
%Tn12UjiJ5U7Yp5+\&J<jWI;&,9NK,5a%ETgju_S`andN5rS,/iPkT)ib6OTW,Pc0Tdp)Y1An+F#Zo>,b[PE;!9eC1Q.&3]SW;6)/
%Q<Lb=:Y!MPg*?95A^BVGf4t[%UMoniVtL"8G!\EA4$BIugq;4imC1\n\u2_(dcnZ=rA8k<a3pg[q<R:rmBrq#27&XFheq8Wk2sq!
%LW50(:X%k0gRI?e`o^p?I5H4[^1D41m*-'pfPG<c0dPQ&Ve9r7WsA4BmW:NLD/TZrAp*LK]D(C.WI$NfVqnriGFuL"B90c=j(j]d
%-JQktZakooVqI!IrHm4ap,+o,mbY'-2\4cZ\9$j'=In*r_kfG5g\[mm%US"!TOI7pHZmoLX65fjhd'?odC]9riT&):S_$YUh!I%a
%fCtHMnat\5q6(%tf(WClpR:Nfe@fe4n%RSLH2)R^re$\%;tlnCpKRAV^Uj.*roqm24h.olXS^rT_Y2"Tc_'#uIdm0h.S/L6l+uW&
%_jQqg_hSboG<\8r4'c!=fR/'^iF2JfR6A-p[WMDoXAq2#D,+E@5MA+]4IrU(qKP!#RdUc!(O+a(c+`%]]fZ,a7WX(I`kB9nF4lJX
%j1/g#8U'UOgsYuQBt#ro_ot'2hc03REok.8B#"@fIWp/'e\\^QB0-KEm<NX/kusjenF?2Nm)&"Re]l(f'+YQgkM4=]`N9[Dfu8T5
%a)<'WGl>&Eq!RPJm.']@iR[&V[=3%nIV7sF;EEi%/M0a]a"U..YI@Q!^.hCGT-W*rq'QR9h8:UYp(nf53PKdG[s[N'ZNn[[;c@%i
%\)+UVQbR-*h5=1ao(g`>mIBG=RkOM#52C_=Idh/om="HVrHFl?4X4_i,Na9u?^Z#l[k%2;9B;JBCu1Pm\[)8#rR]RK;1H"Mi*^GO
%p#XbU>l?^-\,Ld/md36222gpq^J;hA5<lmV@:?:CqY9L4_P]f)]cT>J[J"J-nA`&pDiV"S5Q#K/rji'.s.]L4p[!T\g_kIDQ;(\`
%@:&:qS#MChgZuu$6hSuI]Q1J'DB(muHFeC64gDE*FF.MEo@)FCl-&qULZt/njhlEufC)D9^"hrBDK"?I]c,dsHiNHXf"90s0=JGF
%miK285M[-Z<qd];^=o,[r;(_SDH#"<Y@mTQ[pHgjf>h3AG98BM0i'u^IBtgpH2#S?iG.]GoTs@emD?oGmC+1p9D>UG4P5(+B7K%%
%]9g"pFP\#k:9D/F]=j^&T;fM"mrps45PQpT^K(:fJ,S<]LC`.;%mJQ/2C<+)O*@5Rg&AMS@WUX@kN.j)Umkuodou_+m\^/6F6dmW
%CMWJ3nt`L^>As55^J*nRZS1ntipb-hp\e.ag@Frmk/0]m?8pb)>2O.f/[)qA^:UYa^AVg0ebXI`k4V9f4n$.[@9T-`n\3P![bTXm
%\+[Q(]P&VIS`<f?VqUu]P.'!2^RK!\c/7@0<DU?:G1U'83SQ^PIAHS$<6KW(RhMFg%XXcC^3Xd>GCTSbnZ2V`_f#36J!dfon7(_/
%qh(*q.o8pSRe>8&f?FiTa'VX:QL>o-'1Y->Y81a;@INMroB>&j$[;7:9XKl$hAea>IWTN"q"U&#r:K'iA9R!DnV6gXd^l")n(b4.
%Icor/ot%KErSZP39\.3Zf/GpD3UKMlT@,FNgm891\(AgJZ#3i)g>,8YO0?-eDq_&EeFhYas#he./]0-o"\siR\pZJ4R]!@`l*%.Y
%hoGftghZB;S)/F7LJ4E`&,p5aXgbpSm8e^m[q`^-5Acu+rp&-cP$Zl$O*`7l#:n&*Il@'RQ5@i-]@m+a]m=kO5<(f@kO$PT:^?N2
%g?e98gh<D9r4V_7'n7=tK;8B!n(\I57DAWQA\?qZG'/5ln`Q7pk36U=3kCu\n1>02=.A$`h>iE;g1mu@'XJl9G;!7Mm8CFh-]1I1
%"]&oYG&["8P@59l>dGBsQ?OAZCL"GFo@=A=?M6\!eCS]Ypp0,eYL:V8*VLL\D7'%HKO2=rmlS7rk=ahbP:u[b]loBI=R5FbCHF]n
%\^kQjOhKMMrP%/QWV)^Q;Ymo3HusHg`S^3>nP6R5B><-;+(odYgN7*E*Z(Ek7W#3H*RhcMrjteCIs0+PVapAnkG6\c3P]!H)SXZ`
%'H9%ln_`l`@F/49)S#"hK^_h(GL03f>s%9!-adRRW9M(o'7NlSkbEcrpDN\M>5O]Vo#X51GHc9hG32:)it:"kB\&a1E^C#Eg=aRk
%8e3a&TAm(26p8#j#H.Mm4CHgu>TKHIoU%2V>^YCBF@pMKjGJ$LP*Qc,+trrt!tBWs_7Y$[S,MKk%PbWtfDb9M*#%KsW.^-uEnLKH
%4PM42I,$aHDdYN="&6GbTm4.r$ba:meQNHchF8QC;r687*8m/p[.^f9%>cWBf[`Q$%SdMKRl;I#F8<1gTl`VHk-W*m5fCY-,gj,L
%ZMT'kpM??&iHHG.<20.DEku+rcBk(f)1B>`,kf)+@(eqOi6UjP@Q9_!If&7+g%"c-oAHSA?)rd9W\3@ABgGA1lh:%QKD+b&+=#li
%[A^g]Y^p#LUSE!J@(aYuQH*m<0buqLSSt+r0^_4Ep.[3mKC=^Dn`SfO`Qio06YCLdLIBG(mQnJ^*V@-pJNj%Wk5nUr_H]QOCV.2d
%6/Bg@;>'CKmU:4_oVH>/m@8:@[4WQM3L\dlr7:k67ZFgBn(I!Z<k#Ekm&r8GC_o.\O,\DG3P.>)5g&`2C#L%\^5!I8`BWSlP9`0t
%;)!!OL;,CGGW?KL#at;3e>p;(Y4#[CrhHY`p.i9U9Bi[g:E/'&ABOUtSbh2"TIXUEKp07qL3ncc9n2mlgoK,dAMj!sn:HN]I[TJ"
%m_KENrV,Io?+B+&d,gH,nbsVmL;V(Z<]_rtgB/hagu5t?p?]Y+^O,R+3;YYY=jiOpHMp=6F&o5@GD!H@Hu`?,Q,Qpkc4bO7A8QK-
%Ck3JVbMh,PPr>*H-MO^fp1n<Q!@^dd`hhH#mII=b1+i5Q;_HG*GBe)<9ulhoMK[f6jBrq5]M*RE.4_LEUSB@&GtM9\cge"FRfhN1
%]1&G3C8X5^Cd[I"B[9@hEIG/O$hJNWk3YSt2/"jpCWiL_m-J+D??If0*"<c8l6VC2Bj0C*g5n[@e2hK_YUIbLaW:eF/MGDE*fQML
%%<7M:GYH3?dsfCS:o!&+ZYXkV6u9P+oAl]gR6eZKG0`oe5L.=L3,P0jXsm;-cKWX-e[+nW!3b[eGNDr/bNp0_!Ub<&W2(d'"QF\m
%E_71D6[qH#s)Lhf)YWloF?80i94gr$N^Sf-lFa_:>")#s_\Pd;[Q-G6o"e)THd2Q+DjMW2>.)FVkPKB<2VL=Y2gT#g?UeA"HcLo$
%mDt&BPaK'ENF&Z.d^r11`b7G(a-CbhiPY>G)O6XG,/sENOuA\*5IR]5n/_4$D]Z;*q&NP77DfQ\L=:%8Ed-Wf0(V^>BpL[<7:!pB
%%u(]#[0[>[bLV$iD-VYH(4+t6_97f8f"#?ugao&n`=hFr$F^*+e`lK:fXeFe^.XZ#S<Ge_WGVZ<>NjLDk[)'c0[D8Z*1C-S_#1@,
%*aS&.#)?[J[NE$nL\:oiiD%6cJ%sgQUaboep'DA*00Or!O0.G,&'L:%ETon]ctIcmEAgu2I+QX%!dFF^^$V5gVo,"t6E^@W8G/%i
%nHBk-r>mglMp3>i9F=8>g"gM8p"F]Xj&34Q^H.,@+('/o#W"/9/aS5\n+Wd?'>0u\1&%Hd4c#^,6*]=],48@rp8Z)Wrd<GUm?ELW
%"\4G_^]u47EkVVdgK2?g\G6-,%s7ma%IJ:nf_\apTO/8bE+>I8m@NY<_O3aB4t(ib(PT3*/[98n^G3q0N_TC7N-1mn_H61Gn`9[8
%s)JE=H;D.;THd`f4F^aErC_i'UrN*os1!?#DD-`!PersD%QBTb**9/60+ti$Y_:>2pEF>(@>D`8'D;W1cd2L:?0LsB)Q0Jp&D'F7
%BY("EO)[R)h,R+[Jr)`u-uM7dqr2_Tf5^ggIjAVFPSIB\Pmd1WUhk;gDKe'PfY$3;H6(rE"eNK(,ot%TrD**jX0nJ?p/fD.s'&o_
%(fu0=^PB[8_fD+JKVb5_H?&^2Flm.mf'hm(_?':lbP0I\J%2gm2K'\L$RurbJq:W;5JV*E?Yc8"pkrtO4hhg0%lQ)O*J\h0E6ui7
%#Mhkg5o3n0oSpQaq=Z?-9:`,NNo+oY"asX!Q)/L+.(!@H2KqE^]Qt[Cq=+hMln>nkj?^9.GN+>2?A=d2L2unSg!B<G=5SQ6&RVM!
%l')uBO_k(u%"o[-)`m08M+[aX<'e-V3bh2JqI`dGNT2k0(iik(dq1I:"[m@mUm;(nZMi+!9PtNu`8*+,@olFXd6pMBG0,)HH(fDZ
%<r'NQS`DSTYuP<k@Ci(.MN],EGk4"o14+>h1CE%>-A'Jm/!RFINrSp9ZJ\%U?E&JRrVf1e*-H9&3::>O6Au<S-CY6ama/uHRjWPQ
%ECD"c=7A>tIe0ppkKXa8PbWC\/grR/<C&@)0(7S`8"#t+%giisjRUE2ACg)U$l48rJUO7W+KOGGS`IDtS*tI`7/F+*^GqZ!'M:a5
%fV%hWf"5unr_%<*IV9-Ii7T#^]R4`"1\&Fe'+XSS`m1Dds4CeqIj:sA<W<\p^Ak8!B`HePjBjp0M+SYM_/J&S(>`AK[on3JMB4G<
%lqPcF#:k*/[!j%K08&A"#+@`4SOdtN*Tm$,[s?c@i6PDP\.TPTA/8H&]fD<m$YJ#/\P[c3@bRpPHmcZ=D8297T9Xf8Tkl,ZDR@KD
%oQ$a9ntP-t<rr=e*\OQ@$^3Jh`_(>Bq?4'BO^nojdOIoRd6IZi>XKb`Jm$T6<e)Hq+b[0J`&Q/k`jf4<TDo`2>'*dHe#_M]G."u0
%ULce2WGCTH$;`7EE<2p(AEFeu&2@,j6_c(N%2"0^WDJZ=TFO,Ncsh.Z+9`+,i31+/C?qMlaD-o;[5Y:7(N8k>HF\B/jSo-S+]&MJ
%V_eY=)ChT$Jpe2fH8dm:Y#M'I1M7,S7Nkb6Fc%i*deQtDoc4a!%0]42d7S:oq<89T2RJ_$%OW4@L+/EbTH^-_'f*Z_%+n1Q)D75\
%:bnOSPN`@+#9oBYZK2NJ)eT#VMsh.:0uP3g*p9Wthj.*lcqaI]ao[+l8f^8MWYdMte2E?o4/.eK*IoX]W:<Ob!Gt4!mSKuj1FN>O
%87"`^dhp"Z8b%[J>%qXgR5EL`7A_V$NaIY5+R7bPA8$]QiJ&5:1%ng;Gd0kd?tKS9PfCd@Tpg2L>/t\U1Mo_iVF$YG<!8-RN)llO
%D9+>UJebZs5I/^Z!6V'U>_-'K"!j<_jSVj*cu'611SRl]&W!]Ef8c)R)\TGT<9NE3"TL)OS%BY^Icsb2oU,-$l*R@]?tr+i8)9<f
%.[859,\.:R2QX:&GGjr7N_!^`O%fTWDNnlW[tN2rPbSm$OE<N7<oQ7HTkUQEVBQQeX)0(MiIJFH0eO%pfB9"8%HYn;QB*c.C4nJL
%Q.Q7=!B"qed:1QoiY3.o7ndV5*uLG;As<"o@3VZt.TUQ$PVt'K@D^#T'8%9>Du8Ql![HQ`'!VaWcN/mBKr98DV9,FJa?cJ4UtRk*
%d0;6_@GWC7+44h[]SN9g$+,GSUnbW"V:4F=6\lk^l"HQk",a4F(eX]nB:cNZ*/M7-?m9i="<4:]_@8A5QE5TFFuO5d$$EU5K=MVp
%XVNX,csX"gOGBY0erGS+'$c`I2X^#29'1mK#p\s'%^s.cTa?2mN$>sO;iV*cGbE5^3"Tr,baBH>H*W?ZB`eP)R2/BPOnEGpeT_0G
%U+m9#:,+\cC!gI9/1>CKq5KM'NlLW4j-_=?:MQW3H+!d4L'F_Ab_8+%3D,/6ci>5:"d!oc[knn\r@:/r(C1bT.Lg)XSrqHI;`n,+
%N5e6Nr`j+b%[]liN/g/[lCl!+eZg*j2/>;V=4nZ^X+Nd4Z9L1d,^"E@q;;iSV1VU&f7a=9TWJ8jJL;$SSd"=<B&QY#T2O?6U9>hT
%80jk6#SQaO!Z3M]:'p6a(BD9dFQ*LtQp';1&cD-s$9PD\Utrg&`oAS"0PO^\'PS=AKQ*)*2[`UgJ+Ef7@H0M[/V)4Ob=ri]*57VI
%X;L1L>O8.Z,TUH#r<PZV8lsh)5ZO9;6)_Z,:+"[dRA;Z9'!"e`Z#jAq<o$@s3+*FX'*>@ejCEh^2Pe-eiR$U>M0XIRH/[pVa$FGs
%@mM4eSQWT;2F'H(iW31"T6_s&4EVFe:BZO\."[au-[AGG2A$`+,79=$3<`!:63!"f"nNLSoq=]<=J3olW&3"#NWO+f64[SLku:\T
%."Xoe,^Ugn0"VB+cb"iGo1hhT9VmcIP8Kg(4YUduL,ADZU7nH*BOs;EU+M?`EiS^`Tb3]ZA3:PcPkLr\3#a?q,EFA%5[71n]Q@5K
%8^\XTOgQYVOXa%LLijXC[7JB;ZN:^&XqB%NRk;%HX.V:;6^G;P1psu![&CX@oBV?W$`WZF=CMN>:dU!bAU*lC.Td]Lee_gQPU`J.
%ZpRDs.LdPT#.c<M0d\(mpk_DVU-%RK)2!fdEtEh*9X&1I/M?M[r-DT12%VNQnDIN9/OI?pSu\,m0u_UN3Sii/#,#/AF&::.nWIRb
%Jk4<IQ.?Zc7I$q\.NP1aeDSH]$>gB2F@Hr.+>P6W(0'?m#DjBh9U`uCXH&PWJ5YV*V/@GJ%4@Vu<]>7]$4<]01aE-%6:XWRYWure
%X(idi1u^4n^5'OZ+5`<kgM9J;iKhhqJeBR[e>8H%CEOKEq?$P*nEuC;i7LZ72AB32`d@oHN;4=UNHmdJnZ$K2joJ(1n+J02GuD"_
%c_N"@.iq4_SlnCak/lW'j'KPS@0KjRE*"'40GQQ3S4b@AiJ1kLaK9_Cen@3i^m`:P'2L*?2%RX$?69O*4N=TT'+s8u\S.tBei]8W
%9['*&:%Qs6ODTrePJqm9l$tW56$$f_';Cc3eiYiN1H)\rGtN`Z-Z,]R!/E#)H/=\5`BM*5Ti3BHEm&gKn@l=kk;->`?(`I[POKj$
%es;qU,L'5DLO3=sDJJ^5Xab[1*]?mmrLZ&aGf"Sm@M>;?/!)atI!c*Z:5e%i"iS9B,\e[d47s.OG03!Cg1a)p!g<I>WMgCtOQLID
%,dE2X1K9Pr!XLW+hGYUE6@]2tL*it(#1Fl<49ZWA03Eif''S]qHV3V_%r#k.JcPur,gml-K)ZGd-m=%A6>.afhU^Z'*,+j>[R)d8
%JA"QY5-m/+L_mW/6B!S*q,E'"&-Z3LN_Cml"0>u:jA1LTH[ms]%I>_cC>Ri@p5d:G$#NP!3Y6o+?m&Y^E([]'"5m("/:oR!!cAL@
%-D=Y=q'cCt$P<:VHl!]S>!VSN-//a]]kg/m./\2$-^kh85ZXfA]1i%h*5C&BVPQj3X2-ZhF%Bm\i1M6$.K%O?dBWk*/*kTEV?uip
%.(+oR0nF2>+e>md6StAr[D6Gc8[RXYTrDcb(GI*Uhl]6HYa*P`@\SMp6)b.<@bRZL&of^%+2XQ+Xtl.WKP/IbDu'0q5e9^f@2>h#
%]KHQW67b['7"Y&<_Ns\Q$j,>`n]AAg4@*)#!V'K'b5EiZ4)l?KQq0@d&U2J$-094NacS:)Vl;%90PEdp"Gpg$"O_HY\<L:H/mu`B
%!U6g:Q%k-MBou*9GScdG/lR8@1u?p'$JAS"#;O=):Gigj,'g9>0kpu'i)7Hb[7S7r-Y5?#DOS)N%Q'c#Vj2#?(^,HsUmmMQMBJL4
%_d4/(>hi=k%*1os0ipT6o=Kf7YEH\+85e$/Im,O0*<Qn.N"R`o;.ZiS5ea+e\I_[`gPq&V=umNJS)B!<#=b0CPD*)@,\O>I.,:D=
%1VlQsglg/"=>S6ZR%^,3]2ahFPMi(1b*P]XV1qcf%a;_&<0m,ein4mhllP6p.Dos7E`&ZAG:_<=s5d>h09$Hc%@Kk\jTbqH1Up^R
%Nt9au!c.FE3MFnp&A`5dB$8U17/E[D*W\*/79fjg6>!B\I939K?t]"_\,S"pi3+Ej;>,WP9ll/GbEYqP=3M"6g!W[Xb]B@\X=n&)
%"VPj9>iI2Oj:[po7kTpqF6%@OE`QE4?c8'_;Q92tD:C*_CfhX#75JRX>\-<*lDC'erLPb.k7c0(SQ/]\VQ*BsN!"WeZV7\2;#k<R
%X2G8IeDXQR'(I.hriW$0.08N7(9i1QUQ0@eLdm=O-CS+5=loR&l75mQd:e)gS<++`jeQ3l1cc3piq%e$DGG2]cCMdBMi@WP=O]'D
%YdO:C(mkm=-TM]G(79YT4msp^--\0#oUMUebg_;QI>2rS#su5!oam7"^CCKa31s!^1s(?$k1Miu8;'MeK-:V1!-mL"cLWV#DWmB/
%WV/_K;FM/cN$.3t7mN!JQE6?Wj`7F>0TpV@ZuVjB:-BD`jU*7.=s>.,_^2U/;-i0<P3=4WF1GXq:TbX)a0\eh?rs-JNLR0SD546n
%a<GbL6im^dQtTr:-o,qmjD!*7P?"cJJ5XFTJ7g$`Ol[-tB+>U6'ZWK)#k9#Pa3lTtS-Tbtfb,.1]'(T@L2sq_BSosSPZ>ph-baVD
%&WN)Ia@Wp1<)2j-53#R=TY3<I`RY_.m+aT@id)4+'RQsQ\8#b6+'hFqg!DL+El:0o1_T/0p.fm!/+_m(Y`Rp+#K2%dEp'-,TS*JQ
%Z=7SXdN51rq:2m_a$>tCs/e08'I)t4OG1n$/](Y5V!uA864nV,oANUYXXkjCcd-PY_J$g=I,_YW3rhu1`%H[ud*S:#C68*#Lg@XB
%j\VG;LH1Wl@#]+@K5;/G2C\L2(AF^tAPIbA0l[/M+J'Eg!3p#SA<6Jc.j3L%R_AG-['H-P'S\t"/B'ma77qNb%4G`mj#`IJ(5=$d
%J@E0JPnD+s=Y<lu>?OLM.U3MfCb1e*,!nh@/K31q5RADZZ+5g0"dpn*+FYJjW4[,<S'(f2JrYGnN4bK.8V<_Pp+en!;\f^m3<DWM
%7gohR1O$m-5D@A+_fF*f2O\o?g2BflR^!(&4`%3k@'/#$WYtu<P<"l8*MC]`?RT!3J7=H"m42obp;2['i$FUr__R]ce#\.0B4YKF
%V5f9W%@XN'1aM?FU<rcsh'>G9."%L'd)^9jg>l-8p)'^AUaF.sR*_Abj&@ug\IjgE-ChKlM?]<t;N;T]d24lG;Rmg-q,s8@E^Lbl
%7$q3f_NO&G'F:sA^bHIlPZ:!t&.3BbdLL2g]A,#/-U=sMBiYt&S3!IQLh%YB]Ml'\#:M<5ns.W740E_k,'aH/Tm\_Z6j1T,\LEVu
%`0dWX:]s<+:Un6BN^5CRQdB,B8)4?l3Z>F`XeY.B[^BIq#TbNTY'IE]GD`KfQk'>k)TX.C.O+Zo/5(X$.ftmC6Wb3t8F0L=@L7n)
%'u3p?6q0R@2Ul_b0X:`%U^JA+\$A;IXBHEP2CLBs8V"%9%0DkW$2SCSBHuId0k%>tU!6<<f[**;5/pi0g(D:oVD]cg8sro!d\hVp
%/@MX8nF!<:J4pj3QE'3NEd$M(aVdC$dlS5KP2Kr]k!CI_2C?B:e&#;$!(s$>OM;A"0GNd`$M(Y+0Jb;g\el@-]5km.Tbg89'KV/\
%",J]X@1"Vh+GphEP.3:nPpG]1B@j^<9,jNtaFIfVZjoi%0h>%3f_![(aB#d(ZP9tQE`kf-67XEMZ5L4cJQ7lcYabnB3<BAG6`_.J
%0=GpS)_uH>SEi`*aII](fKTSdX?oNR$)+[,b&@*'S,ah'<n_3CnG2#p:-j5o(EEPlG1+Gg?YJS'MR4'7^moZpft.SA)S&7$E+Y)d
%5WDAMQ@"@-kXlR.m;0=Q_kGWZp).<rWmN$;*ZOCb52jPl/;p0'KG6uXZ%j%J,nh:15l-S`pEiEAW">Bea\aBpV_n0k&hoT'+s]ZT
%"N-l=U:WabOOdib>f&bYIY/oFJ7ZP'Jh.dBY;5SS]AQGm.3i.W;AfM836n3t*9T:`)2bV+WL8F#XDm;UVr0rjU-kpQ!<7kJdD:E3
%OX,R*IKYXWaFY0e'H#:c3NqDgW.QijFY9($PRUtSZG$u@;b*F[JOt[bYW.\c/:CD[X.(qUqCeRB4t&iX?O@fl7`!_K&gf[/1MhI?
%K>"6l56)ln?I3=Rb)jQ22Vo$]@3EcB)q6ZS%rduD67<XjK&\BZ+oRW/a#3BQ%6pM;!g6`I>-[`_UVJ02l3V9__^c'+;\=UR!nTXB
%"K"i?(gK^#TiXW;*3=r=a=m-_/-=7?SDZ(:0c]hGr(jUq0cXj)'2iQ(63ii@CCWu"d1t5D$%T['W+$$R)gJt0;NmqQm>(;$%3pRK
%Br,@"1FOe5,7E8R8TOSZA1$9'#-h<Mcl.bIYFtOHca5LP`sLc'#;FjfSnJW(^)5:+FPMfmJFQoZA8f9@a%86-d3=Uo#,(TL&O@"`
%JF\H%*Y,%;oPr-+br8Bsa"es2'_B/!$*HPg5u*>Iil*T^/"nC?g9J[L&KVsQ"%/LHWNQH/M!=60"R#[oE#U(h:(j(eW1^OC-Cp!@
%f5c]A$74%Q9-D+?b&7XcKVM"l=1Qh,#d\i)8=H^Pdr7Lj6lIFI2"MXr22]Y.(gpGhR?4!iOBJTN//2@#]Y0ghWH@Dc-=VUn2j27?
%[438@TlZ&*lHJ"V(8_o/K1_7H#C7jCK]lg)Q9^INV`\AHGbPC&HGjG.<Q%K9JtqPXYX3LpiL%HD6onak@I,IST-SM`8nuKlhN':p
%,R1"0%i^1ZP7pA#d20_iC3(Jm5o<)-&WoZRN)k=s5s\e<d*`Te0j6S%;hN$&i(Phmd%3s.T3`*S;DcUPCp;\\YG@XkcZ2R5@(Q'S
%RR47""huX_/;;@L#"IaC!&ZdSbTgb@k?26Zgsm'V4iP'sNkMo-8gq<NE-6l&UNY"]"`3Rr&J>QKdtWOrbVD50;4(L6XbQWkHZ,!0
%>(R0WGKO^p-'ZnMi\0.)-Gbi>r!nK#:k"Q:66Y">&V0i#7f]Pn,/(b.Ut5C%V1YE;(Xe8g&,)VdO6nTO'MI;e,RmKM_1%aQPWK3"
%XO9oga^"]!%/:$##a>$QE6C8*gJGgRXN-<]Vh"edl6^,ec8=0/lpg&I=\TnA90Y[O`8Fri@`3ss*-guE'lQ\nNaGe[0IN7n@1/@M
%3L"C-!GI?Ab;;aWTe_+c7qJ9>?,F'oBPC4s@?O%@L1_^:5\)WYH^pW^0`_e.ciFJ32FO2g'TB,>X(-G$\eu?C*tR&g.JtT.^^2HN
%?MdN,q<6<M2C:q!h-_Ol(Wl)X^8$hd;p1Wj]`4.jE?I,:<Eu6^.1u9Eo,Gc8c7u++W7!dgK,bj83MV3e!Df)FSurJq7b0qdMKB;.
%@=tFSBHMh/;&02+#]bqG6W+"8aI7qnK7[h.Qh7&]Ja5>WC^:O:WBd4Z-WL_a^[Q(@KlmNoj#jQV`]P2T+9l56KP[%f\O.^*BA+[k
%e\Q;%7MnCdDG"5dnOkOb-*5QU&bq08lWSQ#b':qA[u=\q-@X1g41^#$^lAJN-8P0.@Np)-@%q&7#/4%2pApBW7J*?tI(2a>ZO.Cu
%oW9eM,`D0#JE1Mk"j/X3D$app>^ur_L-u=Z#U*2o&=kKf!N?H(CU3>acCE',PB;_U$>KU=P/7S:/>^FjK4CMr;DJi]306]Sl4dts
%n:Z`pa:a$!k4PVj/?0&O*?gV(s#*,^[>97-.<5r$j40LsW@"!QQ?c1rHe/`\(K*!r]\<RiadWCZ2`Tm<ei!>/$;eoM/jX@k%7+>=
%1BS)W%L*ouT2L6pA_O1<K'd&S0'P$jVVnb4k"L9K0@SkJ%W%!2>9eA-DT3gCOt]L^5BGduM"Vf>7;`dOF.DsMLK!5^,b3":4+%,1
%+K5E0Z/JjdR?.!>nP4Xo;j.2*SPCsN#d\4JC3et(e%h]4["$e_megJrZh)1r7VL<eb_,,pqC0n%B2#.f0:$$`b$R%V6/[ei.Rd0E
%!qX,Tmn[S:8J7Ta<r+L45\V/)NtBf\U+l5O`&fU8fGP3MZ,'+mY=AVVAZg,c#X0.L0>nR0IaVbd#<CRq&Y.k&>#YjK&2p%aac$9T
%@0ODUDS7i^1O,8lC=]JJhJ%R7!Sg1$);s-rX:,FSVlSdP6"R:eZHYMIRG\d0$R/U0Qu]DEPU@.a4h.U^g(<-WP3bsJ,=o+Z@>[J`
%miu'n+@FL#an3Ab&d+##)p/=270gXb!ot7KcU:IR&.iM3/DjSOOSju%Ls`)6rb[2&2;gg=clG3Ii/o\5c(tSn>>,SEW"OT68GHf,
%*eEedS&m3\EQ^.NR21g0AnX)iI=0e,]q?p)O]2q7O'E^IcOVBo6#^VD]1BT"ir,Ag:fS3K6c1tAr('[Mm?EKW/2A$3o/mrgiK4Wp
%=IjZWIT:jgOYL7m0Nls?70\%^<X^_r;oH.9-YNI\<ukgZM]")qo.h7N?RQV!pmK@,$/i8n,_L!2HpF+79mfd(2iujd_Q3K@UCH4:
%,pWVVkP^_g#WCYCcCI-cYQVW>8m24o-N<9;CbqB3Z"f]CeH%lO/:Z62nnTkWFr*K?*cPi68'3H97PfsK(^eM(>_OpBiRUR%$Ub39
%2LL(5/:X:^=FaTS1(ZMfj+^r72CMS$+?R:g-DUpLfV[\ID/RUMU,g7XEC<KSiIF$YX=mEt=Ic1.KaU]_jX%_NV(ub*>bn>.LW(Ga
%MB6KITIfsM&_77L0Bm&B=GK^=JMnt'"_'=>NJF$`J]!+'e.r!$?V8Igj=BLeJe.&F@bX4=.X^6.s-T-@>(&)=6'\s"Q79#j3q'oE
%)eWJ56B7u6;/]]#96D/S/Rg3>RV$SG$TbC6P7Er+a;eWA#ID))YN#e[BWM`M;^7nI#,Y$E:W<t)N@+W[#Ek0>Tc-@JOVC1D3#WGR
%*iHoB`T3[R\8^=Y/3uAdYDCa:Pq)H8Z3Vm?om*M_ih5!2S](kh%[?`RIC'Y+#>j@$<O#oA8el2ZUjGZ:q'T1=+VM_!V*"I:N4&iK
%d[q2B<@4Z<9o=0-RR7)>^hW+H<`C9Mn84Z=`lNeh,M:*P@i5b(-$?R6BbI.qjd)1)G\\O;:',!F"eCmq`WT;eYFrOK'a9#ObDch=
%5YFE4-1:>&;;sQ!4QU/hVl\[Zi[gZc[&rO%9DMZMjJ:;sZ/9hrZK@ZE0pn"qK23Z3MFmU_@mEIp7CXt;i'qHX5tm0*>?F[0A+;B#
%8@/IF'K-H(@mn#H4E8:EULE+S1t(Kq#h)F6c9elDg,+Qd%l'U[:s1XKTBoiAPc-:Q*q>sd7.:q$4!#3[/DA)7UQ_+BXQ1(r-pdBD
%,A9>8d92%3EmPZDjm;QO.$mbJfX[Pi%Co-!6:G=L6S<Jcs)?"=1#P3X*/jF>#n1qEC]cL/fcW!?!DG]D)%tFZAt#],)Q(#paB9CK
%5Nt_hntA_[l[m:)@:X0Z*5d0#YN/*uVmVLMpm./s":$GlL_,X:Q<2o`;@<V3GO`25^>P!lI"DXqB.C,qM26t0n@^0bo$YC%FX?Sb
%3KT#NS?G8b'ad;^2/Pg8819DQRn_pXk7)ac#/+pA-O@K$bRdX5Yq<'8%ou;(f;hF[TuO+\O:[VPTf[G_.j=iOGrN,%Q(F5U/Kl"W
%#H%_SO^HFdC$:ZL'S?g$qSIP'B]LpJX@'6CBfHeR=R)Y/0pK"^1sI"0#1"8iW1rsc"A"cn<gEY:/Ps8!1b4'O)`_X<kBH?bOQ[-5
%'WqLHA/cV=N#Ns:>R&=:O:Ws'rZ]5?fIRH#*2(^M5]X]l)\.iC*CI`=-0o&WfAqiZ']*A,JLD9CHFGZ]gNh2&%SN(_nQK<qA_%;A
%)Ob6'\Oo5?/[t8EF-El?kRndeY@JTiTb6%8=:U-dF-].o5]Tgr.N(MaiM)MM<)G\.!9nGUN+J[QJHcT?#"b*UfI,[/S/CQ<.P_GF
%/52:P<!H,M^*P[0gDMhnMn>o5lr!0u#]^DG!^rK%&9G_aA1Jtb/s*Kh=%W=AW7M7pK)Q=69"lB5TofmDf!m[-PpWoX)XV1#Gib"p
%!I;/3Js+/5<3U3TXu'I=Nr[#&";?`M.!L,T8;\sG$br6V<H6Sl%EM2=%fD,'A;GmW1[%Ct0Jk/Mi,[lQU@V6NSFcO1lS8"M\)9Tq
%kXr`LO5`KaZt)irGR0GMVC$dc`_e&aUII&@RPQ/8#KeXXe0NlN7l;F!ip\+SPnG*^)i#k-e=7Z*W8kLcm$_rT_pO=ekOMj82>Z5D
%"ma?7"Cee^`s@q*>]ThPJ/WY<8W'dRPncc55nPe_GF)gH_`O@mC'6B`JPChmQJ@R%B*K4V#^LHB:QXO33$2%7U_5S?Y(X-T]H\@e
%:OK=LWG*Je#t5Wm._)YnR/m9K*J[QDO,Up`LF>*LbcsLXhV;)2#fN2:s+bQYL+0.E"Tt1AKb]r+b+fl&a+qFkX4nd7!On!E/8tL7
%g]d-N1>H[OpEl7@E.H4(JRQ'V:]h%a8>0Ls6GSpgN@1D2LWk.2&[jKK$[/oa"fGJ`Hf(@R44n5FHu`r>WQqiW8A/X#j/RAalU`MU
%&49m5-(b*1@(qdu9FO^CT_)-4\JJ$KhUEfqH.aR'8I;?t"5miL:80X,q(nu2q5gg2T'I=>+kQo(6:01cK@XA(:&N<.VjN]MYB/*m
%Jg5i-#u/MraJYmMX.:>iK-BJQ+C(Clf_YbE+Z(,t74D)]16(I$6(TeF71cRBK]Y.)J5D/eL?u?*N,-pnK9>:@H?lLm=c'5JJNtuY
%jI-s.;J\,C\.LZ@+Gt9&m3.H=X_MIXjl1p>"L=j#'?K8ZLdp=hB4)-l5gmHHPeT-Y=CQ=^SQC,6=@uZc/BCf3h<p*I)"6hq1tN?r
%Dg5a>+j^Z0Jocft_D2>c\"Y%p\=(T(/+TPLqM;?\Ka!kVN'.8-B[CSj2D?q?/<:OM':7$j`^*R5XVuBjk5ATjBWOdk1bp%3>jGcN
%-FQUcInukZm'#JR:dkkHS!ko;NDM&4/OXctr!<Ge)_TM_]A*G,Y!hUA$c$P\3O=W34Ikr#+3eM)Q30`!eq^Z-3T)9P2A,#hR3NhD
%5fqX-CCUK@F.VB7Z3tY^NGsa+gi42Q)8$*Y84;B`SrAl"2*3:$+MQ7^9E])*'!j9n$5dZR-6dgbaAbLg;8tLRB##;=/^BRM(U#Z7
%%1s,ARENi_l?iacJd@u0g%+B2!>lHnq0"#s<r7\4hj5T\`1!A0-2@^GTCo0l6X(be9Em?l&C-9P9Y&*D7L9sq_eba=<mC//k8/rA
%#=6H)6D=Kuihi@aSb$0K(`d2lq*]mi`-'@B"@Sp0+rrqs^DVXI&]MtRX\d(:-S2H%3;pt>5W'A>;4RXH7?0iC9BD!\`?eH75\\Dh
%^(gt"KP?ODJMT\S0^h$j;!3]U&tB*n(h@BkO:NibiQee@,'.T0hCoe8.'niUB"h$8]`sg)%Zg^I!/TbU(E%SS23`,s@K7%7]_39F
%l*)"335B/AC6YG]h#u:^@#8PlK(5+Q;:gM[.VP7G4l[5jYRV*_SW44s'dR3!_"a/9Q7jNCT_<*L=%uUg4<p\RHU@WB,mQ2T'nRPs
%*Wq?+^1XY.CpDIs\T$JH!#S"kaO^Y.[jW@NT5)E'rWNk_Af.;AW<Q]OY(cG/PGQSi_fZ4@0:HOREM5E$(V@&]SrUt+0H`Z+K/u@4
%WUL19W+3HV=,T)PRrQSPSrqaGhE?k0;\8Gd$oo!:11,oQEU'Uc!^^(1eH3HKWeB9$,i!l&QCUBH5#KZnjX?UTE'Xj0-WgqsFDPZ$
%%O0hhF*s@FE>o&[=X<F?>)j?&Or-J]o#YfH"@VN)*H[cP@K?Y<!b>TXN$+>6bJ4l8499XF".<OJqb3e5At:3;.[V^JJOjS,:'QlC
%)'l#4k/N`YENR3+!5#VK2CXhK":?.;/P]F`3l"QnalR_oE5WHBdU3Xc'Io0NH(SNdBs$)n-[oQ&FO`@#c8i'`j%>QpjRZZpbSIhk
%\1R7]a`8)eNu6m3+>9MKW6=uI&eR-fNZb&i>XuR;2sgkXKin-R_gk%?q^I[o&--/m(3h'jQ/HRXj&ZITRn3a;'BO.DHCet6F1)&l
%$BBF-iS,>EHDC3$')$K7Q8&:ueI_h+Q>p/f,G/uX8"2,?fa/(+k-df)7t)()P'O;aHqLG(Kt\NEUbjMPNlrZO5>up8K&qi!`=)6C
%$^i(V^1##b!NTt\HF?]7$0RP0ej(^]$MC#9AHS90Ps6;jLoa0/!C>Q"T9(hmo-ggW:-o.#7%UT:-*pN>T]W$t=PWDMLkJ8@<3d$Y
%!)"^m&n^+J!=GfI7AL<ar_A%_JC=.2Jeqi&[1J&L59l;_5s-p]PkeEo&FA7S5m(O/*8-V6/C>H0<W6/OhjZ&\r2n.r8(fR(f0qNo
%_r+91\=<#j$jpg)MV'[0.Ub4NC+jT>%4>76c"Z8mJL+@ZKPA(.)*qcfB]NS1,-1d]?&`s.Pp.#c#W1L%D7kWP<gMoBZ?]T,_AR'q
%VZNKbK`ua^#bMh%:fJ(%4<S8a;k#"+3?+oU1YDIHCnUYjGj":3J:;M-]q>XH%JR0@CSHC]A@nh2iMo"W'Le(jB9Y.#kPd.?LGOqY
%oqYn`fnR7pPNRF(&>oUVGhn+BJ(eib]o)/4jWU^I+>8L+Kh>1_2W7<@;7d80j[)'&XHY.d(q$k\`#8/Q&6ePB5q[g)bWusnM;iCr
%ZHP`i?]5HYRODGa=X:n\b;cm6=33kq'f=0O&8J0(eT0m&X%17Un0t5Bn=90fko,C[9jrAkh(JiGo%$6!8.Kd69`jBs)H\BMbYcDL
%ZBuDm^ZWLUFs0,$P9_/d[daf!Q6UcK)<K7C*[gJI'73'P**8P8#ocC#1PmC/NR[c1ELmhNQdM<2@D_0<E*6<?;S8%]JU@NJ6*YA>
%3?+B$/Y<L5du_abE9dX!B?K4e:RAE_<+[9scMFIK:X8glft]!1J8n`rVp-ZV>=_eMM)=[bg9bF#%(*E?!?s@b.Y$T=F#4RJ*M_V[
%*,G7>(??JCAKL_Z>4r2f:sM!MN4&j(aacp740Zre>fbPcjp6"HR)SU?@)4kSglAm,B-bG=m7V*!I#_8<'jLqJ^%lt+:e4]2'KuZ?
%oUgHS.3,tDX1*$tj#SPhhaU]J-c3_,-eOd+]9%YK+^[6,0biB=pg"+E*>6K&(*Qpen%Z!m%<>+J:dG3*^XhQ0Zf><2+H8M[A@VY0
%P"Gl1P3"-O8Eb/h@:hKU:V`<d<d*NY[LEPL+pTR)/B/pKb,IFY*$>M>4Y:s7Lk>cOM8B?kA-A<*2[3n`8SVU)+Qogs>#?coWgjf<
%.S=rjjuFs_;3]Tc)aurJJ!hGAX=-Z2_&jRQ7(@gn/-TfXm+OJeWiQpA.9<^0bZV"-MuV!BF4Q4H]11jZ,\O5!dM=b#XJin'-.YPU
%<PhjIVgcimOUNAGiKnUdJ5"t9"bF#"TTZY$d(icbo',iOB>qBD^$ROe`<;Iu5+]Pm\Lt13)<IBR;fXXZ,S=[SY_`6M!bXs[T7+F"
%B*I9TLUY-'O^"K[dh-4]&s9A=Qa9@7ptBN%CKitu.1Q20D[%l/Pn@d87FCA/<RqN"o69p:edD7qSDmYT<mFfWK0S@s!-3+-bZQ/u
%bXBXL1`SQ0[n9]1^!^*T<ik2H_SQ;;1T`DKYu\t*LKN@\=f_0YLPW9/Y,(&V`*$SHa]W,PkH*mk)q6lX7376l/@8rhQjHPHB<+"^
%lk:l%-&uq@2']iX3GO"GAOD,&f]L?PC4u#2Y=?lpYB#2:/q6dg<TZ@upGap872^;Mb:@rT`02We,/+Cjj9q9>4)o_m/kB>HHuUVk
%[nouVLF*BA7VjJG",'&[l9EHs?1R^rFIiWt")0g2s+QCbY;?#j@Qq3CGcrH$HV$TE)`HA!5@Gs[aR&IP*R33jOGr0DB#,*O6F&]d
%T*WEP43Zgu5_<?b!ma1*lj+.bRGl=/MYdRo2[l7&QbA;I`Qfg(rc'q]jLZ\::WNoZ-oc%RfU*<g81?NAM7J5AQRIjt5e.\bUaS1'
%O=0/0`e"G(FJiTH"<LiLkmh$Q`5mLL+lle$.H\\4F]fA+<e3D7\We[HbO!GQd)+02[]Bhs+nm1jN?TqFAQ\'RmGKgGY?^1Y(4i49
%NM)jKb0C>\.7]@HWgmB]HK?>kqCEF%drC50K&@$d'o/MOEI<)T]dSnD\RWT]*'CN(]JTI0b$6'Da6@7mGD#'T%&HB6!eI3kq3%$P
%$D>XcTGYUIR8T%:(R2Jo&m*t%<XjsI#"@a:TR7%OV8\A\&2ON18)rV.:q3Q3c4A\K?Hd'p@)BFi's0A![6d<0.oiDhDVo)lmbl-l
%Su5)r6De^ZBfSBt9J;!U<CEKn\Ig[=9A*U%]lMmFc/f(dr@""0Cte^@*QHQ:<bFJe2LkueU+PWCiK:8O=/n3YO@G.Y5_*GnQ^&lH
%KLA(cG2QdKUu#ZscGtl2RN`aF4p6WWd_^EEjHjkJ++s/AOI=*3gl`BqV9O8l)"B/r0?HabBpe!W6in6*H;Gdl\Wn"_F2SUo9q8sV
%bR;OS$G>AFbe+mSZXOL?-'7+VcN$Qnc3#o^eeH/T>R9L>-<shg[l)GnVQE#Uj_RK,M0M4kT0rBHj\$[`bs^u7`pEKjRhC(<W$"E]
%UC/Bk6)ttgn9K8(!"@6uT,bu,Y0VDeIEl+!NBCqfM%#/?Fhf4"%(38uXYS<?'Go5U>\(p\&uisc^lFV`<,R`c23<nB!enjeT^Qo-
%Lm!Vha"d2(]gYi0IAE>)?(35=5kX2rIN18#!Y#^]EkO]a0Za+Xj\r!<HN5a$N)D;M!"+G^9FiDK6kIX+97>B'!<l%#rt(c22mIH@
%6Fkg'og#!nUE^1Wk!lZ`!g?FT3\ncL':t#76fT4en/G^;N@.d#0H?N7GQ8Z3<6gI2DJ<(997/'ZmXl"BORa$9ULcf;/R1"03U)Rq
%jauZl<)\oIj/]ioRc$#DRMES]Wr3sG)OBRP3G>%VjYIuTaWp>uA[(>uHob:6&9/G2A8ir8Nqe82G\=RE$"%+OnXK@@G$YF*#LH^4
%4i=0(@R-%hq#&6I>u[Am.+%Rh^DF`?"t2X"Lit-CD?fNsF2iG*>`"$9;NS5k&q<(Z(k$klHfgNr`JJK]k`t>A\_1$Lm!,;SDas3K
%LIZuJLnE5JR84FQ)?GL1p_c'Ea_)RG#e8k%dGp8?9Zg?"o%+Eule3'rXDaKj.GcL?d#jrD;5$@#hP"OtL<*j*$-<^J;H<d[21a'b
%AVSOCpmnU6Wt6ajOCkAe\.1X!NF>`ol5:c0LdR1+UrE#sanABfB#J>lP%Y1GJp=+F_Z55Zn"J"tMO!bgK8=qAfFl79*Jl>n^@8'A
%$B.gYo;I:a=+goZ7+;T$*ERau(PfL#ZfB8%hE+];i_$8k7Z`-Kh#35$!RhTZfG<OtQ-8@g!&oEU`9FpUKO63Z_$u>1)"Zr30kH*8
%\Ba$j<.K-q5[%Ej=`VX1Z<=FR"PKWTe3'u%eh;F?P.]j:?bFFb$sj;3-.b:uB?]>/Y>;tG>TjG+'.@T5f96USM^4Yud:nk8&<:'E
%-lEW+""8drj:@5LBa'093jL/B+/%uM`<!oPH\N[T4NK%hAJJaDV0L8;KQdGpUle4Z9I+Ad6U^M0@L84=(rE7+-;X+<5^79>Yb;U@
%48hdK^_q0,Q$71<5)l$TDK#>c#l"t90$OEG+9+\%!cOdVqZ+AcSt,D!6g2g7bQ]XTAE\#f6P^.5B+\SsHip9s[($TDb)ZJ,):t[(
%0cMVd.+Ai,e4QB'dZrkB$fR.QMArr#.KVgdaH.q\[=[m;5nXHqe%:^rTS*gM2uH-g$%gnq<-aIR\7LaVdPTjU.ek3FM5;r%oS`?m
%p9GE'TrmLL(4,+gih$1(cQgS@Bj=OgC&POCNVKos'95td(IDQJ_)/8\2;Y+j$l.QjiEZRFK;A/X&g$E@`&SWYP0.@$L.DAFiTTiJ
%W.Jqc)8EFm@rf^\!KF"5Z<9aK08)f@N8SnG[5eaTY/6!8kTEFVWGCT%,)(`)'G?`C_aK-dkadt@U06u6outDbbC(cEp"Y#pdc:T#
%]p:ArEFgr]$pD'm\GP<SIEm0VML0)EXbrg>NRtrYD^TPX.P<mt=J7D,c>9?\EInPgZ?-j@<76\"mZ*2cTPV,HEQ%)`2WUbY2qb!8
%=<no-J`B_+Q/7*=;B8eZXmF4.5i1k8@A\mW`YcW#DEa9*6gXkNC?YXt>R4?r=NC]?83fOSK>L&G:J([pS5@A`RM+'>fe\NS[?o."
%MSV-0kaLP;d3t[-4,TXAU1JE]d!1.ElUA%&ap"l60X@BO4CPB.T@rL_5mW=PEAK53UuMc&M/]Xt7h[MKn`3:d*Y/-QFP<@8&og\t
%98/^l6A1O>6+PL3jRQ6+f0g!-79M-i]:_L;.,<sbkK%UkZ1I-GR*6B);I#=u]>;I0kC#g`jQE.5Ca$H=.g;/u#]^tRkuo]=XPANV
%GZ,.ajJV&CTtZ%Ud%^uIi`Blp:h6dLcbI"@Xpi>%7S:D=(MU5n@,SOn_<'"<L'<$ggmUKmS_o6qWj!9cT*'O"=#+c@*a+";9,pP'
%@Dse3Qj+1.Y2QME8+_E+UO4dQDd_]M?8?D&B=?6M$alpPZ>^+(#/LBW*],:=n-?in7!D5&dqDB.DJE&_JHG4!IOqmCLh3e@RSg1(
%F:J\nZEWth.NJ(gdkEt`&N#:gXsra3jnQ[ZPc-maKB+:Q4=D/S/M#i;8k;O<,uEWmaM\nG$@NX7?4ImGKlV?*_f?2TGNTe>2k1&p
%M2cBQUCf=1;u^$0&:Z.0!Ti<]:rn)AhHD<H-N52Ygg(5DE*>S:OMFF)FiWV>O>.[t21S#.=.!CKYZOBJh7<4Xnf@g,D<.25_-HJV
%<'k*?&!$t9!&&l^^)sZ%#GATa#A!nGQ8Z`6+JoJQ3LSH!Oc;KOXSOA`gq2@=5m89"2bl!U6"25YlFN<V;;NMerE4![e!)R8ajM$E
%F"q!g`=5J!5ug?'gj(1Eb3TU\bd'pAJTD\pF5@$QOOP![)ti0sW%pE`cOqZG"Z[9>\,;F%^,K,En>JP7?:&_i'_PMb]GNN_RrW[`
%]4)3QV`VZGT?lc3J='n_ce!>FKedGd\GdD7dkP&Wf+p0RN2&9GNgM!G6C5Br$7KA*-+)T(ATu)o.T'@j]kD^P1g3<(gQ9tbnpHIu
%c1.@1fH*NI<asU0.06BS\R(Tu]8`?BAZQmP6H<\:"HfNKUmrUlA4;DHP*\WaV<Xa?rGW6F7h#pOjtKAZ]6sZj0(7(/o5[%U.f+nV
%2YUWfoVg32'CoAO(ts<95M&:W^.OlV,(emTBh>I&L3Cr"76&+QE^D$lkL*bsK#He7@KJ73qua[X;!<ESl^+FfUa'p:8FBCJ7"[Ig
%&qSdb-n`$h92cS^8(Qsfn>eNe+F(bO\n_n+Yi2lN;LUFh.daHi>V`>KR)bkq-tO)Y<N,JImX0n,iA*neXV!TBR@I:7nh]tM!X5L4
%of9Eb)_lT^<<^<YF.;?Dk"tc@)c"cqI/U[QB*;9@h(b:;_D_S?Fs&K76Bn'_,SaOO4$Rc33?"bq"b2-s&TDiZk+p15!@UK9V_%V]
%I@2e2J_qF[19rdP85M4^'m:m=\a*L%5cQ4B&4;*A*(ZCDa+N#kT(8g4oks<JIEosi>aQ]0cSNkHQI5ujBM]-]!dXfkREZbFm$AEF
%4;EVj1S.3N>V&0FH1A8CdLKS@-Yp7+h.PXUOSl;`b")d\m?oAo6(jE\>_W$%AO(Wh%THLW:n*K;";*Nn0nODEelE]pOj)u6mk'-E
%;-Ua7?k2;XA1/$mp.!-TRB-f95V54\I""N%EY1`ak>qIY"Y]^J>rF)ViT:r/rjE*t)8%WP>4sWiqB*QI;'jB;&;K8Gb/[L19#LnA
%NuBkQ`6:Zs"AV*5rA6E,RmBFd_Vle'mZ""CMF&&7\JUe2CDn]epG)>gCcJdWZ_E3_T]+UR'oLLU#U-?a,9l9#8tiuUFTDgeQ!.<,
%2af5>QTP.&(E):S7S0frAPd7%V(4<.P#1'R9r/2-V,4OUX-S'O;m8'Bo!*MVK]@BSM5]paE[qMMH@F1iBtag2>j;t:E'6o$TDr7`
%&Q$8C)p,S8Fbo;Q'e'*&?rBHTd_+@@%cu-#5$p9(=da,ZlskK7-+6J;o]K1S)j]OD+qX0TTaVc&lr,l0H!KFZQuIRh+edmB8kOe6
%]$KBUoib3m)n7Rq7H<=J5]sMT4"g>qRoiAU0aMnZI'>S^`nZJ&h5EW2L0#"ogqgf:L`Dit&_$ksnJkSc9c>E65bq%q72hLpN60\E
%g6AYbH*mDFJ6$Lm3W'=UDFkui`TWhi\VP-T2T%%7=hQX;"K4-`C#IijLJ*EL(^gUVlr.?+"VB!Y^]HC''I7LB>*4B,Vroae^VhW<
%=^#NPac_jndbD<4r5o9#)m>d#R$R<l],,EXJhM%CfKMOXOkY)6Bo"l*Q*^E%R\;?;L`.-sas!,0oWahDpu%Fo9F`+"Vbt<.<>qT\
%?u]pYR2VL8.QD7X)[OIm(WB=B%r8`HB86.DEh@[#Kh)kq`HXWuAATj.UII5TH!F8=]t4Oa0t.c6+5mXi#*ZlU>s^OuRLK<Y.#LE1
%M(:$k#"S#XAgfqW77e@k>UN*3Xk;$gB,N05pApS].:]m%Z>K]%-\n/)>3QEgd?Gk`5%QjYlqBNQ0#FUmkDWUHEI8[XU-a)ZT/-i,
%GcN]nF:!ri=46PVBLKVMlq'U"J"fs0^HAYcK>kn8Mg]'4-W>N@TLb16am?MDTqaO83=-?M:Os_R0aJF&"[4G5MsC`NM3*p0IG#tP
%Pm/NA%F+dn**VG5)7nh$7caP8^@I+2&)+W"E`U<dQ_ef3$I?]aMpt=(Bo#BI_17bp^'e_ag&KCT]/<`['N_$tA&a#N0:6J!==8+'
%E,6S_JjH%B6B)hNH,4g4HOs(T2eoq7S6pbn\U-_hm/:KqhQ"[3.@F#;13S%bp$hHipXN6?o*YTrj?(:`W#a\AnQ/04,d+bLEfqq`
%W^Ut/@R)4K\328qm]MgLd9EpZHS>k:#LiJC7jWI)aX[,G%qF#A*JHI%'#%9@FQp]T4Z^W_744fa-s>>\=#mHe];I^/oBT",T7(k7
%R&@UC,Uk',YF/eK?GS0"78EDYHFSU'RmFc='gX^=GEY#6F,i-7MsIC^d3bQ?Ro**On45`k'53jmIsqgsjm*o:b866edT\>(O^i2_
%;`@C+_fLq<,UQ_,q2BVt_`ltl\:%p:;$!ZX?:h1*P9JWF(J"4qES7)`=4$H.@eV"^@Cl63g26(7^$iCZf/ug-EB2uR=Y5iI-lHK)
%/F5eLW]7q&;%JR3-`M9`]HS/J$Oh_-Q33+7]YStVT.U44D#q1&?7?W3dpf6%ogk)`l;fTQepKCCiC2Kfr4&N,>ROQjbgdH3#6ID2
%EDp?7#.g*+ZD^\`$Z]RcBJaT7_9/]:\JL&6P'#QK_fR\=)3APKD0+^BL+jY<"[!Y!V_$.<V]JFQ.mR%J02rWq+XA,[+fGM`j4M5j
%WXUWtV&i;R2A`CX4<i>f)3oPDHDUgbAE4`G53_BN6]g8BWNNWa4HQcX3P2e*&!YM&Q=cLRDV>`-F'0'"ZD/E'j13W*l``7F4=PGK
%-LGl\CQlBf\j'E%aIqt!AP!6gNP:H"Qb+SEcW,[s7h5>rRZBH;VdANLIOuen3E>4i3+*0[gZ=s3,7hJ2MDdB]g/;]ejo'IWT#5%e
%B2@spCp>Thf4r;D$>(1<!kO]'X]78OjAgqkr^o#t(rRtdL!DuS<R$Y4+1)]eg9i8F[!btudDZWh!4#TTT9#a5`t$4aJ8j?4UX_66
%h_JG_L\Y'\#0g.ZW`tQ&d=ojT\#Pqpa:,'$E3"Pri9J=`m]sT'H'N1)F^2.0D33odhFGKFFt.Q(r*,)n.!?miNuY?niu-!"Lumk6
%<Y_G,k1o3:-Qm[XV\V#!V/gfc154GIgl@/,_][.0Ys<B<Ngt;Egl*jAJHa_#J?7lm"4FJXG]'e\0c5`$m$1\j'P)Yp2>D+pC5e<o
%@<guN+ZhW]D;q"JA+Vc`$K=an4S<VDX9SY(YBSCQ2LooA[1;5oK=<YBgUf:[g(gSm,qj_H#/]lII4j'`+S'4U#:Rm:CE[j@d*27u
%*KC6CdSD>.lOE2?OSQMNWB\pQ5VqFJa^O_%3Y!uAU!NPie8HI4K\ZhX,^Y+-21Y\8ig+EaTBr)Obj5eKl]l9E&1h[<(bPn'PL6q#
%?)LSaaj767O:bY9I)KGY@ch*`lU.H+I>^l(nOsO%!&#p$h[5(?L#0Uhn$dni!>;guDkLbl"W#6e".^gOLSg+e[!N/+6dAOL$0]*,
%`e6pr^"D""pUH.U,WcGLMho]0W7hI;gK*8&'0?4:PHqtr=o(i7bq5Vh>7=j;[4bPZ@')ZXHWu:*K[Db)'8Afn"EmPT\AWARJ0q14
%?L'AWKOn7Z+keStfLabRB;&nUgX1no)hui[-\A=e!Un&+%NA`PR0j.F/QhC?@kGZOa#q)jUaNS\j^]KO$-4dj<fR96QN]%6d*^^)
%m%PF<+$BpE?_Tpu0+/iDAdQ<eI9LB-i_$'U$#L:*,J2fo$biucf%ZX\@D=mk_8fX7d"bH8fRdkQZY1'@>)Zdkel[]M;T&!8TD#mW
%1fiXR5jW\OBdC4>F(f)4bE^-#mg^9-PYXLk!sfNnd._s#;8*)+;t@GB)KDD-Z.M\(p6is)Y@]T-dSr`Z#L:&LO;"i-!?Rtg4/$%V
%5p&Br&6f2#lglljCG-58=uP(l)U`B+RQ3;1kpNgp$@94)9Jq2fef$F0:n(=ODoJa3r)pc`juNQ-jh;H4?U.W/%:=H:#/1Q,Mh`5V
%`ZVe]"D+aL4G9[[]1pu>(sO4S`Y@&!@fcP,h4>?n?H4AX?i`CO$N[ahEq$sI#-ZKoGBB9h;t-0eS&&ZS`pZRe]@mUrMjLR`Q5,*^
%O4VnkW3(V6J_(V_SY<JtZ[u\+)4V-c#%uX)0Zh:M%ET_C0qRH@E<]Tm#[9U!F@ClrP$rA=IF:PH/C$gD37TchX*O=a9h-tI39)7:
%B=mR5&dJ*?0@,`AWi=]]EuO3ZG<+PV=`%T-'-GQM(5o3H!mVB$OVs<;Nbf%qR\lLN6HcU0/U+8'(l5R8RH=qnXbDb!eQ]]j4taO?
%kq-S:F/.[?>_!<b2et&<F5.nVF(ii7Fe\SKY.5h'^u9,rK\oH.CJe@KIT5%3lB2^o1nm^XGiCFe8rK00`0DcS'c:dZ^%Qm!1"D34
%Dq<DH`T:J;5ChaV7VWO1[S1Kc/aR@2hY0t15'\6m"Lq)IFA0,>)UB0d?NK=a=5PU)YFN)\l"_dUr`PsA)!Ptc,s1)'l-mnMOo>[]
%\:-'-nRdndiO4>%ooU6Y#1V.aUZOMJ!OWC&-KieXBZ0p;Vtc#`B.fZQc_*IBp-c]"aikL-Pll/EZGI^NMfWYDiLc<S=)Ger,c5VR
%&`GAb:AOse>:ajd\hi.Fr/T=aCs=L`.<.)u:KmPV!j-KS*oXSIK5R`_,Dc>.D+p2#I@aj[ZUeS2Y^#c^'18P8Uj]'Y#btY?V389-
%84)35H)U3<6'B57a,K)9&S6'X[XlMWRZ)gd*#2tV*#V9p+&#:eM7O7b*DJF'BR-J!nj8NQP\[99Zlb0M[CQOi&\&R0-lkerr0!LS
%Kl\0po"(?p-b[/X,s-0,:#3[Z6ao<oFBpg]g3T`=(jRnK7L?_:P#6$27&i39Yn.YFDNI^M2H3Wa5e2'=@Ph]B?"OZA.qCss2[U>F
%Pp^i%a(pC-(uW8+Gr(Jr's^=;EGOK\*4d`S1s;an0pk24Y6\f=0plouXKnO/1hMs*N$Da&9\kRWONM^HFJ((JGqn^7>>mA$N6Ad0
%!'1=C\7HujM]=!O_4bHtVbXh'5ZHt9_dQHNN/Bm?Cs%8O/e2`PPmm/88_g.imF>&IT"^64&53\<2Sd5]Pn[aBI"_4Se7t,>K`QnT
%<WgPsMI^O#1FQ6K:ea)DJ=tSFi$/uUfPXZ#Eia+.LeU'RE>CYA!\.meD:0.to_DM6]R?Kn_N\=EJf=I6EVdf*gbsb'NsO,ug_p=i
%q5kXL(kYG?K(f<TJnLrA%7(^d@\NKh=@7OrRN[0dM[/<No(5pJT'lA*aaeqS"JhePVci)42[jj`GiD=b,s9;[+De\(jC_5[5UW!G
%U9`^f"4XC@Y[F7"5d$N[2i1>P/2k6K:0fiB<DESNV"0IErJI)u)QRl^Ubk[XMmF.V"Qsj(YCk?DZO?ug7dIo)/,ggs\`Q;bNpS7t
%K7%;1E\rBt9T,Q(Wc]/__\l'Ello4f]?'DJj<VY]*qN,$jRL12lE/%P)]lKBjmp>00td.JPFTU-cj"MB9X+*%2*`see0JRT\t&E5
%(ZT+U'QG4D]7J3'c%;2uGH.gS$>p]nqssGLqJYkd/qDG5(P?m10j8%jXl@rhAIs:04.7'#mCr);4HO?U]ZlVkD&+Xp%1TbGMoItm
%'oNS&Yf02H&@aaJ_7(1j]#U%t-+@N*G64?i,rjWFK^Qf,eJ.&NlWuJL61R1OPfO"7/<NLD_/KsAX!%AfGKE%[^aom3Y9gBN=K@K:
%ZXo596IN:.?nAUo)AMW@#$0&$#0L(L.`Xa<Y`l:B(`NUu@4Z]]7sLJ_IOhir(m4Qjb7T7%?*m)(_JJ<ZU[B&\->qSA3VP-^"n5J=
%:h3rD`CHPGK0\]oOud/mODE->*Ku&9m,,'6$Xs0GlO-!KE=7s").8aV`<hH*K,ip4>h0i:/$$hIpacS4;l;^FDMjs3orQb@If",&
%i@7>$cD_qCfbOo21T$CBBmf$"*&rq]7f*_[>*@PSfCjfP\LCsfDF3Bqr7colf`>aIWfAN@21;]XG<jcCITIJu$Eh\!l7Vr1\?"M,
%1oH/!QpdI<%o%X+#5WX5NJ(CK*.m>I:Ng.if5?_$DEA+0D!<.5boh7C,S*@s)CQ7(m3pdAjcK]R&fge1RTDXpLVQCmganJEk$S2N
%ZLIgpJcW$c6"NU1S="@a($W7S$]IM)3'!'fQO20Z'XR@9-TA=3>taVDlM=PAdl[i&i=q^F)6!\LT'a&H]_W,E21%8GdIG*FH:JQJ
%W19Vu`/i:VZ>:eU*M/FhW.@!?D`8@?D.*B5HK.ou]lf-I,UZVGD'R\Ya<XB,'ncQ?6`Yt?aUA;6+kH6N_\F)`S%<Pa*!EO?\F8Aq
%7DutQk@dNqd@SV<(oAM#>J\kM%*-'1_&,;r='ZF9?l;rBaU%m":.ZJY!Gdn^Lu.X_>jr!nWVF.LSZTSDJq$'en/HI?l;cZ)kNf`\
%n?3&!Ju`t!\r6POY2Dfl#hqeMbi;Y`j]q:.eB7Ph_'/S)"@#R3o!j\(;O\'r$mBZKX$u$-?V<"`06tf^H]]<"TS(S%"+@/?ZW[/d
%,U5[DEP1./[hki%YY\7`7O-*=L#>\h21>*`_>Ol#DV.`*5LVD9?Bg]&SF2</i&"5Zj<n3Gng2R;c$B.g=%'d+?7a$Dcm$pI=<oOa
%.`2hP'+(Y?`M)01?'.]j[rNK7/%Vg89EL>GP#r@+)F"j@_l'-!LVQ@^D=t;9=OjJQnnW+OQj'f71>"@uM8YemGXC#FEP-NN2U$dN
%r8$^"C7lpI&03r'_9V(cg-C5/fiVXK!#m,rgP,V06Q07&e!BXS_DcGp09:.7UFC4kTs>5hMt4tmP]+j(#;Aa=lo^U(^>?>_>.a++
%\P<=Rc0h-m-=%Jd%bCSW<r>)oIIaWn2aBC/(Q(",6<8^m=Zd5Xd`\.Jm!OZL),_:3//X)s9\*ms.@uZ6?W?hF\ZE&*WF-LV8j$pT
%-@ubHVqpSUbm4k+%1(?$eL6,b:!)62LaO1f*Br2/M6jFc5!l`r@%f:^r7co\8NEnM"HH(-1_/R7o%i*?bbYl3!bX4Y>JZ+hMCR^3
%?7u;$#pY*(#K[R''M-SDekVU_6IAZgFDlJ'0S-R+lXo=O\K\AcFm_m]E?;`oTUC%DRQ,dX=:7o-Fn$>B;reXbia&k0:NWTS))'k"
%l6>k]'V'k28d.s3`S5uPn<V!NZaL$scX'8=npq9&@oXnf8@ICr&?hAH^/]&nD:Ea^gW.iIn89bu9!$H=3&c+I;d'qdqMAn:X+k-V
%=f<nUM+E%Z*sSYi,3eGJJA&;BZW#7$C_dtI$qWkk(/s`IgNI3*gEe8QmtqBC,>hn;X``)&86kdh`hbY<Mo]B4^\:p]bR*-QjULhd
%e4K4e*JI%E80LZ>Cse/aQ$a38WEt>qiUif^*MeU5\)h9?U6hqTck#UVaWHL,,51,`N2!&TM/.9pd:]`&nC6IMQ)k-tG'^cq0JSYY
%M\Pp5q4WO"=9fCCid<Nh#6ns2?.8[;j2@jA"EDE_XtbskDl\!:=K!@qPMEt_b"S%f5OF0K%8-b\O:W^!W(cV!7q2bG:EP!AVIt@<
%*_J73-_YN[(j%@h^i\g2>85%[0:ZF?o`V=@+:WTggMXTg*:"cY9l&^plWs7jLX@)ubp=TqX<1#uhDrDF2X'HIXbaWVU$a%<Fm0mb
%)]lakc,C1AZ%R=X10cA`:1kkB0IVo^%#OSd8(#-ArWniDe*-m=958e3)-Q&6S:$dL'`0*V$8!]+ZE#a+:s5%dX#\tW!7@'8+mMYQ
%+=?"YFig9k3=mDO,lL37A[E3T-\CgDGltaCK_D6bMt-il(9VL=a1JkUWbjHuU4KO`p$KYkZoC3LE//k('em:Z"PE.n!"S3rQEZ*r
%Xb(>8@P"30?LHjoIltP.LoI@UW6"5mG"87piKf@G5B3p/>o;gN=m$>)oL`.S0>/=s[@jm&b4]nd5'3&>,(8An@GZY6=>N^b(Rc#@
%5o*!(o`\dTR>kT?,Y6kdUE_qK.#*-K8E]B#i&\AL@$[0\Hm8Je,^/-FBU1Hl!p=-"82&$PE@6V-']a7/7Fp3&7=n(,;t+4cs-uU3
%8h>\+>C8.T>=$tF^"^[6Y_gI.Na"6<P,).o^AMi3(P5o8hK.\Z4c?F;c+5P(q3:=PRaBoP?la<t2<^.E,d<DZbWZaHa2,F>dW2IH
%gd>BD=la,eFIK-t,:U#9"LTXkC-I9e.us<:6`'":eVsEIJ0Y>Lj2iT+T4<?&2S^TklgSN9eWe'IUgT(YP"^4)2hHYi8$L@J,afJ.
%nPp.h%`3#g_`4r_,JCdk9u#&EGVoNhEY3jU7e;fTT_,1gL2X!+j#Ci*?@pbTaI^)'@//t'Y$8_"F``qb.WdA6O"YC)_P!q=031:t
%&/6]j(l$Eu-W1XNM:3d",\d()Y(aQa9d?&AN/5AM.gJ:f""FpA1;<YNYVf3ZZ'A%=0Z!SSh43,G%D#djK(!Z<NAlDud@Ht2W/^o/
%k,^"d,X*Z!fc"-M!sn=1Rt1c?EYlJB&f^mWK24C5]oND#RTi?*C.`XhV1jC=E[l59;tGkr)eQ(u3)j><>Qr`023<9Qe%lkbAK)h6
%jEokW0SUEs%ata5659$=":3j\I'*nA>4V/a0p/Yki.(*5<gP@J9Hk6`gPPDPBQ_50@_QV/0rBN&i9K+!m\7IW.Z$uO(?1a%o6@=k
%"AL_/FWW?:\Ik;LN_r`mdp5u[J51,UAJ!HO+YK.\pbU'a"J^`_i>>m]B4qL1]aP#6ZfW=S"qp@1ihp.&cmTh@SiG4si>As[J.8a<
%#hmk4h]JTB?d=IOL/tted8g7fC!P`Z\me7N1<=/6F=j9iabR5<KNhh`6-9rCDPBbJMA1k<GXN+1dI`lhQ,sGG_n7>Gc:fDsH0;=,
%"'Q@lQeTZsaDp0e/%DI$kTQ;!rhO+4Jp.P41%]Am(_\(..u@!388/0pnA&b_=g[*ZKNJM7P./HA=$hk-Eu\fAaCH2$O^7>_MQ,<-
%fCI`CW>&E"%r:+m_G*QNDBO!o)H75RY"ikI\EBUjg_@d0aogY\+sp_Oa+R42\$^#`gTEro0,,506t[aYd=i2Jjp4F=88\"m>sfA"
%k]6$^ZolOYn\j6bG9[b6Ud7d%0B+1d19'o/a'2lgBshL@'r9e-N/)<3[.h:;kZZEn44frRL`!P!5'c5@Z-[e/[j]"Idip3]NSsIF
%=de(Sl<;HUQm^=:g0A)aLFKllUMj#d;9+U)J_#ah"ng0!b!P%&RPuh`D7'<1EO=AR)Jh\NmIm2^?eD([lrlhre\u;RDA3f,-Vr_g
%U`jg]HD=sP5/s8:Mk%G%-YZ<#`B`2l:/'`XJn<:cc24Ahe-`/7Vl2_7#9N(O0;%8r*8g.4g_@bl37")**V57R1''WO4_VKb>DV1T
%7HlPj&AfP9%bl[g,HcRAG#kDO]W&KU+C*fYH&6b@_8:]M,/(dG]*39'I(Q(-NE?p7]l9Gu!(.cQ5?jn-g_G-c<=nu;S16(!2HZ%u
%)]4ga#!iU9&T#6`!uUh!n6-]1"0AV:Yh)LsOi>U,N!@g*fVb-dD"LVhJZ^::]cZt_/Vik=H=mk[!W//&Ceg*odYZnPC+RhGJ.d,i
%(lHRg^6-9UCI2No"P)7l`tTkiMh]N=$Fp.4NJ"5.!&ar'DG9clrcUZ,blDKa<$<HO!%\p0[C7K8b/=eH(1^3p]):XtZZL<ZGH`EH
%bJl[+1JpgMX:W?s[c%uOJKH"I8;Mh3FrrU:ch2CgiL%qLDAs'?,&+R5EI&`=B]SF.<72o+nAEre6aZ@G9hYs1$:^0\XF;.ap?I>s
%L5Ug[TLC'u`M%CJ=]IPA\rjX$U-OAYUU=i\#)4A4E,K($F'7DEDKa7/A">h)9Z%+f/9<'_/40'Q)KK-=g0rEH`\@mF)bd<uj-Jld
%l\5mnH0,tUG8O7pr/3'=HW8*e28"AH,XESj%+[[(.\nb69*jQ(Q"L6WX`9_3):EXTJ^:YBQCTZRiheDO4p4[W1mC,,i)YpiZe;#V
%*BOrL(aO@.g*Y;ba_ogJiTNhSSs/(Wa=25;5pJMgrU?$k)\a^X;TB94KTup&].nUC*n>]aC3Cimlh`ZF<"h\3\j+r/gp/aH_hB;T
%W7dk23tdmj:PL+9Yrj-;#HYjQ5$nKFR-P5FR"iZ=Tk5Fl(:Ae/p*_tlg3?9L4W6>7>IRfI1aYL^$"f6Mf;#r$hkctJ61!a%B-=NN
%/ZO/^Bi]VfHOo"VU"`/ePo#?O>JYjb!$1<M3Z*IH^I<dMBp#`A).<t8XJVYo#a3)KfN)L4B$%[4(h#]Si2^j\6U>Z6f=k6D+_(qg
%W*2niF^eQ,p:CF<(4H^0i$u5t2ljRSn"]:SeDFK7k17#iYN0^\kj&\cP%3$]N'7Ik/FupK!N!_;$d4Jp3P(e?.agASVRMnBk:Pcf
%f;!80Ub,E[lTpC.pU7R5]Ga'AFrpnhL9N?kS`G#_f7NUp&n2rM97uY9hFOYJdc0+QaF6KC%A"!<UNrD*c=Dlp`*LEBS=Va5p&g81
%AprCUJO@#J0#D4+"%fT-S6uQ?aq+WB#S5j9-quCP$^eS!.2Mk9i=:h#OCP\2%lc%[hp.fNJG/?'61AG9B;V$5mF1<-*INC4B.Xr1
%=jM^)6p\4s]U#B*CY*gfMCaSI7La?lgkQ?tR/>RmJ[/jmng]gT34[^O9p0$:3>mY94G!pCD$?%rE9MLLgNbHDro&G#4)22X_@AsX
%P%2H<4(NAq6m?(]lN<Dfrs$?J5O1bhdHQ&\_2,R_/s47&>!Fh/JWIXTc"%GI@G7dl>dmDS+JJ<<V]\A[3Q!:?*<nh/$/PltIVih6
%L*>RChAGL!ag#]b"4]lDj&M_^:DP4-9fR>*](U'Y.@'ah+?S;s1R&nsL!i=eM2VBb#Uo1UPEUQBYjf@e]P=hs$.V3`3*7(DO'It'
%lqAeF6T%0Y4p4qXdemV%1jYk%d<IGhL+R+4_JQrW2``\8A)7R0Af?;9F@)j_E7X4VReEj0HjDq/_j5'&Vn`,4Vb_c\s*gbIB9hBQ
%br>EYs+gUfk2jTA/\H;FLZ0o'FHd08oRL<;YbVQI$I;=^J@A,lDp50oO#K7D6srG#A3GRqS_t"7UM=3)%%WSG1ef3bZYTf"K<OM@
%L6ZHui_D1j2J*:6RAT1+Gf$L^0?kWkr)4k=S]hU9dnqMHC;N,\rq@Th(AtK>,0qB<'#Blq%-]^#0*j)O5id92m7Q%I`1s!d4%-([
%3o86,_<Ka?R>q)=7j45B@dSQV_h^qmE\,l%^&d)Fq_?\4lP\2)jS<KF%,BSnQp'j=nqO74TPR5THYT*N?VN(f13B6Eb^s.@PpDPT
%:$ro.&73:u0lgUuBZI,%0kisd?V!6;$Sud@`mYQV60-l`&8=afaiW:hZX68S$iBe^!*ha@D<b[*H9g9c9"O;!p,\BmBT>CAUTQmn
%@EX;(_82l#8Z<1E5rXSCG1&uNI2N;$#;UtB3=?I)MkhN@BhH2K/]9tL*u!80'pgJ<ZsAf>6F$VJInVnGj=kPq[9DO[F01ES`G:c+
%LG[3\4RcL[5!%&E)he#sMZ._6bTN*F<*;b7E5Sms6,K.`:M95&/b[j51mq;g$+Zj:C#3X63YH['(,Ca_AbiIbl(1A0V2a8RUm<A:
%64rYtVMCk.BMNUaOe*\1Z$'>*?e*Yq'n?[#(7?ksDno$kdkK-Gr*+kD-K2#lkWVOJne_LY5<gTT9P^/B-I/-D"bUS5iK5"m>qfp/
%j8hq@mlb2r+8No8fh7lYIO3'QS3fb&GVPD@k;5P=$iea5fX9S`I]Lb`IIQq=hrHq@Q1X#+4)eGtCMt$!jQZ=olF>ocQ)D*3P*"[O
%2ip_$`uA:L>>[BT%>Les,b[kol\K*:eWDfchGhj7\9r:\)19o%:f!8`#T%`"S+'VV,m\)=CZ\U-gf.%7d`1Hp;'DK*'+`T0q0D[?
%*]\kLkaJ-SQnN(B=Y.@=[!KP@1g,>0YndSN(LTrToR\X#'Lt@35qltl[&e"_Et[5e1R?O^Qg.%mLOZfT$m['YXS5&X3K&KGV,kiC
%.etb0.aXE4/p-&t`K*$N/*j*qA!E0789VdK?UIL]]_F=)MRopTfEA%37/%h9ZOjJ.-2k:1ojZ=#FWcZ;d>']Fla;1u1V[8YU^WrX
%r;22s8AM@:QA+P\E<'1O"mNB-RiWP4)e\:uAuM@OF.:SZil;_i)p/:O2kkZZ-T[_,Rm=>T%rgJE4P-Xu=<anI>Hf5<,h]%"N-M?=
%9jd\PaL0N9_EXE*r?6>:B/hT@R:GCu4<RKY@eu5cg"YnJfQ6/igQt'NW7nuGi&"N)dcL;A:k4J#.T4*Z+nH!NOgPotXATp0S2V+U
%cbs</G_-.LhLY,o"g9b>hn6a')16#+3J5B+l6Yl%-@Z8%LjiF_\)W!naMm49kJok`d#n9-FH/@`5`k^#@!Wmm)PK)J1[9h'&#dmm
%i0"R3XPWQra=G3>+PlK0%t7Wj$DI>sWJ;5:maFpi]l$8!-%=@7L_sJ,_1\*%)EbtPdcs/MaACSh2Nrf4B;J!nBWb)>TUnU")0rI+
%cprgC`oB'!`GWmHB>q%jqqBtSbTX@oS]0>qKdW<7o\T="gu*Rhqq^iqgtVZ@@[HG5KqF98GL\U\_#!Q7>?2\UdFFF`iFSoOfPZ9/
%V7_iVj(n.hLhfHMs2Ch)Cc;Tph*d3TmorZ#j-HuP\=d\l(G=cdm:7[\cF14lYsS<Qg!!H<G%Oa!dI1^Yf0BmjQM5@/aGa8+pjRg6
%.K_TKh1Q0j6Ft*tRh.%S86r8:D%=PB+l+8cYMCQ+%VU:j0hhO_gq0jjo:UaI-Tub70TFfG$(7?[cC,N*"(utr90p"J[]%:;BT'#*
%jOi123Z-B0+=Ii3hRha`)Jd1I6__E6-/Rlbm"*nJq/ZQS>So+K"%R`RO;k&pc<FfkQ/fmu*tliJ2eQNIH(V.f``7'QA4jqd:4FYu
%M5JnIHbn(Tn$k-m,P'KB9cU<BmK0\\62e8b-4j%UqUu-j!cm6uSui@_(0^lW\#3s$^eIm"I0[H77e.."l`LA+(m6oNCcT8?g].k-
%k^XT.+`K!??GOq^Kg(r>68D'k\$4[;K'.BTFKr6$5r_NjMB]h1Yd,$TnHtdQG#[*lf'AhT.[GcNg-i=U-('dJ"E$Ji<tZYW.1H%1
%%AHRS,:IMr`#Z_\DD-fHkF;`CrZcM.UI>jQDBV%G(UrFW\TnZ$bQ.Xii"fJY=AjCWN*];>5t);(Sqh'3jnf5@NFRjW+XPiu7UWs[
%<$c^chpSgqP%SHoN.+0ENRn:@3?bBL?Vc'rd;s\NPmQ%)KE.H<5Bq<d)6sG5-:+cFV[J=KUFo$0#*g!Y\3^%g:rfaUY,q8ockj0n
%pOLkT$`tBXG9u#(M1]Xk!Uk855]iqo5AdS2.%5j<7HiuY*["h1dcUL[_8qe.;-<"X4[&LmBP.l3i0,`p7M9ul<_+1:f]cre#HeRF
%)"O>q6i=6Oq9)JFEGSDYBQ]XU&b<A\T`A5>e^LrLZHGN([P/V;E43f5*lr":E]Z4XQY+S)g%$3\<YDi.G"%]%#!a!ZiAi;ZJXu=!
%ph$Ik7<c#Q'Cr2FZuTs[!Z0d"?96+kdoWT$FLXEXb,m(!kBRl'q@'**Q6.'Y+9N7.SQC4C.EKC"Bn`][]14AadFFLbiC0plr@l8N
%EpK&^/tPB,V*35aE]fSk?Y;M\iQpfA8>HW[W_^5YL-13%iLlg2`s*NG@Xfcn,eNR3;,7mm`3\FAH][G%=m0]:#@j)Nn%ol&2W8$J
%'cD60Ib)eIc]'mtV8`mJW)@?)1us<GJq\lk@@h"#(-acY-0P:Z9$MBnQoGa"5R_4D8/8F04YC-)SDHjJO#"%O+YKp6"A_*58?E-K
%c7Oo2?!K3R.`fZ78_GuK;\i`CM.[tn@;a:XaWG6.e=4>5G^=?h[L5EDP.mX!'I-*k()]Pd)]J<Un471on6FJ.^AO`;B:SJp@dcrF
%i!$*g_d7G5S'F.kdidj7"g;hhD#2\#_uH_"AkV!AbtsKY>$W"$Nb=$!2nuC?E#B+S?DC5H$=@Yll>_IIAkuNbXpKA9cl7A!I[h-2
%?:r0<_oa[_YSh$2DSB*i*76]N?[`C4,n)B)+PV1V7Wi(p'(EX&"LBL#]?hTMP7Mgo?Y]mgUsPLdT!'TnT!\5(:9j)U&`FX\eIoes
%M&66VWtSoVml:2.@6_%&+L?g+G%]:>e_s?DM#J/uA3FiW.i?(><o6>aSqC,^=72LhqlnB/@4":UG:``8IXiQA9H&+PF-5PeT&TgU
%GXk_p^:P,A["O0hm'^agE5M<f\LAJReQUacK(N[CEo]Uo8E-U\CGBhNVJM(KYN+(h8:YE5o;s0WXJV1#Q2pJYGilqH9sH6[(?<fT
%D9sUH(VXh`%Sg,M.1-j9n':kEk(dSQi>o;A_p\s2_[&GcK._8[4/8!])Fm_d%BRIN1a5^"`iPL!@U@'A%<uf%"'8Ptn%cEP)gF3R
%7HBfBNJ@aLNgHk<\p`l^&0uNdZ`WE'2QUc^c!U8&cF(f5_REPE`:kn?%]GlE>&`Ajj*K%2Ncp([o[G6VU8Bgh=*2D+C=O\1$C3PX
%h\!0ZZ9_/bXm4]%dl]JsM\U^ZVQ5^YX_Vm@]FjomP+7K*N5$EYn\\C2]`u\-0l[VAN&]3-m'rPGk$ZSK)"1<98N$/"96]KjJ]gd6
%#(B"'-@rf\B74:ZBm;:PA?WLc$ZWT;TN%U#)$_[HQW'rWS\^Zu-i$d*)8'QsOB3Mtm"[WTd2OIIkKG#"=itrY=faFRZM*Os$/Z&2
%1T+mtm:DN0QaS.P>t8gt31b0tUE?+WF[M@a_f!tf']J/UEfeRiA[FGH8A26H/9skVK)*8c#+f48=q6=-i-;Vka9$]CN#iqA>[/O+
%^=<m1Iu\U>#i6L\/%GuKbMjhNQUN%!%0h)UefZ)S^q4>(=],84TJ>,o8C6%R5)&KCOkX#n$:b_7Pq_,bOtge)79%[_\/[tKj[''<
%phnF&m#b_s>q"2>o^9l1n(0*dM0$3MSqCL.@-?N\^qnFFe^d4WLMiruLNPP1,'aS]6<$JXE=\]bfmLe2WtU&>Y44as&/PPlQ15Kg
%:nAFqKs&J*2.>c"9)j^q9[GC9(tV#=1/-o8(Tr@].hlG6OD4B^c&lNg"4CP/0s(#L.+2A^BPmhdJus/8NWq*UhhKJ<cIs.?9G#=(
%p,R+`lu4d%o'gZHSqB-nHu)`R/$#4C>h&BO@q$<V0W6!/]A18;=&*-;90JYOAT141VBA0dBcY-5E98)lX=.5"db"+\b.6qiXB2)T
%JbL").j<3Koa!+NBk`;'jYkiq!Y5[ZaN<EuY_XBd/S'o_K?L#A'kK&SB%JUFK^^;S9,SnbIbN)C.(gi%=H",kdb(5'Wk]q:/<%ul
%9?(rGY4/lJ4[uCU(Th9O@oqR3$^%"*04+W&S%W[L2:(j]^Hp31=W2jn_CiGRj9=j1c<+;e/C9>4RB<!]@lCUQ<=0>WU(`QE%'hIR
%L!Lp5Q-F;U+5J;X[;J_#keX@gU8oA0nRUrk^)U.*O$/^H[G5o:doIjj4c)`"2@T1\'N^p2=1Fo?Hl"t*jf3:f1c)r%VHhB979=,6
%KpVae%XVSs\"'sLdm&!+i&*DtY`7Y`7(l#rCHLMk'^#m.nH,nariDaA:.,`._?no^WJV#PkBj4L!,"(+g6LIWLS`!5eki^2bp3jg
%$8B+#\#'WCZ`/S;F"lpi[-TH;g[9Iu#1D'i4Y:(ml:0c#\\gd0d,hooiI_FeorBg5MXO8FF*//qS?*_CX?V"lkm]nD*`=X]YP75A
%_@\fEgG&+Xpqt,Vc^/&f+J#%2,:m,`.qLt$-#eo=FYDIb!'0&X&70,qG2a@^ET+fl,;utBY\(aI*1=P^-#^=RE==RTYjIn/(udlZ
%`S3Y?Uqqou^.\`>(QLD&4(7g?^c8^\QDFhYmD=d!G7Y`L9/[^u<lI$l[K/tj8L#(o$,q0Wj2+VLLgu`1Dtl$jnB;`<'CTsh-A_\`
%G\),6O*\GeUb0`Pp<=?VKh0j>Kn6<1LW.r!U\"-Pd.@o#Jk[)gP&jU#%_>f021\2@4o#P]F5N66MB+[67Ds[c./O534(.!O'MAZQ
%]s@"gcJo]r)dPe2[U9ro61dK`YRd>EIBpbk`TT-M\$*WgPTkjk[3a$1Jr<:hqhe,+PDQH0@Kh.[HF%!pV1l"YElT]I]GOPeW<eYG
%#.tm2^20(*jt7MCog#Ph78HQ&>WD>`&/*a1E\``b-X>2b[uq`n^+>Q>KF[`7,[En)m8rjg*'OuID_75&T-YIRoQdFdM.<220XSoJ
%f?RH,#8MUOAgOU:)Ks8U3W2e>,5Mpe(`RVO.4rhg9$B;0ajh:UZ$pF)Yn+iLftiP/?;AF6fo_aNYK,eH:mOc,Au@b)dW7B<h&+KC
%ZW'0HNu$p5Ld*0s7!3QY,l"7F'$p9Ha*st!gVRi/7nT#%S11g'OVUa3Iu#?%%Rk.?qGbt]Y]6>]4tl?6TEB2-AY\4Z3NXWT5L9Th
%'8>>$,&Ln[Q[p0^CY7Q4F[pjdZHEa^T0M_PlbOPKT5rhH,0>13o+PKX0cIb8"-SFDNJn'dL?.T:]:ebGVO$S'Ats)t#76hu>X(GV
%d%B%ZM.:.D>lP9L`H/PZU]<_C5MVI\#OqF,2[8O]OI8&A$aqs;e5Ba?=-ir3n_"],qSZgTjAgCK^=U7Dip5lo0(?Q>Z^R@kCNMMF
%(u8m2_=SSN25QL3CuZ&'eK$Ui7U[h$nYiK"rBm7?P:lQ?F\e_jW]&n!,&d0+9d`68]&Q02B=g2,8JCV_hNfn;NATL0'V(@Lcd'`,
%n/PE'KZg!K(FkTe<CKNMO3l[+;]OI[X@,f>X,E9QHXcDD6S]3g87UpD>Vm]ab>rP(,krPUHD)RWIEmhH91o=Mm/O.5;&-UgLr\,;
%5O(r0iDN<@S@?MmU'UI]:ACP1+m?&89/S.AG]#oAqr)=YfQJ>qTo.#uZ>)@&P^;`[WtDF-fkOH$WeQ[Y0WQ9h8P13bc__m\F=9]H
%)Dumm;WZb\+3F_nF61QVA;d;SW&&Oj'Vk.+TBeu0/U:*[;5us$H[_D#ge(oJnG;c0GWSV4DOgZ'guE6!o+bXt2E5P#n&$+7Xe(Je
%iWr@A`:mkePPOPVhN!eRcf5.W]X_ik6k6_*fFp_T']I$OXX''X-@;,QST/Q2FdO;*V&P2E3D;4!@(A6-'D[%(-Tp4Nn060G675Bu
%m'-5)1WN/*>V(YCEL7jbWZ):r_qFPQ$pRr<SG`7lh+SgAR+_]ndC(ms"j9$3>YHuCTIWX2)b@u^`2bo>=u([.9%B.5T:Jq`[B=OL
%34tO!6<O$>:h1nI`iOHBM]$UV70QFR-EW9D?&6[A3&VaS7o)?mMfTX>4[1^mNM(d8<NF@e8V^L^Zst46R(H8&.s4V5>_&.sq(*:h
%`@-^^C.=[Ips<W7%%sd#,]2%13Jg'YOGk#Y`?kE=/;dDdiqjol:#2I:WS)5fC&mALX\o6JH/WWPj[D=('=cKG-sC6V9Am@?<ut4R
%5k:63B)7&dCl]@[2Si$LFB]GN.bl]_M,Mf1+R1K.Ijd24;\*C2/YrZCZn6-lT*AYhDM;AMqmf^JUd978aMfdS2.]^e\X_IdVU`JX
%?"O/QW1ccu*f:DL;&m)G@6n(<5?qct?;hGhRnY?9)TJHoZ!'LkPfR;/iiD*o4=@689K"%t]gIPe%$Dj^fn`A>]4;)3k\7Hh-^_1s
%%!'CN:,-K9Zg(*=8NfUPX4aPEG+5GrqmPoa,%YUg#_eD+\)>(;:e;o,QnHG>[]t^-YDK3coJ2Z#J=5elfs)f9ef-obl%E^mD%f66
%rDjQfX$J%+_<VG__b6G?$*,-4b/3o%APL':pbiRWHuX_P7@k-G/jS=T%*Z?rre+A.,d]-s)j*qcd?`!gP$MAVEkt'^O\SHW09O(;
%#>n8V0)Qi;@"]m9%!(A)1CML3$>fpR"!f'n':J$Ne3Sm/gmTqF0PuK'52,9YXa'<a#4Q$s^,R;<g6+$lV+UCf*lW"n89s)L;*-QM
%017cEi_1%K@&=STl+*e(Y*K/L3j7%\oV"J-i8Xuu^;[o#M[LW:GB6pZHN(8UE?Njo'!<(g0n1s"biBApFL`5Pe<+.i:(\<6[q@C9
%8>q'YUkosm80ei!71#/E_D_QNK1))t<g5TdB[+CE2_T'eGbTi-QU+'dM#7mblXR@,_3%QGXmDbqcU"\^j.mhmGZD<bmcrOI(94Tt
%bh>4,]4:>4/4flN*<YRha^I4<iZ1P!%G7HsO=E312,8tEFNAF"Lg)8`KoMV@$PlVo7>lg,h1T\#$`R;T):CMbPmEegV%t%c^Hb@D
%'Cq$clbE`R;IjSj*4E-5o3DS+J`sRpCYY&5icI0k+)9-(d1imfOc=^II1rN.kqpYUmt3bKH1#d<a:I51.p*''AT&.E1m1lYYX)Q)
%F.TUiH%QB*=Il3Ei%0eHe";t=Act-c2di`#.Xh`2**>CpmX;\(Egl-sr]d1FauRVF*'[,l2:<s,>aW7"9a*/9r4o;I2&jPcY3"7I
%r/5o!`-diS<B-]BD>j.ERI)Ms9SL=iQL)'cUq`MG>X_^AB8%0#If00'3'R-pa@Ge<>.>"L3N;#AcgXZ+XD2X'[p#BuZ9te_,)Hd&
%5s\=I(Fd*.$K9h:@!&l3\)&b-!&A>l^Vd#a$,4rVHQ4/!T:NrlFZX?NLSb]cdcSA8-T7qihef$D1jUD(P/Z\NMhc<@)rA%?YG6L"
%`JogV^Psq$^6RctY"C+1^e9>+k"b@0Y_0HJM&F]^DLA>Y4>VRB*+?+$jP=%HE"i5e(=gK&M2-N@e^Qm4H\O=X24_!CRU1k[F"NoU
%>s8+p,D$.tE_!4*3"!gTojMVl_np;iol:mX$:$<9>Z;>^KW&P=;Xp;%iaWr:BMoH-lKnlISFXi7;mqnWH\TH#l!Q?>_u'9i6p_gV
%SG#<\iD\kDG-K^r#"/dnEd<HDGT-Ck-j];<G).\_5=>oDAH&TJSdar>q]W86\VdObc3c6$rV2-R,*<(H[?6fG`2[&`+q*:(Mcn:6
%n?Y/D?q:o3")Osj`h:,gP6Z"V8(gNg,AGlKY(/U"jO6o_@aa)t9D+f6hq'#U)3VCX(\I"dU3);0MB,66A0%uf]Li&q:quLQb^kIH
%fgj*.'6ML#4\F.K:=.$XE0F'Cnh[j`;%r,uB0Hphfh=Bj%)h#o6P^TM#_*,[$^Q2oE3H#>MX3hVSpjnu8p8QQl&l]8*(7G26<W*U
%r(=&OBT]B$G0DZ0H;n(u9YrW;N<c5cXMu-d[4m0JjCN8Y?@Y$d55)*,4!QS/3ZG#SQ"LT'inu5+4H158+U1$+K4q-#GG05tn4)$S
%1oA5Y8]-,R/\,rNPe!<.."ap88/$XIXZu>`-4(-Ra$'>@qPF;;DS'^;H\(u9]Q6^>)5&&lm"snE%Irp$Ob;FCMf6*Z447Ad*Dejo
%kE=&ZoC$_iih9G?l7<8aQ)LF[AnVAdoH-g'A3!#kXBmBF`PWHeKV],dM-'!1FS07!Z[2*_]!Nl"/%;KgmgZ(N!00$&g7jFF-sF?#
%!uZu7r-I=@lD6Z1&^i'6%lpa\QZ)%.PC[g<3:ENtMFQZ#<LF]og&n9Hcmt&Q8:[`#6&1-SmY1HjPW9eTZ;Jpdd^kSS!Z9?gRA21E
%N;KnUS<7hBC)-p(R[cS_XH2P;)#9+Z.oL5hEGtVO?o!*=(<^l/Sq7ZHKk/+/giJ@^7>i5oUh5#_1;qg3LbS=l^T7c2bK9J4"4@o@
%>.I8./roc\Hi<a9&73@&jj1(@'kTbq#(M&U)]%kDSt#4^V%ON=-2.:X=J5/>K\V?Z,3P:UM'lV`MrtL=VR"%Om4p(A.e5+/mBV[6
%>%0O`b@?pQCYeWC$9$]q0(?,M`:/K@`s^d:$ErdddX3;-,h^=#c<RbJ5u&eO;:@dqr%"F\W'`pldm3u)V2K`1-,E.<#OAPV*r(M$
%Uh@9m0NabZ^,L2Zg.h@K>(h-pEpPF2K!=+F4i^tT+^H".)c;F9+oN?r)i/0J^)<b:#&hCbRs14=$'FmWj")6VCE,;+#'P8"'r51U
%pHsS^if#a9"2'_)@]<at&u&>V'u"6(Urq]p:t/R1H=fZtTuI1T'#If1,*=e%dA@gjD$J%@-qn9hRY]L45^JO?[d3S;'dL>)7ni[(
%FmjZ>,CiBPnm;hiAEcnQe4J?OYKu`r*#)oH]7YH2]#=+kl@Rh)0VM.tTr@"j65Y58l!"QkUDH:,5)C[K+5V2"`+K9^5WSnT6H-';
%Jn%iFfjer"5bTKX8p5>N-nY`rT-t`JML].VYEm\1Zp@AI2O$"M=(F=N>a0=Z[0=u.%891;^%2HVDo:ei/Zs__Ls<A.!KRBP<PN%X
%=T`)$cPId`e'dnkh]9.)<r)66'O[P<K/oUjZ+r4rE>;cK(uks7ol@fsW(/29NL6/lOG^+eDpNFeRCGm75#iS=CDV_$?M6A^"2,Ug
%VO'RecM6^Vdp=M.'lZS*.YU8s_.CTu]_Ah"S9U2R-Q]!5_B^<;!jFIZb(<1NKTap-%m7u:#Ci\Y?pGPW**t=;PoDLjr@sH\nTd#c
%RK8#04"edEA,5oK`e6#9\>_g_m2:q+YY+]M_pBqo$b;OB$>K80_H++>[.SaSeICG1\5%;(hbfdeTrWtVBq&WFjEg/g-SGD)i9K+!
%m@qAAiLVf]2>d^qgMYsS+7bqT4n8^/kP3sp8DW!W\F3*7&aIdK,84h=M531rUq'\@<3J!>C`4;-NjRg`.Re!TB&npS,k3.M6XaNY
%FNiXu#+S0F8\D<N2%VMn1g"UpV!9&1RGd"$'.bC\Eq">Jbne9FN3EZLB`K[hT\+4kkr3o-^1b<o>`R_Ye%?hQ.6X\Ii`gNo3#8!k
%pn1><c53ZRQju10lW/+%-CmW1D]R'jLD&*'Y0tia)65\9/W,lA%.WPY'BomYa6?K:6BElDm3[4mj'FPd@T9HdlsKgl88-HHp8].d
%oGlBFYrNEK3ZSWt)qJnZ>DJL%3uk'Vc1"i$(O-\3H9ekuCKR<PK+uCC%7i6-#Y8g%_$NqY(V_R8@KK7ncUjeCO,%S@ooVSnPjUN&
%$Wdm[.X%(U,E"$-gP2@uWPWSdMQQtrTO0=LK/%cael"2FGi9n$bXr']AfrG).H[<5&:E.*N#IdQ+u3<*>['Y5[bKiD0Ni'FmT?"H
%5f*u*'b5#Aq=\E%1<j&m=!qX7(]Af)q1W`t+k@QUTXSEQH5$7qhMhrXh;(dg2rRt(:OU>.fK[KOQU*:]#.;Ul`G]nc?>pNKm[E+\
%H@_9#4aljf_'\nq0t_J$Q8jqW_e\g:i=SU$7;g!:HGHgih?!)I?a\[>djT01b6tuB-'bnKpnr0Sn,4!E2jQbJ2'?'"+BItTD+3F]
%)-%Z_"bW;EZF;$_Bc>2d#l87]H-)9K&`ppC][Y6^8/:J-edVe"MQ*N&\bqDV)kh1=f+JpHcfM0O(@j8tCPW38pAk\od^HrXN6U*J
%)H@gNOGOZR0]C0/#TJM][t[GA#_[E`3)%GVBn7HP%GMa7;miI)a1%6X8R4bJm%;0;4+Y,]5hc<UE';d_6FfD!8qC#^EuYGE%nM20
%#a`4Me(ZJ3k-@9hQQ*ub_JtQ/FQVRE>pu^]:gq:p^.YR42:S=_?-^BpOG4VkVRV*@N`EBL1s"@go3b,&9\0\]$4tMc>"'<F.V\[8
%_jpe_)W!C\aU!Omg%As8,'%_(CE@c&/7^mS/C'glZnr-\LNpN(<b@#<P$%<2=Us+Q/MFB-P8cUpd)RR'e&1dm5h>PB_Ko!JFWp7i
%c+>+k3najr\D$=;%CRZ5d<j6X6^[HP/9XI!!QEA!s!TAF;Hs_:!K`D5kfo;52D?%<hDN9E+A&&C/dB`FEB5eg'eP'BDVg?^UpeQ/
%QAUUd6/Z/^ns2CC&+JuSa6dHK*q2:l$T_K2+qp+BdCG##JVDbN?mo+]+2SsbnmT-cAjiK"BlZEH11%!:?52gc_dpd8i*]JGMo24'
%[D)ld.=QVubJ[kd_"GZ`Q4+1Lkl"u`ios^H8lef"cuZ3"M:#g!]@"OSD"J!21l`[n[X$fAUCR<tAb3^+CBi=3%kgP[/e=-N@Wq[`
%,TmRh9a9&>J6B6s,r+7OmrDn-i/!#Qbo-.gF=&uFRZOe!TMut.Y@@$pn"d2Dk0TnL8L='fa[AglRuGX[$H3!PR=iW[?ks9sGYH]R
%nFd9_((VgS;$Dt^0sHU?/I'XSBAseIMmAC7>nIg*\V7WiRd:6>b9fB-drcKi=Q,/1@Uh#qJquZ2P7Vrilu$V.JF)N0@kuY\gbpK'
%Nm_lrjCDL<r5mF^XJA;>j+j0C`q[A:3`.W>9K83j@--MtI(pRD"QnV[(jM0j(#h8jn>rYNNk:F.;^.*Pg8D>nG7b$-\8Z.S`+*<7
%9T4-AYfE;!*DF``gK8N=-*V"JX#1X'%;+cpLDgC[(q_QaY)g2nK?#/shrS!W5h^K7!97QqR?FL@p:0(PAKV:5C2<#;c4NO"H)O%H
%YL>U(pi_Y7eBH9ER1e"694D?+18;;d6g'*l*7!3!*?)RDElm3^[)'eC#%\;OE2tAo&Po^%SAu)/5q1J#)!iY2Kl/ej7.c6V?Ee34
%"6[;gf[1p$mD??G)a2:!lG['gppPC_mc!3=mMR!Y(];8/j`[M@e63hpL<Y_ont`c(S2*?$NrB($!5WD&:CF5eRL.ft#F"bQG-i.B
%D+iX*Y^7:Z:Mma/nXbc2I^.Xe$::U4L6-7JK9rOKEF)15#Q!l5j3g3IT!l/sBr6m\c0ePYgP'OCD6D,c>hY&>`0BK,f@.QD4JsbO
%*)2Zf][dd6n6n<]a\Ip+f>G<B"12:h]:15fPU=*_f1-MYMgatsKbN1a_%p+qZ)LRdbJepW5l0g"bZ/b-E`RG4mml7epdT2<R[i8q
%r[!o+_-`hn]<#0.gk7m>;`$;t#j&8N&Jtp[#3W'#[&K0k/N(4K"[!HM@mlAWlWq#.8LjhI(-!ha'jB5q6@+DqcsTD1%&].,^'e+d
%IT]QA"Qo]W)kf4=mF>loD^/OV6g>P[*]Op]SS$/tNXs*7c]+IO4eL"174&34Be.kUlVsF1NS4T"*#%@31cSO[TYlZV#@E7VJWi(`
%ah-CtUE:iLKi2],XS*nA1N;d:8[\hF5KRS0I+_,\8`qoDl#a-n51i00()*TZ(b9UBC8lJAQ:\/`j3fG5S>&A.`0k?aC^B3m0O5b[
%>@]7f0o=>C><17cag@4pJTNb;OD)))-o-Gch,<Q#n',o7LlgIc%5F?V";R*\.GBJ%nh3T:*\dfkKo6Q'$q=o$er.$_rSRgI,]BHV
%,1GSZIUUA%DiAJ$0dq'O_c\'@adGaj&j]'ib93_*),>qO&.0%^0[.m4EDqlR9Igpgh+6^/NbrPV8:kk&^(nlOZlfs<K3?FVG/"i`
%IHa',(ml>His!^<f0W**U]oaH%FQ4YF6-pT*BLhV&+=6b8qOU7Qlq^ZaSf4PN]Y^fl+g#<CF=^VKY$1jG\d;qBCk)e0FW6TV?Eqd
%]ki.,9&7,pL#k8ue,4l80]Ac%$f9UJ(A\L0o/Or9Y:b>$],uFjjVOhEqm?:f(I.gI?N6l#p]#R9jB(770-hY[1*Vn8I_pXJ5We;!
%i%_*m4$im\fR*7OaQ?QoJom6BdjLd9Dbp#3;kX0fj=g;P-Qdj$^XU%=0spdl$8^nQYS.CT6&kf]E69%,c`l";&GO"$4En5qC3Fl`
%<m`D=*?k>`\NCfD7+1X\q2#cQnYt)8"WS<kOU-uc0$uof*mJp[r$\l8PkJ&YB-k=J,3("k,e$1<fN?$l0n&e30]=bl/O-9Y#W"I4
%*sETGADmFqX+#\6pID#0j+>@0Y/drKngd/G[0np9%sH";ER;cLN'*>rRXS8dLBrdMW6#0Dn3GFMXr]4+%e5u1A:[Zl$Xbn]C`9tB
%&csmRW]1Begr[3=M_gC1b-AO",pTOKDHDp@28eEHSN`DhqCuiBRhm.0B^#$Cg20nt5Q.-([.""VG[5^k2\0%/hu1eeecpR"!NY7m
%^Nmosi8Er,X:UCMI)$Xd%Z:RnP4/D4MoT$I6Tk=NJ,/Wt?[_m6Dh%b)5?[!fT769V#UrOsI'"d:2B>sGYXiE:3^H:o4CO>aJenZ_
%1AFB'M>eni$=_,0SKQ%.K/58Ap5DN$9r'bm'B[KWJ8&t:X^**&`TpMo*N1s\**)t6h)jkJ(-$a2B4$,dn`SM2IeDCWT?51Ph5A$b
%rq?`qqU7*HqrVrUOMG6'mZ4"?ia4qKrTE)<rni5%`Fj*Qs6=6h^AV<WoR/Uoe+`j^QX@Hem9fYfpKtW0o(q8DoXd>HHN*=[?i9HC
%2o#7Vm+^Y=++O+2(SB(sroGeHM7`HL?@DY"(S?1'^[h-sgA%4#IIH4B5<\3>J)fQb5Ps7qJ,'$;_nFddmduL;V;pfe5Pa=)Mo%^S
%icec0maF,pr6;.3IJ)h@?f.jJ]63i@'<r'^][n:^r`B!KmPcHP=*/!W<Fi*gNQC9iI/WkB^OFM=rBU(Be6(t2ECbKRXr9OPdWd^P
%\DeJErmgI$qta[?H5OcTO,O#9kJ-o]^Q.FFs'G'\T7?^fVf2TS_k4s\hGkRQL[kmP&_VC=jl6-S/f@_bB<q(&'<g;=Jpd%H89l1h
%p`f]D`8?LJqjSCO6f!.]j'TLro.PUe`U?"fj\e&56Cd8Z>>>IM+PDI,EN0Mec`gMmP!-iL1OLc$N?(c.#k4X:KkHCoVhbS^_"W_>
%]H!Y]*l)\2L,BQ8s+C\GGV*rpJFf(F%3)0>:Y5O9!=-q2q2<h8?sKT:f.aoQ4D/'`09&Fqm!<I5KVd6(#4f.QJE3bFs3QG+8Q)I\
%Zi+fcFS1m5P4oR!(qfTJ=.b&,rUK&hBSHHUr8[61Aq'I8=)U<OF2q5AY$W,4KH$`%Bt)u=f%d*QmdAuCf6MFmqX;gSGMchhpDL;^
%hlkjOL;o9hD](Qee)Qu]NB&>!?f1#,8au\gkqKC*%as$lJFQG!gtC3F_ZSon%r_(N%lkoFJtli8ljn;).(2%gUOrMbs20G<IW/QY
%ptZI>Vge)Z3>#RmKU3A2DrX5&2j$?'r$VO7^OG[/qrt;di>XVDV7._2',_JaDpR>Os+a:B%YU)E^(HL?"Q<9[r!c>AE6(@.#M>d0
%.WQesWR>2NFntibfaY$QCmFp+S'(HtJaq&f6W[.6TipJgh]G5=s3[;p^\dsO*`^bJ<j^FRbN3r?s6,Bem&E6%2qE[7l&>\4"`Ig7
%Yoj"bf:RNbom8XJr5HCHE%p<Lm&9!R9fscOqnn#/lSXGG'27E1+92$!rAl?.RBpDoYG&6BDTB(JgjMPq54ajfaV?pK;fWZqZ7YOH
%;E]+@^?iK3jSSB-K@.e^nEFH8l"][+!WuY5"W=J<n`/e[)P7k..ZTPe:_Pq"KUfW+kq4=OCH6h6KAjT)e:/dkQ,gkmT>'?JnQ7\K
%C'APDnl._KYh);TDpj@#(H8Jp480Z%a4!8HA'q-3INdQ0nipl>$NU)L4NK2&jc8P.jA=EV'c4\CJ)lq`?!>Q1Jb.K<G/*MY'UB_:
%`=[8acA.a0Yludpn4+2;'et^PrX//l-<83DNdq-is!RS9JEE6(KH(=J_^eeT2ApA%"]\(nO`Cp!'Lc+g5YR2#JU]\/:4KT5^<[k5
%)*5UMPL`l4iG`f&^7t*aH:u#fI=I<MaPP_%QT$C5Vc23>Ieh*HIh[4DriPT#Fd^UAmJ27`WYhf8W&7ZhLdoY+_DU9'$b"B.DcS1)
%B\;X\dF7MT>eFDbr*CHBT(IYBYMo!nr8)j=+.>cfSA)IZmc3B&:[!tT4;jkI8CoZ<YK3+[L&'DX@YOaab`rn.->)Rm&Tf[XmR>LY
%>L4N7);!Ho#eG+XrJ_HVrpC4Hm;?E3<'Q2.>4<BWc<%T'[p%Qm/eJV;?oYb_,Z'RV)fK-L51L@`!gl'6^Bq[3?t>W7bmV06;)k2a
%[ZY;&XT'JR?UX6Z'sY/hj;Nq84bS2rkHThjTZ@Uk$Z4<8mc"Q;P.NmP81;>@p/!;XJ$=NEX3-=>j);TELV<@L_0hAo0@K;XqE:!A
%rqBd5qYD:_qX7ejrb'jV\XIhFR&Q3(qgo`FPsj^$jlDO;I_EXm,,VF*21&@JE'8tN,qhmMMjSl(P937fFsR*5>UbL4X<lXS^]6*b
%i5^2ZPgo=+:Ie%F:JjV;&ZXc_<8@L]jPjL2Oc7?<GgR+1K\q^WHP(^&=@Gp-$$r`t.XIs7-G'&*Qg[T]'KBC6Z]5k#n3oaZLr^)P
%+sVr!o!f:1Ij6`>"pK!<`*EgWo'?cl;Xpi_,o7*,n=gr;LqX\QpEKI*Z?fWg!L;u]IOK.s<tI0T`-aPr"9nM^n>Q4Q6[TK004OLi
%M95+e6@[4h^qUaAH%UibK]9-A)R6gP_$J&o.O,jm^[\$D^.?!Tl1ZD#T!FO#oH9T+aTt%\o=:#d3%\jZcj#Qi;>6!3p`_%l`8l[e
%P9hAOoA)b#782Q(8MibRf*..94OY@<"?b-:Du,(uN\=#aMtD@YIP9.<kpVBH)Z6(m0E?re60@4+,J=9YUD2Sfdp@R&)%eQOKYeH%
%s66'=@KoV\8hcU+'X\Z,,90JI&bXBW7_W+b4MuF5UNj!SI$@gK8oXdjE-h"e'or)ZL4>;:HOuFLiep^6Uo]^QJXRkV_Bb<YB/_nc
%^gGq1H$K&aNfKQ6Qnnc86N.K*&+9d#Y@&b,q8u]@CED9a]ebj<:07'p"#h1#fEi/[+(_\"JM)>(bKj41#@.Pe@hfn;k@f\.*&lj$
%A+l$c7J%]:Eh#=eG<4RL:L>*_Q7%RjJu"K<JTJFmLV+$JR5s8HTt0hiZ]LWjWosN/)^qL;a;bgbHKf5I21#BbO])TncX`<48U"_G
%WfG9A[iTYl^3M-5_A4I&U.3j0%=B#S.Ya'p_BH0NSZ$(?#X+j$X)OlR_)0a](fchehJ"Z?J2ANgi,fS5A&**g8X%s(@e-n=G^TnR
%/Y#9VZFVB]?c+u/g6A,;5[/q:H.f=_T6U&7s5so"^A6pWD^irh?,(PY`TTK'#!\be'YqlND_qJ8B,A4uDuLMoU^"tT:usg6N^Up)
%6Lp`&kXYlI2uTVW>8;ttFDNl?G5SadLrZfh=bmQ`1ZtreLjVYqLCtM44I"7Z&"Ag?i;:U[Vg^p[&]?>SpdGbok8)"rZMN`C^Ma)L
%k(!=!f73_+j^3CK[Po][*OPP`Tm&FE_k7[_Fd#J-d)X*]J[$4N2C/UMhU@b]/F>g7MHT/1#mUDcE^55HYN:S44/SRTVhbT<44!?3
%?L]=m@9\s8($\fE/K<Z^$%=/+`;T5!X0:AI>54b#o5J6tH&+UsFSXjCaS>='Il,%;_h5u(?'Kj5h%8t#?iKjk5QCM.s4\(aFDSW.
%m!gY>`7>mr'!fX<ef%bS4),kHoL?_6@F8e2O/6X"E3V5FO(V)'!7#Be3\Y6Z.Qqd\o2PferC7<5d$8dIpU+<Naj\1]T$o^rOit)0
%5IF,S$"W:q_S/>6jXd4%'D7(AWVMa[c6LSun(X04'5C=l8:g*KoS%(^m<$_>Qh8B19&j*&PNb('`L0jD6f3s2ZYl[:!UXNUiNVBT
%IEbT9o,\>>*:gUWDcB7(E6%F]'9N[srd0b:jq$+(Hk+q]5JH2QIbAZ^8CRM65Q0SKIf=iscc?"i^O0!TF&;*F>8Sr$>2eB^<[uo-
%p^P+QhpMDL_(%fS^*4k[1"([u;XpUaNYq94?n6M=(I%@mV+JQtFX_if:m5cE2(?tn/%O^96o.8fM*NSO/o)Ei^Z8S21^sjKoKE%P
%#rr&3Q&A,iFOZ$=EFOFIYFmVHqf$$%0TsJ+Gb]b5aCmnL*KDM*ZD/#N-P+7^s6u+II@!9Gk<U*rhuE=555jPl\mPI%?iSq7r.hUK
%,BjfmC-O2mPN#n*2PDqOFu&RQ*Mu-\/bXLoj9F79o#r0m?5tV)*&!nb/Lr0'/>MZG(qQIo$^YaT43jQ3pf`*8,Z#dleX18IL\_:r
%XJ8/I:tEHslqlF'IkZIkYNj+lCfNW8A,V<^HP(!G6LEG3[@n<6r2Y=M5QBi3s50_=qsC08L6?WIH\/*%`2ck,."ua\,paAgR1k%_
%__GD]&X^/p3(?UW0.Pq=oR)dm+%U^tIcXIR<9X_Thi7'3BA?kE$W#(FV.Tr(;#PnY)b2C:TqoSAeY0)!s01S<?IMXD<mcglp`e-m
%7,!PiHW5^gTDG0es20nIs-HfA=-+:'95(GJCd>"O'u6&SJHFIDl%8g7*B[HI8P'o*bq@qbq1);gT70E4rSL?N"FOrS/4eW#f^$:W
%[Hp:m1b^B!>VBMno`PdErNSBgj!t!S`_m5bXL]:NL+-q-;nbl+UohXjNK4Grmt042)Gdfa<(J*SAc)>>pueuSX/,"AXRWUZo]n`s
%9tYtV04=8r4FR>-(?n25Pqg%m1Dmt=h!p$M[Y:O8ER2'pY`PkYe2)FT/$tsjBCakRWeA`C0!HQ-Vj:7Q#QX,IDFC!`TZ^`"M7,M^
%l%E`4(3l<\]`,'cE9ZUuX):5`Zi&R3P$ZW$K"S)c,@q27I!-Y-j_Wd)[e_k]]'/D%SpKjsE])$Rs#'M7CJH5ARI-sp0kd\Vr6oRC
%1r_&,\%n$A]K=D/h6(G"ql.JqXg`*h>,L,bX7#J'\-h6k1=9fEWa!jF0)p*gUh+Wi:Sp16F"1f!h#ZKDX+@UMl.i6*ZG/%slb-LQ
%Q7O9[=4g[k/&7d>:HjQ9[<S<BnZL%;ZtEsVq;Bm:=b;P@IZHc];OLOo3r[/o]PW\Y:Ij[tpn-Xc]0i(GGBf,]*XS3<!]r<3m(kHA
%#DoWWP$sS`Q^P[WNP$,^rXS:A4UU=,I&KRZ^-]aC#O(slIVpVQ'7rGqQ:_H9N__^SKQ`$0o'9/hLCfF($U3V`4T\AR`aTNS\+`/^
%%tr@Tr7)V;Vc7B6!Sj26cj5]cNf+7Cn)uS"_+s8ETRsf!8*mRIBuj+\E>m,+i>7UY7p+2a;O?mE7>D$U6DgA"ks5Of1WD$m8<&PT
%I'RaCmQXc48h=%-h4.a7nUa[,ntCCJ2t$6fqt/b$GGsPML+V9VC\O9n'q.Hn45f>;NM-HkaPW4)@6;]s;@iHYh:9g2/;*u3hWFVA
%c@m:4FWW5&Kk/t=::7KMlWEr,El%eU1V/2i)t;h>J[bZsdfUBDLR]I]rS\'WJ%5LrJt<sQ,(r2=*2-^]Sg;,?I?serXPY[d`QM][
%E`fso(@V"+F[,lgJ,6q;Hl;qR0A"[5c52o$8\T0k*D_9U6aBsqCb60ge%X&e3`J)iOE'$K92BPeD_`?\VQTR_X%MVXS^2uVWo=u6
%-)Bq,5u*j!qf^IK*%A:e>udE0&p)iO;^!u0jJ4N.9ZpKIPiMJ%5oQ93a-=9:<4\!"2Z)0s8g^pcCepE4OQ4>%0F@9"/Y$*G&rmtP
%>2)K"d)JT23a>:1.sA1QbN3,<^E\`^bLuH,[_/+^:[)]caL$(_2nWdP['40a*:mq'A8S$IaKMc&2bDNL8U%?t2qg5Vn@BM'JH`.(
%%DXtL8ZNU%*3/)bntbKiRW&\bEg74Z.&TVK8gSV2;aW73Vn58H:t9?\\2>ZMON-Z4]SFP#YHY_uP0:p2!`.$j$%&GO:OJ,Jbb4'F
%0l`01bX9m=Vol!D9ecE.Z#\G!REpXUJ8$frE@P:+7!1:(i0N"O$K>;8%><G>"f`R)'BqWQY4G:%%\QEA%@Z.VEclXI9.f.\;X&Q\
%FLRuCKGroEP`a.CNlQdgI'ImD43%bIaR,;8802lsaG4ZWaRKP8=RP[0qt0l+j-V"c&mKk`@j[=9*cIH/1m/PFm\VnpEs@(<U#uqX
%AUaAp`csE`T+Whp*M*p\o6SJL_%dr\(&E]4SegP2d<Pa+eGW/OqXrg8+o$I]N>KdhbH^PW/A)r1:[V=%QE<CNrm/]?oKW?iJ+DLC
%F%P[ZM<FnEBb>[:=3Z()IRo`"VhMX(P41hV@E;d$@75JnE03P#c[s/-=%:cYl&]<E<,-N.coE<67D3VohMqD/W8!e+RWA%JF4`P!
%T5r:Bi(#@e4\'?OXT+:&q(\arqW/5PromMKP>?[CP>Zc6cNb<!Y$=@>]t\;.kZ#pfg,"b!Wq"48SC#crbcb*<(SUNCM3gC(QWdcO
%K4A1;)+=q9TeV?*CS<VG02W0[0p)N&.,:qegPa&cWP+Gh3d'LiOF5]@WhT)**j@K0_'OK#\rNtl)!HcF6;?(Z1o([Y!@^jXQ]tF6
%B#iqc#T4aW-T0hfPCIjr.^W;uXmXRX"cim,phbeTFe2eI2Tjm&\@E4G+)q/UQ:(Z>b\22>nZc00qW@BFro<bQr;*ler:L<P/$?dh
%+.:;N]Rm=AmhH@=0=*$B'XoR\BZR5eO492CFA]?QA,I;D;ec7%'g$bPROZ'b@\@0q<[UdUBq1:ph08Y/8g82TMC;gBlFo\bKOu`S
%iq,u]VBUr4UOQ9="n-HRM.80G.+<:D9026>%qt&nJ,Zalja5VNd9lshol+<$5%$YFo7m_\g3VL>fqe5uMH_P)oNgXR+gVZ(<@cM8
%Urp`;Y-q01$7#\D.b$Rc+g>@:2%`39CK.'u$"<7ZDDPURJbFK=I!j!F>*H`3R1akEOdG[<H!I?<`X[]t!Wn?Jb>!B,BGQ]Pp`mA?
%>Tj[f<L9k7_!N[!]&SmJ_3a1^F"AV.aNu>+5!DIQWm\FB)/]kq/cpD4E8=,(cW(!1^[1^,Sm^JDk]=AL&#%7;pri&Jqi.\6_f=j(
%4CmMua4u12`N/(VUX.27aS:8Z2g9WPq_fI@MnJ6OFWGd,NlX?ZY!cqjouFCM\04a];s*?*%J_thgZC!S$RD9i$EirDg5FkebqGDc
%rPp"oqT8d:Qgan7c_(7$iZ^[g"Gph`:XW$b`ToLS0aWLY#c)M=?9Y]bB&kcPP!Xj1e\Q=IoQNg6Q0'@6H\;>ZF3<Fc3jW.!Hb0WI
%fjdQW-Y83Q3j"#4PnS\17[C&:2dBD[jumH+npY_m52F6pGM!((DD+'PQg^\e+AhU$,DVPF43Af@A3*2eYC?'>+8>R,mnF]U3D""I
%="-JjboF!M32LT]E1BF^Es*3dWG6\@(F`$M1M_*17X)6].nA\)'$#h<IuRCD\L)!(,hkj+Th7?V%#n=9'qeF;KbM>^6;M69Qet+a
%L.=QW3F5@VO-!PnToG.!LKaog;Aq$"MJ()##Xt2YB5Jcs@D//aQ0=ffWnkKH.7g0&4rnb>()ccHjS+'Xl5bp<'=-JAI'NP95Jm3g
%rPt:/IfE8o:PQQp%IuTI[Ks5U1(mXJEon8\lZDV_r^;RDm%n2,\PnX%OE:f!`Z8-s%)oc&kT?lrA/Lg=%gf5>5u\46$G)gC\56=C
%S\oP\-.9PL@$Ej6mT3XY$S/lcS9nA?.kL=_`t2VN9h#uV5pT<[LmCYjapGd=b]ps#^qH_`S&c=QU2j^^k?iC='r2gL,^MTjJbS!B
%Bq6Eb@_]rm59=`riS8=hEQ6j^bcrql5O+&X]C38qDf7H&n(Ied*VahrJ4;U^HERsU-9A(KeI*DP!EZoRb>j:<>Krrr2eN)A;8EVB
%=sZnPo0d!d3`"1\'X*\QciGC"CE,)boidSeNlDD@H?_cTe0.OK83r%gQ5UfNGTAZi[Es[W&.+_Y&ZVX&B.4*E1?8a1'166[0j6aE
%qM<_TnS^`WSuh2`mm3c*X2sicQ(UVC:A6;@*Gd9K@B@P4&)''J"-%2j?#/egP$Sn3br`&"6GMoJ$aNceqM.SC&u,;i,]Stf:CB+%
%I(FrqL)SNL7<2ZM4Vl:L%d2r%g.NgDJM`5\BJ7E,J9K(Pf)ZW"j[u2/[p9@iHHXihn)&.K8?K@)&L_tK21_Lr?PSYo[p'Z(F7gSc
%n?*/ZAq?Z/-A&.b2cP-%7?[C].e0't#@0o]*G?f(@@[?/QHFEIRfLW!8(8XOop3C^!ZmE'*ltQkEh!4I<$I$O`2nS$_tjIE'7+,d
%(LB`[K72uH_S<U#F?C9^EU%Ij9k'A=Z;+2n:]Rm36mgogP;$Z^iH)$?;k07G;U15]Q1Ck*_5hh@]uV[nWoQ!1*)N.O_`4dOMJOB9
%7C%o5p(s%"gd$f1mP3H#LB(Ku&03S_:(J*[\<.Xpq5gLUNCS6M/I[btTqaOoBUNO<LIL`qRjL&0Mq9X%G,hbGA\S.Vl[[TGA&[cq
%JCgZ&`Oic4JoRf8`As9!Pse_F8cQ:%?\kRg`YH(*^+#3c,SeV_N+]5RnZ<4lCfmtunhG60^4:YUfhD[*O1A6+-lWWn)Q(HuGLH`D
%Ak!P_/<:-HQEu--r6iA#o1EIo"0D>@PtLZ+8@!@tQK*h\UIt8]d_@"'G"2dTR#9rc8@+<5d`AqS[usqR0Rc?",[%.Y@?AcW3g^33
%c*8NEO)'`:2]uG%1g79$AaUSE^E?>57iA4&Q?;P:4X.`)\sOHNBqPN;E]P-U.rpb#Kb7^-@?CYc@os%1YTNE_``$EJnhLnOjTcpF
%Ra)r`08LhK\BaWjEO%:U>u"3VnQ9ndJbNGUC":X@FnbDm3Z]n3k8t*L5L:G\)-:o:B_mM]%i[`L4CI+(rChCDEP'2$PhPCW5"V'Q
%o-NX""/>eujG6+Uiu,+G.#:ju:*)n2/Yr*u3Y.c4kN_0jT(Z8=Q$o/PBgYIZB-#+J(:3tnS)Zt3rH"J+_oA^-q_l^<ll7pN+#8nG
%bY.9#dDsKlJ'C4+C+bPKX.NMc)fk(#50A0tXfO4;<F_"bLH3_8[IP4epm5(7_o"YK$]W".28=G2l\_GN1uF9?q9d/kMKAsY$a:Te
%_dA(=m)V?Vi5Yp_[,W8P*)*`E8uYD\#op$2(nq6-3lc5H78r@YT/p;4LJ?buSm++1V9CN\Fo9)MYHrLbOmGY@_Q6Lja@"_F&aXc$
%j?j_<>_jYu>sdk/SJZA&b)g&/"#u*pVDE;_0PEn?_4KUo^e[k1W^2@<$C[Vj%PM!#MOFC4A$+Z5:_5]^g5KD??Cg"Emll!4K[UqP
%<t/":noO-uLi/Rk.g!p7>cQk=%S>+_Ilo)UgckkL7Y82o:*QL"A@AmR",hCNQ(USm+n*Y,IQ;6544i+i%SiUB*Ge6P`:sGsM;RA9
%1/hGo6fs7VGee.#@(uYg^$@Yko5qZ=W6=f4LV9q?\Bsd<Vsj+rFE<lK*8#=?\d+=!.>"E"680Aj\TWNjJs6;s/-!-,7)u<DIAGKu
%fK@e]8Lb/c,n+Ak_FV@lR=hd$THg@hN/2U=n^GTaq<b_<Uj<su.m/?TA1)'W2$A'gUXQd4E_RIs'e/4*PZ5"7HR*#;<g!+D$S7*Y
%R]@UgHMXl2>k\""TBbo/N*&d6A\N6,kfo`RZO"\COD_gJN,(t]Sa=uZM6:BKcbL;'4!BaC)Ym0;Us/H?4s<1WDhu(cd[!18)OmF7
%bu:=5QNr*EcYs%JB#'GKJZb*IM(8(A,tot.A!5OV)!hPkPmKPfW@M4u_^Fqt-EXR8h"hjtmkar(m\eZ_lg%k8U8NkMp*Qe5m&`Oi
%V2>$V.FAaDb6"SQ4W;\obRQjf`M!\\@KJTn1/r`alMKDTFh_K`"g#5KZDRc+na>/DZ@>S$@4^!iJt&M:XH*9\NXCX(?[WQ'EO9QJ
%mDT9#_OT5AOX0_k`_'ta`M-&3-kT/0q%0ZM$H$#=mj9Y^W!ATSE5r[/(m+X#M+:G)!tZ401n[Ze2jC-=_5Rq2Mb"[XhdP[g8/7G.
%Hqq$>)ijif`nBbV&D"?8[t4,79t^kh<NRu'`QgOD['pn?)#6.$jgVb=9#Oa0fI,p2M^:?D^NYTe5V='YGdbTDU$u?E"eXik].mj3
%V*`m%.e:g2OAt5A*\e8PFUUddl6"jE,Q+50Q.@lp.0rT'AMN9L[E^Ru`CZ,T:EQi5ksO:KUM>O35SWM7K(ol'h-1E1Lc8CY?Z;f*
%%V<(KH23!ugT)_YM*5#;K`uahjO_JAh74s%J"lZs(ke>7-T(<*iod^^D.;jAgILP(]]cZkW<[,a.Fg^jNZ6%?NeZqlIZtqj=@*)0
%h-(Qmk(C0Gj-n/h4L.@`E9+#0;_RI@)."9KAsl40c$EC2[3Q?6[-3BP1J/ML6r5,S8'*IlD3Z8;4CguU*(bu$r?rl@LTl(nF">!X
%Ggh1S.FL<m;2Sf)9.VNS-j@%+=4%:1S?=mjr4)+#NRpTr\O_f+I0l6^bkHXNXJ6And6dI9m`S.jcG-6ajI1mBBSk^j?#YLrU6#&e
%LBanEQ&hW!CY-qMTG1Dr:*kn-EPnJQV'\]-YIr5N(]$^(\s^lLIZ8^UXSDAh,gqt<dTKgO-e&\j?UPP]1apeei1_^=7_=iVb0XSa
%iUNb,$+rE`:ndG[JlK7EA_`6N4&./`8"fNDdp.QBQnF%\+SK>/=tQrGik^)Nf(]ad=Dd=iI.-aJTd'5<E?+fEJ2PBUl\DQ&^8sP,
%h=9qUZLW5?+0bH`!q3o#hB+5O>m<kE[YXfd8tgM9dS)I:8Y-Jc_>FUbfEZ"4W'iipc0moJ@e*&$B6horj#W"j#VT$m#cMpJW-4P&
%e>9.lNBj'[]K-`@oo8!W$AfMBcAq?1:*et32[)1YkJUFnA.abPb8f,;rVX3:B`e;8SIJl=PO[GF[\JY\_tKT7Gg`o8Ofl+N!Fb"1
%+UYM:$"IF7iukpKiOM)7pLE:>Gc9bNS8mSTG=?_AS`[,KaQ==!Ep!=H/:o#7@eTdPeJT:AEPXG*[a6(?B8Z%o7?]#\$nl\IhoDO>
%]H?g#n=D_)T+2pJ-aePQmn.HrrV,EEZPn5'7[f['pH1Ck3-Kf;?iT.fs7,W/HeX#FW&0geJtaY%(!;l7XeZnJp3DEJ4iCYqiMt;)
%f,^b@Trg_L`K\le[nn=AHmB^Y[k9@:i#Q(opg"Gnj0#["+3lR7;cVP6Y)gIX_>BgHO=1,LXD9[@O^<iY`!t,S#0M[Kg;X_NW8(-M
%Q`U=58-b0_oLZEY/3-<4qYfd,egD"`QBN-JOhXN,(d)0b?[[ji2.CA`>*!hOit'h()@_2R*Q^Nq^n0W\5@@PVnWWWWgHE_s2\+E2
%^A[E#s705UC2`jnpL1_jhQ3Cpp:qGI0\Z?]dct3UAV9?"foM.mcn(W\'8&fiC@E/h.,bN7#9I4M,MPKshDNr3$L\l12ScGqZJ+WJ
%>k2VKW?EgfDloO6JA!&950^Iofe>Z@([Ki^Q'NM%f9S7#CO/Wg5tI#1(nU\.]bJ_1Z^1e#R@e7+#p,tU$Nf!`@s9WsQ7bU7*[(e,
%@^6o;Osojr9t)mB"G.";%jn_Q\#'\9lpXQNop(.c2K_-E^g_GU)W\e\C$JN3\5qZ+JKocj6XssrEdk;<)SD(L*,%o,dRuRVJ9d+3
%C.mPVbXWfjI;5c2EKtY7E)e!A>`%M(\>$4p#&qUg_fO<pgD@]FH?jYlHZ^%.J%X/'%hDcWm!!ON`Pt)GpKqfSKmLgl)br?d?#nYL
%q_'uO^P=@%T"p+44KdTC92C`m]JE%5ht1_RS]@Jae!Vl,?)?G3)cf95det)ZAr:>oe*h76,hmu]ZB:9Y-T,,XR"f7="rgp9T._%i
%a')9Ib$g%4?aif4VP0mNlK>,:T^P\SdJ0oJP=-;W>HkqtX)rsqZ)Juo1>(B'/"M?kkc_%NX@G_>R%E9=aMDg<0gP)opborg:6HJC
%bd+[0>a.U#H=pB9X=/Nc#f\t:6\5]a#)<9rY>VJI4/g(q<VD0g*9!\JlGMeMr=Ct)N^R/n/CIaR=0Ff3Uag:-*<2hh[t`]$3D>U)
%@>#M6aW<S5?>0'1T%cEFX;$T#W$.b-YP;QlpQ<`;)jh$95<Q:"Y=Y=g%-L@+rIu\g5!Fug"J:E>[T(5&Os;*\Znj(Y3@5o3-$L0"
%':O/C1+XPgKk:4CS><YK76Vc3@Wi'8G-F9`eabbQWY=Q`C&Y,Dp.<6aLaYUfV"hK0@W?DsG;.;p`[H7>8d\X]=TXqj`OlDH^&K*]
%QYDs"]FjAFKc^B$cM6%?X)RF9X6ZluS\jqr/5)')@0mFA5qnY+NXltC"1o(_,-$:sMDQIhBc&O'YmAn^a,Am&Vp!3S$#g/ciT2$B
%r5+f5qTrZI<gm?&)(n$;!XTkeKncp@Q/G/hEXsq@9gT-u80At_Q[OA;@NF'jFIX*/>P&)nSK>WWbr?r"a.g;-Ce$0O4(\WOH)WqT
%!n+\OZ+lS$-7bXo+)^HTFGDH[q-DJ/Q2$O+3H,dsVQHkX2u8uq`lm3dUta$BWl$`I9"Y#(_jTD)j9X!]%W_e?2)ILT3b1,_hN-ll
%J0_8]6uj4jOM_hSm8hs#ImcS5j$G*XK!]\,]]nE;NGV1c1g&ZIlg]o)43lf/$,5en;=p13rpF]R[WL@#g"V!i?[o8,otupE'`pN&
%p>F%<a!4ok?&^i+OBsdTgGt!g3/tk7q9klU8V[j$oV_/&d_p.Li^O%D+OWC&W/d,nr8K!9HLTME!<*T`Zk;0m:6E589B5`.*KMP*
%\ulr?KtfD&^*`bI,M3X$QkO)pL'4%K@i6P'g4\Aok0(h5HB,_m;7L"X^-9fF3-_`#Q*WaY]2m[C2LiM\oRboXVdO8t3u*^;k"?IG
%/NnXAm-sAAq9g7FK/((:Z1'_ebPc;,Q@Ji.)j373r0Gcsht:dFLC&:Z9kg4A0l-S*^2pKRj`d['*aO!a*Ti-R/ALN&*gj7'D,dti
%9QE(V3dY:)6D4;9pr7.3a8t(7auXH@%coD>@%#/]DddnE`kq/ASs4+VR1MjAR4KupIcY,V,\G:OoKST_J>`Dr.CBUV]5_?&SLuA%
%X$WEj]*4*(qjY_#`$;(CM`0d!=YL:.#<&pUdQ-Xa5eGX2hTHR/POtIcI8g!@Z06<QF':'h2A4.gil'B,*SIH!>+=<Ti.B@n;Wa0"
%#Sp$UA#<T<8QA48b(4K0pb_/Ae*!Ve>OJoV)*Em+%]`B28g5+&mp?7=ZdU7I%#$Zh_XFu"W"k>+"]iUVP`].6D\n'u9GqkLQXQK3
%*!9.D/dQFYl04lj7b=#T3h!?u\i,3'cf]bD+>H[W"i%KS%-+QR6k3:!T,1D.3>;tFhi#d2B6u<<8RuKo%@nF,bODr.N2,Q;7Cjs<
%^'nJP"(r;J(>.uh(g`J6Be7!Yj<b9O%d1^:Yc2D5aLjhA>Uje429s!"%lVBR0Y/W4hce(%(=Ecu.j\jR4oF?\j$WOg->5%m85W,!
%9,J;bnq+g3,PtReJ1D)@"36qScO"cB\IB:ei6?d+4J(gDnk7YBcsj;`.F>5>kpO,83U\S*l^8fWh3(Z:J,-EBHdl'cc*q]7n3.tj
%NKlg)$0-;teR>8f$8@."N"B(QdgQMZJs[sC1M(?bn\Acbe1i5fNpN0fU+s!/p]%^H/j44p7ioDan9<fEVo95CIN8&hdFQ0:H>Ns=
%5>Hfr(::N*Q;-')d[u![pQ)EDlKOc%Sg%l?J97Mp\uP<5)&^bM-mKU0DZ&&,k>_L/m^"\&8(,67Qg&Uh_*-p*=A_gM@a6uM=t97T
%IfA<;iTnPQ1'(^#ob9"q4RWqTIU06>7TD:0!%^o*(?7=T'E[iD7;Z!7IeX=Z%CXlXaUJtYS"#B"V^dE6.m:FoHN8<,:M)k^=2=r9
%,=8E8qQT*!k0jAToG$GQk(@r@ngnnQAIM.*]0QBgndluW!)#kiWaf%GS5&5@&S_#EX"fOhY?R(0?rsIdcp-Aq9mHZK<S<nrmEEpZ
%Gj_cMI/Ws"]RKkE-bm;I6%$<]0<%l">/sY/`+,sMRf#uMDY\%EdZ?Phb.n&ob+Z`k*(N>NKudOX&,E`8UsW/Iij2>)d[gdF'iH&m
%IjUVlnNUlRF1)ocZ9B\sNSmZK.4B[D^TLI7Pn4Fj/0Ue'#\_ki-:#p_liR<^H,VPZa+KrIYr?POm(m6tm`]S0EDpo4TTerMn]LCR
%W!(h\R=D[dP_=#Eag:m]#+o.MQJ4R1Kr8NJomiiUs7/Rg[i\r8To=[4\o<XadX=XsjUGK;;Rmi?i.+KBQmZOp`@a4SFIVA!kY(`#
%2jbOGT)c)%`b2ANS+ZUZ*^FRtF&S/]"u_,!EIg.aCns?t'nNiVd,!JV03b59$%EQ-\)ntY4Q8[X7Al1K6Ei+>pBW>lC>?$Lm!K7_
%8pq#NF95AE^q="EN3Y=OH3CJ"QgdF4TL9`t\pp[Xcm9hE!Nfsb.;3J:a4(KNi%J_s-]Tp&E=1XpFs3>^%*.LhTAZB*f+Tir+p117
%-$UV;$qCk[465.1fL=IVOF:3[MWlY=JM6+-jW%G.fml?tqkYB98fDlP`'@pu.U"TX"f]W;Tn&Ssih^$MMtD0(XlL$e3qfi^p&M^t
%,D.n^GniGA0`BIrAOS%n7M?sQM;U'P,I,KMAY)[Q%E?/?dN5&]T?9JNfg[$R4$HtMKZ6,[MMpeAOK0(u7Tk:/9%47t9qr9h;ggs,
%4/2>1'UI`C_Nl[<'%np7<GgTJ:g9:7hpn:3fQ[5r9#Cjuit8_;M]m'&f\AYmcMH2bquH/lWWD]$XLc1(M(.F+W(k!_Sn080QiXm>
%CIG7EW:H[6F-Fg]A<PM'1LrO)L/=(R[g3jpU##iM*6`Rf;CgQVRrVj1j'[WWKof`LPC,h7&B^+rm$r(E!]59!7\nODk[ql?/<lLe
%@5#Rh\qZ4Zh<N[r=M!4(/g!'9%O2k[4/7Z@<n'.Aj!P=0Yd&d5ca(_n-K&[U*lW+5V"5+2i@W\:A;]j(rd0d@-T)<?ZP4#@g+2)b
%a'[Bo$@bVU9Ab=m`GWLL1*.H_/;lB[LQ1*p2cW3C87GdY8POfZ3W'Eo5q,dRf,[H+GBrmQFVphOamj4i&K>b)rRh:07h=WArpVn*
%j_a1eh-S][&uAe)L4uRT;4[#JaLagB,QTSOe/&=:h[M8LTgD@[BfD;BR9PlRGtQfT;^r>J:Y)]o=Pd^ME;],L4[0tIUbWkLEg70q
%n9CL+cE!"rO:J$g;3t^p?FNVrHu8;tB__J<&[2HjJq<P&?5[32gf`WjHFh$&FgZ8^"sPJ)-<85j3*fuS4h/".@JRYBe#bhr8^C1f
%32nQig'n,Bn2RB$;-EM62bkcVZ)jnITN?&9VKT[/="Ni&M"/h`)Oc[^e]P-1<6!V:O)l)+2/QJnaUT3Z<RgV!gch)NH[5]UhO4Qr
%[gK8^dej3Fm&LdLH'Qo*K-OGgI1.>uYuujAHm%+5!/NVU1e2;U"HcC)_qS4Vjf>sf%TGZY+`M1VDZcDsp)qDZ:<H4n^2nC[\=18)
%Y)TE0\'7F9bf[AVorg.n"#0B86,8o-HmBBf^,At=k2Sfn4>@p`9X[gU[eVnra]Cjd5>m)cM^LLW-lc')XKJNZ--903G+=6*0K=gP
%4>aF"F%X,4%O@(_:a?H!kP.D"`b;0^HJOH8^T/#qUn[Yn.C+8*Cq)h'qR[,,h`VD;pqu,K%^.s`ms"^UAfnM2GQ3@E&[RQ6^O-Z.
%>nO4>G'i.kBBN+GoPL3f6odj&+6X[GXWg.2j;b>$3]P\Z.+"/g3F5#G;TmAC3JW/V<aQrdT[k9#rO*GTFUV@$jkLj4FuWaIYHC[[
%EHoMG*[e5*m<l?,SAM>p6`p+oVsjeZ_V30hhpaN.FUHaMH#Dhl(rPW\"`)\`Wndc6o)NMa8JUP5AjC(JqA?A+X(/Z6/dLS7]#4&!
%IWooE<s)^+lY4SpD9Va0F*RL#;R4?#s)8J*2=5_5O!@$%K\#3-.u=TW7l_V+$&KYP.8]GfN@GVm[m1kDJ?NeGVi>)u2ohP<bM9"[
%+bH#++C`&bfoZV5WZu*G6:`>Hf%XW-1nU!c&KM/]CD)_:^77<S!<-(AD%:3*XL#rLPp]HO?'?1(cBCc=iN/]MO26tAd]GMOi7DT!
%>#W8t4==k.d8jasr#s0[Wp.P::@u2%OjYq,S5ijrW)5E96ZL2R5L3'BAIXGt,7fd>a@Kkl'r3s\8X(BS%Md2k;7_WGWJJDQ""CR0
%,)ot(j\\\4M*;%*4q)CNHJ8:fo17.ml"X9'.4)=9)t"%JBLQ<@_.L`X5L.*O4tG('A.R2<84&ZrhfE#,a9F.X=T*<]6#uJ]e5Qj(
%D.lsBiY[h=KN$Jt>?JEV]tS]3H@G`?is'cL_;.5VKj\bPO45:K41-MKj:+Y-WcO)%`N2U>[6inP_-J"&>RaXEV2Sd!hDJ9D'hKLT
%!<.jJUIZ/8^5eL.*LOOFSFa?#`L>E(_+bQVRD\ge<W1%Z7).mj1#I.C.*4"!J1CVm-rRhCQ_u5HM,m_rqcZ%k^^TZ)>ONrB')*$>
%gXBSOoB`$p+*[RQIf:t_n*0$4:EWB"pR]4i1`jjOL[=n_a:9V65C`?#N?A2com[rbTKMg+-+1,Lfk'!3JSOJIqm47:cErg'Mjd\i
%P<&)^j`Gtb]8VV!(>>h:2F_T1"f@A<Jt\mG?l(c(%gbPaAmM^A)cIqbkHo9XEU\V,EC4A78,6t\A2Fr.D:3)K,GU?85X+lNmqu+K
%%=8S,nBMQ"H:iX$!L1\>+,/3W3_Q?0WcSo#QNm`;:4%\_Wp7HVL-3KI/?6s:nOadfC6koHau8Q,ebOQhFP?QD2(kTgZ5CD=J&[KY
%@UgbFXY3Bd""5L,iO4u:b-E222HKI`-:t90NL)*PHZj/j's^nHTXs*hU&8]d%hU1W#B7I`&i*;a1a]$f$>Q&<>a\LaToiqJgCW&]
%'O@%KO%TK=4Nrc0U%q=TUVJ08b=7NQ+r)],.N'#d8iG[28fGFO0RhJf.1;0cUpcAU/nr3-#E4biOuKb9mqIT0>"OCcn/jRljbU8#
%1-F7QZX1Ke4R$J&-tTN&BrahP0]YqbC-7<(Jhe;P5fr(7%?$8qY7$BX@*#N3G"@#=3::aeVs5BV*'5#md\()jCc>8;G/$_2X[[/X
%g.[Nd`j(6iLQ1\Hhtcr2IZ`AeHW[%d)31hG*$Z/f$skAu2OY)=S8-o9hL;(@:'QUmmR[R&,,rS[WpQ$o.aY>,r4,_ATFTCM4WYiI
%1E"tZ<[)MN/^(ei@]hn@<FF^HN!u^fN'n19j:,ZO3NCCJnUB.fFkkGtj1c`L,8?QT[.<^-[6:0DlpOQYlf(SN[")Dq!j/!EIRKF:
%8O6:Mf=S+#3$=RLfeAB>`RB3iWd$:Y:rQ-/o2P'8$H(kNT?!p)Ark./PM?VRJA0IU!VM'[U[)`n'@\.a1IF(m)dB4[F@;[FeKbht
%fWZlo(^Pu'#;srM[a,s\6GD.,[bD2Wf5?]>Y)]9`6Y5'6&oq.Lo>u6'5Guj<I6Xpn!o)$Q!Y<rA(HK#"EQjfq<BOc,G0VtlYN)+S
%X^!XMh](T,C=&lnIIW*MPkO99rq<ZUf^-4NN&9t0_d1X$of4=sWe<q!@'1:lkRi79!p6FR`(u]PJd\F_+(j:k^U&$N',lp0=QkC9
%<07Vb-?[=l>,SilgM1Yb<=6tF=79'+;+VFD3Dk71A>kT:Q]g0#Z([h9<O5b:V+eSXY:Y2l?Nd>"*R)I9W-=20***QUk'S2@?P3Ek
%D@N7M5GCO>\b<R2XKoMg8n6c2(?eh:N)2jd[RMU\m`i#QSo9[HKr[+fTC1U2#>a+7GA'!S^Pe`H^Y\tgk?n8UZa2-`&#)*Q&u_f(
%WRO[p54iT%<>N_;Xd_F:Bc;b.PF(-0eS0r;P%.b,YiI!"Bb/[/5jImWJiL(g!J6B!31>'H&;G&P&p-(2[haR9,j9$ALSd-kPh(DD
%Or/:6Qu_HY7m8T*V1hPfR@nZ_p2`MuV,sbPLIP$Lr+<@R?l]L\;gqC2jCjSYRaBB.;q+U%'?P?r8^UY2)LYSYH>ndnT'1<$Wgmbf
%cJG&&jb=/o;nKhQjB.^DKR,nF]+G"Z0g[HfS.KBBA#Fp]<NL>c6T6plbpD>"(OqrZ^Is43A<oN2#Bmr\Z_(Z^7W#C=o\E1sL:#&\
%d!%8UX0eLA:t)k?#PrT0K@4]b"$J'd*mHnk>*6Ub;]uX?8b5g&=Wsf/rM0MTG&-WX%%r3N%GqB\5-$k8JSssb:aODd96.%=.F^j?
%$b^o_$HN5@A<crC%:+)\dB,oT;k&@fesI%2W_8,!'4%C*4OXo4PZ4>J36KL80kmOGPJuI=\S5$:JH"4_>ZN+:d+.F<]-=Mj.7.P"
%fG<[PDN*#Z2RZ'd,!.a(AB!6q5e_8kq!%2uH<?;SoFB]\85(TZ')(F[j]\5JE6d$rWRHT-rH`*V?]obO#V_/;cDVg=&bL1XWGS#H
%G^3U5[7eI@2]d_]icrOF;qkc[8D?m\ii--6k^XE7phi8F;#@=\$X:fSjCRsD1N=m^_d`2Jg)KN_7<C;+"4@.:b>OU=Z.M]"2D$-/
%.EXo,Q'G"oXCC)Oc%9_GTGWal\-bW3)!5B5bTXlo=LPnGW>m7P0K]OSQS8.oNhWg)_5imJ`&e0qnc*k'llr)T0.W&gBm!31lXIqf
%qI)'B=2FPY,\4j%Ws8B(eGn5rCG)*,QaRKMa];-%I8Y2G0#;Nun7L)6ZrhGnAp>*LZWsC3L+^:>VdO)b&]`Xq=a:2!m^T91h3d`^
%Q0BCNp-Kc@6Ur>5];ZE8o2PaQe!2[@[n?E].I0#8Z\g4sfjLNZ]ko^!\u"Jj^3,HT(-)a`=_o+ski7P#&3T'kh+NOoRD]-9NaF6[
%pOZP$-i`u3FQ/@Hp,u0bMST;Li3lbSXpt.Gb7f-FR4jk3":XIQ<O699/71XCEeLQSl?kNC40+d#B:P'?@484OQO?'tqc^53R^Y:'
%du(;s'Y;TXBaM0+IEcMhL2UgQrVTCgaMhNaq]SJhSrX;"4jJV"=!tWSo+IL92q:rZ)WJ*.L1lWINM\OmP?/nFa"rAm.ZPW9ef!RI
%!YJ>(:%)%^_h(<dEYm@6_*?;4$`HK>"F*.":oiMQ,d[-r0F.U,9bGljP).s3d:N>h-$m(6D4c9k]`Ni<p9+LU]!2V+b$42I\$f=H
%F)2XUEfXL`LDB%k#WNb]9Z$2Wcsnia@Dk<Hc12,+")7i`"*6^ma#ji^VShjq&m't<89*4;EtN"PVPljf1Ze_q=H+o+3gLM5aU8WH
%)L&c1+u,gli<aT0E-YgE7=9m5$c*8g+uD$E7]G=JRG_Aq@PW-:a@$GA#Yma[RsrAIK9_6S5oS"XL6/<m3-;3A5L2R<`uY?h5Ha?9
%XaRX%$1iIYT?QZY]2N\Dem9NEGOH:XDs\>_gY+BgI<Y)soAA3.qp4I.BC><E[N)m)?MsE^lg/LRrp8r.P)TsB:hS1#8jibuP"Q/=
%$hui:"u'i'!?k!c[3ZUVj,cb4\qi="!<$V^#o!@Q;U\YNWt\Ia<n+@Jo#="qHCNYnn\H!p]"033mc[+`3"3/ZPB4*LOt'XSH:U`L
%B;&E9A7Ie>cNE,F5>7fP;fUF0@<;C%9\ir>kkitN4MA:_d.a^gnpbF$2s5@@7j#F/pYQ?_BYeK]*MAC&[i^G,#RNI,#f\F&p6tJf
%WE>RHe5bI-%81*]0+q%<($-;)#&kiOEHtB<I%Q"LK+(a6;qPXA.AT.$NC$.%.V':"Kg=l)N-Ar)UqbhNX4DI*i:Bjc>bPs6<'eNW
%^T\lufY)n8=`D6W.0<$p$+!@rHs,Ga]dWf*c7I)i$,VT=c`.P-`9_:O,+4g3OWrbL'+Kj/+f'^8.BmQh<e+DJ,cSoe+B=a,$NSAC
%dfqZu;asFP1Qqia/O>9Ph]kLlW&$b3[P/R1PDu,Yrh+ZrjKYmU%UY4TnH"db9EtU$.Pq0i.Hp!Wq^Idm$_&@[=IYIPUA>+:MO_@2
%:XgaQq`rD6ih^&jUUae`%LWc>cQW`UA`C1=`ML&5+2959E&rY\'CJ^h2s36c=3c!eo%Np1e#aL+%cWY1H0gda^BH9IQta25BBMs5
%d'GD0]-79]P[7:X8QnkZm?/haU*cm'0p3Qu4?A2eYt$mVV8R'33l)9nKdg^*gRM+#4m@0&W!l5thO_jZfF7b,@na?B*jNa<g<g)_
%LDXgh@WV==J9LMU>Z'554B>(cf3-&1I0`F9k^9TC3$g.R'7igVPo42-#t`6;7kd=`$WC1e$/-PJjQK,'GXLRZZPl&i/-==$fTKYk
%<_"R^qe^?tV_.9kl*eTMk1!Be5T@4N%N!n-O.4",*^9S`='tpj^V5!`qcD[F3a(?IU?J!eJ8u[<2NX+W-37.drrqN$+F;&h9HIV#
%\)[uJ:Bo8?%EWPsQ#N"lk(2E7l%<VW&%LtQ^2/mok"Is`3*?K,6aLZB;J6&,]/?TEZnLnfgQ8,u><t!K%M9t_U.qF5OTLclOt:lR
%PqGEC*;NZU<9&$bQV#/b(Q9j`csCf37pe:4op(?.hA?Ph#g@1"NSSug)tUU0lcrq+@Cs0$S*L<-CB]^3G7DUAS#ZgCs#T`Cek0i*
%m0]umED-*;>'H2PgheVi,#eTpQ/76SGlGa70W"i^1'lBO.,(ZqWV-B8_.lC1!&o'f7Cpo2*JnlJ:UGIh[pg@*BCU!D#em@m'PMfc
%$(VUim=X"5H#p]tZGRFWiU0"6T&r;p2aGlrlq$g+b;:N&3@"<Q=#VR1c67CM03rQsS@"tl[9X#SCM_"dkG*[D280=!Y=B,lrql#6
%]!+cEaN@W2_TXj!mDHjhk-1.HKp&?FBPh@;%1tt9GJMQ<O<V8Y3tqi,<g41t/=0&>)$sL[.T-bRUEl#O+kJ:gTKZ+:IQ"']@M_k^
%dZ`Ea\$`mR-4'@K!qsXb3^DS+$0/_j[FcJT-,KE@`ONdENB6'hE/r!)#=BB(1e__DF=&f-(QY"'6Khd`>q.<_2S;u]"2MhZ_)1H1
%nON1"FIE1dKg'2n:eg"oeLFYl$ZtR5?nP+X!p_bi1=(tleuul?Y(nr>6K<Ws&Q5SMNTfuHmK"c-E7J?J;>3rhJ^^]I2B;3aW<k#[
%`hQ=kDH+8>f!-25V%g].E-E)bZ5]9>mVs6=?,l?q/tnDGmF1^^mFiutJuu^A^Y@W$ZF?Fo(F.bg0daP_ccdbU^2'4]GgVNLk\Y[n
%NGWrC5%"@5mOS(K(aX`u-%b!CDLeZl1FJ#]OoJJ8+l%5ibO%p*j#0lEWSOL%E\>M^HNIVhDYQ2kIjQ0h'iJN1XCB#i4FLd1aG6&h
%!5([`iOB7D/h2r\L<nW!mp<j/F?.J?jS7k"NP92*pi3I,lfQePo?8F,]<KN65Q*>9jDTOXrTLF4H$f"[*gDTc7p]dio!A-DeCHL^
%9!^D?]YJUUH+Lln/s,BcI<d@D2@_6+,WtCU>\rJc!7X:rN^3E_+E:1[o5PO,2E)jlis6GQZr]hS]`5[(F.B0T0fRlIDHP%DS&";I
%f/D/%(bC7D?Tt2h*4@hL=[o'"4%&9\1ggd9)5+lY-agZk&5K6D(TI6l]jdZS9I%kQ+.KN4-fBaFcoT5.64QYmbb+KL]tKJQ_7F/K
%`]EKbH8g'"kZ@.)5Ma)lG*r!k0s9++]?Jb$pXu.PC8X!lq=Z!.6h]tY2u>pFDrbJ0l+G!95u@<uV'N8aL^fIM2ZZFcQuBqSk3[b'
%j?m^?((Ft[\8J0kW("s*`\gD(U2`+"V:D]"D*IIeSMsg7H%9"O(@HCPr:tl&IQh<+>D(d[c_\m5m&68aX'bni:I"YhrFc)XBhJ*2
%WWGWVdhH<:SIG;(G9iZYY.JpG/&M,_6"8D+GFe6>2]SAV/\k>1P;:b[k`WPFgD%Me<P?]j+#l*Br'S#d8BPXoBjn^e_u*q:JWHC^
%md16Z'fK.2i\p\b"!Opr7JQA;C\%F%-k`fGWks#g+eg\s!nUb0<*C>D$j7\(]TFmlF+&Ya9j)?gg1iH'ms5=$FZY*r"Yql,3`C%J
%<ErbhZ,F%=m9+/SFgg@EQ(<P2a1aOf9-l@Z=\!cKG?fu^ragDj)oP&\>;/a@@KUG,(j8d$a4qcEK#6X<JoVpRi?^YHV$-q+0h*=U
%#WHUo8/6JF!lZ\K\7;9bZDUhsXX$mZ^PnY["MSXfUb8F8IYfV5"l?Q%C3e3%L,"sjg.SU]h0<6Z)rE;Xk49U>\[cVp`H7j-JKL6>
%T&[?&-V!":.2JH0b:B+(rS59=qt\2D?hSNa]\Rc$N+k>"\Ron)0AVhQAt)H$9CI7*`hN/G9UGD9,o/2Sfp$$#HmZ+)5>2_)AD!6r
%E[A^:>,ZU)1jY/'[M2Oq:a*AH+J=`[.2[!6;!l1:F`T+RM4#Q91u+J(ED`Nps,G.9)V[@U]o\kJWQila;(0J(8R&>a)9brESp%>n
%[U'_R\7RLrPT4K1<R84Wm>^BlRYC61/3E$B@6Ubhf\?brf565Hj5/%J3l2Wd@=i+SL@F^3/_OC)%sHqrR$'__CCMVIeD9TD]Y5rk
%YO_91M:H&b;qqOJIL=L<:`D_UcFbu+4f+_nfP7[V%n4KF+b$G,KY4TI=$8RE1+g@)&una$RKC8]jUTul#R>#f4dB[1G-\^@Z`6aG
%:DPlfeYY4r6ee-&c02erg$^q;@AG78>=MVfq3Pj9Y376(r+6lrp]OP*LNVMB&U4AV()3T_hgRWm4I+qnmsD@t[u]Is#'M"R1P^,p
%6^+Hq&#.2E]gqTSNF)Ct=o4e^[JQ6?qirP%<9RNbkjs2Q?Htu.p.2RYK^";3A8hcNE1Ad$59LDJCE#;k-`ane]E)"MiuV78G8C%=
%r5[Vn"/o,g>&lIJ$_7-^XK&LU8j:b#NklGFf2L^qn[kNI=#IE+/3j<c\)V\2GA?,(05e22)B)<\#q%SB4IdBIU%Wk%[qD82#2a6V
%qs!9FO*pltb-@"7DN91m2oiZj[RGU+KEm#*5QCMn?[VCk^]!8XaYGM5)F+&>ch$<e3kY7Im?b"pD?f(aYJ0esbQ!%i`?0i9q=0N[
%qW<\p?U";Fc[U[L^AQ1Le!$tAJ,.@H^4-%BPAgHpl[M1YTu-t.TDn2D+92++rssoFQra~>
%AI9_PrivateDataEnd
